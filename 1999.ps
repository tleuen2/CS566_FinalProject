%!PS-Adobe-2.0
%%Creator: dvips(k) 5.78 Copyright 1998 Radical Eye Software (www.radicaleye.com)
%%Title: paper.dvi
%%Pages: 11
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica-Bold Helvetica
%%EndComments
%DVIPSCommandLine: dvips -o paper.ps paper.dvi
%DVIPSParameters: dpi=1200, compressed
%DVIPSSource:  TeX output 1999.06.05:0059
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 2 string 0 1 255{IE S dup 360 add 36 4 index cvrs cvn
put}for pop 65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley
X /rulex X V}B /V{}B /RV statusdict begin /product where{pop false[
(Display)(NeXT)(LaserWriter 16/600)]{dup length product length le{dup
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 1200 1200 (paper.dvi)
@start
%DVIPSBitmapFont: Fa cmti9 9 37
/Fa 37 122 df<EB07C0EB1FE0EB3FF0EB7FF8EBFFFC5A14FE5AA57E14DE6C13BCEB3E3C
1300A21478A314F0A2EB01E0A2EB03C0A2EB0780A2EB0F00131EA25B5B5B12015B485A48
5A001FC7FC123E5A5A5A1240172D5FE72F>39 D<19E04E7E4E7EA4180761A3180F61A318
1F61A3183F61A3187F96CAFCA36060A3170160A3170360A3170760A3170F003FBD12E048
1CF01DF8BEFC7E1DF06C1CE0CAD83FC0CAFC60A3177F95CBFCA35F5FA316015FA316035F
A316075FA3160F5FA3161F5FA3163F5FA3167F94CCFCA3167E163E161C5D5D6BD376>43
D<F0FF80050F13F0057F13FC4CB57E0407EB007FDC1FF8EB1F80DC3FE0EB07C0EEFF804B
48C7EA03E04B5A4B48140FDB1FF0143FDB3FC0147F037F15FF4B485B4A90C7FC4A5A4A48
16C01A804A4816004A486E5A023F163C4A4892C7FCA24A5A495BA25B4990CBFCA2495AA2
495AA2133F4A1304017F903801FFF0030713FC9026FFF01F13FFDB3FF77F4891397E003F
C0DAE1F8EB0FE0DAE3E08048D9E7C06D7E02EFC77F02CE14034801DE8114FC4A81484980
855CA24849825F5CA24890C8FCA25BA25F5B127F615F5BA34D90C7FC5B12FF60173FA260
5B177F60007F5F17FF605E60604C90C8FC003F5D5F4C5A001F4B5A6D5D000F4B5A6D4A5A
00074A485A6C6C4948C9FC6C6CEB0FFC3A00FF807FF86DB512E06D5C6D91CAFC010713F8
010013C043666EE24E>54 D<EF3FF0933803FFFE040F7F043F14C09339FFE01FE0030390
380007F0DB07FC6D7EDB0FF0804B486D7EED7FC04B486D7E4A90C8FC4A48168014074A48
157F021F17C05D4A5A147F14FF4B15FF4918E05D5B5B5DA2495EA292C8FC5BA24E13C049
5AA3605C137FA24E13805CA260A24E1300A2606D5A4E5AA25F131F6E4A5B010F5DEF0F7F
0107030E5B6EEC1EFF0103157C6D6C4A5B6D6CEB03F091397F800FC191273FFDFF815B6E
B512010207D9FC035B020113F0913800040092C7485BA296C7FC5F604D5AA260173F604D
5AA24D5AD807804A5BD80FE093C8FC486C5C003F5E007F4B5A00FF4B5A4C5A5F494A5A49
4A5A494AC9FC48C7EA03FE00F84A5A6C4A5A007EEC3FF0007FECFFC0263FF0075B6CB548
CAFC6C14F8000314E0C61480D91FF8CBFC436670E24E>57 D<037FB97E92BA12F81CFF1D
C06F85DB001F0180C7000713F87090C97F767E4DEE1FFFA27613807613C04C5A7613E0A3
4C48821EF0A34C5AA3644C4818E0A3644B4918C0A2521380A24B494C1300525AA2525A4B
90CA485A515B515B515B4B484C5B5190C7FCF37FFC515A4B48030313E0081F1380E0FFFE
C8FC93B812F04B17801BF01BFE04F8C8380FFF804B48030113E0747F757E757E4B48707E
757E89874A4984A2757FA24A5BA3894A90CAFCA3654A5AA263A24A486163A2654A485F9A
C7FC63515A4A48601BFF505B505B4A484C5B505B505B5090C8FC4949EEFFFE4F5B070713
F049051F5B011F4CB51280007FBA48C9FCBB12F81AE097CAFC6C18E0646675E56C>66
D<DF7FF81560060FB515F095B600E0130105036F14E0051F03FC1303057F9026E003FE13
07932601FFFCC7007F130F040701E091391F801FC04C0180913807C03FDC3FFEC83803E0
7FDC7FF8ED01F0922601FFE0923900F8FF804B4916F94B90CA127FDB1FFE83DB3FF81900
4B48834B5A4A5B4A49715A4A90CBFC4A5A4A481807023F624A5A4A5A5D4963495B494918
03A24990CC5B5B5C133F4948621C07495AA2484962A25A4A735A4898C8FCA2485BA3485B
A34890D0FCA4485AA5485AA65BF301C0517EA3515AA3515AA2007F50C8FCA21B3EA26C6C
61A263A2001F4F5A6D4E5A000F4F5AA26C6C4E5A50C9FC6C6D173E626C6D5F6C6D4C5A01
7F4D5A6D6CEE0FC06D6C4C5A6D6C4CCAFC6DB416FE6D6DEC03F86D01E0EC0FF06D01FCEC
7FC0913B3FFFC007FF806E90B548CBFC020715F8020115C0DA003F49CCFC030113E0646C
69E86E>I<037FBB12F892BC12FCA381DB001F01C0C8121F7049030113F8F4003F95CA12
1F1D0F1D07A24C5A1D03A21EF04C5AA44C5AA31EE04C5AA44B5BA2507E507E4B49020715
C0F501809AC7FCA24B494A5AA31A1F4B90C890C9FC62A2624B4815FE1903193F93B7FC4B
5EA4DB7FF8C7EA3FF819071903A24B485DA44A495DA31D384A494A48147CA3654A496E5A
96C8485AA21C034A90CB5BA2525AA24A484E5AA21C1F9AC7FC4A48601C7EA2644A5A1B01
515A1B074A484D5A1B1F1B3F515A494917FF08035B1A1F4995B55A011F171F007FBCFCBD
C8FCA2636C62666676E568>69 D<037FBB12E092BC12F0A381DB001F01C0C87E70490307
13E01C0095CA127F1D3F1D1FA24C48170FA31EC04C5AA44C5AA31E804C5AA44B5BA3F203
804B494A6C14001D069AC7FCA24B494A5AA31A1F4B90C890C9FCA262624B48157E1AFE19
03193F4BB75AA44B5E04F8C7123F190719034B485DA44A495DA44A494A5AA44A495D73CA
FC96CBFCA24A90CEFCA44A5AA44A5AA44A5AA44A5AA4495BA35B011F13FC007FB712C0B8
7EA36C5E646676E564>I<037FB600FE91B712FC92B84916FEA24F18FC6F4B6D16F8DB00
1F01F0C9003FEBE0007001C07013804E95C7FC95CA5BA44C484D5AA44C484D5AA44C484D
5AA44C484C5BA44B494C5BA44B494C5BA44B494C90C8FCA44B90CA485AA44B484D5AA293
BAFCA24B61A304FCCA127F4B484D5AA44B484C5BA44A494C5BA44A494C5BA44A494C90C9
FCA44A90CA485AA44A484D5AA44A484D5AA44A484D5AA44A484C5BA449494C5BA3496001
1F01F8043F13F0007FB600FC91B712F8B76C498270844C606C4B6D5E776676E572>72
D<033FB7FC4B168092B8FC816F1600DB000F01F8C7FC7013E06060A44C90C8FCA44C5AA4
4C5AA44C5AA44C5AA44B5BA44B5BA44B5BA44B90C9FCA44B5AA44B5AA44B5AA44B5AA44A
5BA44A5BA44A5BA44A90CAFCA44A5AA44A5AA44A5AA44A5AA35B010F13FC003FB7FC4882
B8FCA26C93C9FC416677E53B>I<4CB712F84C16FCA37016F893C7000FEBF800060313E0
A262A44E5BA44E90C7FCA44E5AA44E5AA44E5AA44E5AA44D5BA44D5BA44D5BA44D90C8FC
A44D5AA44D5AA44D5AA44D5AA44C5BA44C5BA44C5BA2EA03E0EA0FF0486C4A90C9FC487E
127F5F00FF151FA24C5A5B4C5A495D01C014FF90C85B00F84A5B4B5B007C4A90CAFC4B5A
6C4A5A003F4A5A6C6C495A3A0FC001FFC02607F8075B0001B548CBFC6C14F8013F13C0D9
07FECCFC4E6971E551>I<037FB712C092B87EA36F5EDB001F01F8C9FC7013C060A295CA
FCA34C5AA44C5AA44C5AA44C5AA44B5BA44B5BA44B5BA44B90CBFCA44B5AA44B5AA44B5A
A44B5AA44A5BA31C604A4917F01B01A2F303E04A5BA2F307C0A24A90CA120F1C80A2F31F
004A5A631B3E1B7E4A5A63A21A014A484C5A1A07631A0F4A48161F505A1A7FF101FF4949
4B5B190F193F494CB55A011F161F007FBBC7FCBCFCA2626C61546676E560>76
D<037FB500C0073FB512F092B66C4F14F89DB6FCA26F5115F0DB001F6DF38000705049C7
FC9C3807DFFC05BFF2FFF8F70FBFA2F71F3FDC1F3F96383E7FF0A2716C187CA2043E5048
5A545AA2545A047C08E15BF607C1F60F81717E04F84F485B1E3EA21E7CDB01F05090C8FC
1EF8F501F0A24B486C6C4C48485AA2F507C0F50F80DB07C0505AF51F00A21D3EDB0F804E
495AA2716C5EA2DB1F004D48495A525AA2525A033E515A525A52C7FC717F4B063E495B64
A2644B505B515A515AA24A486D6D49484990C9FCA2515A51C7FC4A48505A1B3EA2634A48
4D4A5AA2726C485AA24A484C484A5A505AA2505A4AC84AC8485AA21A3EF03FF0023E4D4B
5A62A2F1F1F04A505BF1F3E0F1F7C0A24A6FB4484A5BA297C8FC01015F01035190CAFC01
075F497ED93FFE4C5D48B500C04B037F13C0007F02FF020F4AB712F0B76C4A4982A293C7
49606C4A6E486D5E8D6675E58A>I<037FB56C4BB612FC92B66C4B15FEA220FC6F6E6F15
F8DB000FDD0007EBFE00706D040013F0F67FC04C627295C7FCA205BF187E93261F3FFC17
7CA2717EA2DC3E0F6084A2717F047C4E5AA2717FA24C6C4D5A85A2717F4B484E5A187F85
A24B486D6C4B5AA3727E4B484EC8FC180F85A24B486D6D143EA3727F4BC75F8486A2033E
6E6D5CA2197F864B4E5A737EA34B6F6C495AA2190F864A484E5A731380A2854A4871485A
A27313E0A24A484EC9FC7313F0A21A7F4A48EFF83EA2F23FFCA24ACA001F5B1BFEA21A0F
023E725AA286A24A715BA3864A61A28613010103735A1307497ED93FFE183F48B56C6000
7F02FE171FB7FC8293CA6CCAFC6C4A1706776676E572>I<037FB9FC92BA12F01CFE767E
6F85DB001F01C0C7001F13F0704902017F756C7E95C96C7EF40FFF761380A24C487013C0
A27613E0A24C5A1EF0A34C5AA3644C5AA44B494C13E0A31EC04B495E1E80A25213004B5B
525A651C7F4B90CA5B525A515B515B4B484C5B5190C7FCF33FFC515A4B48923801FFE008
0F5B97B5C8FC93B812FC4B17F01B8008F8C9FC04F8CDFC4B5AA44A5BA44A5BA44A5BA44A
90CEFCA44A5AA44A5AA44A5AA44A5AA4495BA35B011F7F007FB612FCB77E825E6C5D6466
76E568>80 D<DEFFC014C0050F01FCEB01E0057F01FF13034CB600C013C00407EDE0074C
9039007FF00FDC3FF8903807F81FDC7FC0903901FC3F804C48EB00FE4B48C8EA3F7F4B48
16FF4B486F13004B48814B5A4B48814B485EA24BC912034A5A634A5AA214074B5F140FA3
021F605DA3634A7EA3745A6F93C8FCA2141F81818216E06E13FCEEFF806E14F817FF6E15
F06E15FE6E6F7E6F15E06F816F15FC6F81030381ED007F040F81040081171F050180EF00
3F06077F848484737EA2193FA4191F137013F862485AA3193F000361A3620007187F62A2
4FC8FC120F4E5AA26D4C5A001F4D5AA26D4C5A4E5A486C4C5A6D4C5A6E4BC9FCD9DFC04A
5A267F8FF0EC07FCD907F84A5A267E03FFEC3FF06D9039F001FFC0486C6CB65A486D4ACA
FC48010F14F848010114C000409026001FFECBFC536C74E856>83
D<010FBC12FE491BFFA25B1DFE9226E000039038F00001D97FFCC74AEB001F02F04C1407
D9FFC0190391C81701491BFC00014C5B491A005B1203494B90C9FC5B00071CF85B4D5A12
0F5BA248C9484815011DF0A2123E4D5A5AA2F403E0484C5AA20070F301C0CA94C7FC4C5B
A44C5BA44C5BA44C90CBFCA44C5AA44C5AA44C5AA44C5AA44B5BA44B5BA44B5BA44B90CC
FCA44B5AA44B5AA44B5AA215FF5C021F13FF0007B812FC4883A36C5F606566E46E>I<ED
03FCED1FFF037F13C04AB5EAE01E913A07FE03F03F913B0FF800F87F80DA1FE090387CFF
C0DA7FC0133C4A48013F13804990C77E495A49488049481600131F5C494880017F5E495A
A2485B4D5A5A4890C8FCA2484C5A5B121FA2494B5A123FA348484B5AA448484B5AA4494A
5BA3190E4CEB001FA25BA24C48133EA3160F007F4B48137CA2163F6C6C027F14F816FF00
1FEC01F7DB03E7EB01F06C6CEB07C7DB0F83EB03E06C6CEB3F036C6CD97E01EB07C03D01
FF03FC00FE0F806CD9FFF090387FFF00013F496D5A010F01806D5AD903FCC7EA03F04044
70C14E>97 D<EE7FE0923807FFFC031F7F037FEBFF80913A01FFC03FC0913A07FE0007E0
DA0FF8EB03F04A481301DA7FC0EB00F84A5A4990C7EA03FC494814074948140F4948141F
011F153F495A4AEC7FF8137F4948EC3FF04817E04AEC1FC048EE0F8094C7FC4890CAFCA2
485AA2121F5B123FA3485AA4485AA55BA718101838007F177C18F81701003FEE03F0EF07
E0EF0FC06C6CED1F80000FEE3F006D15FE0007ED03FC6C6CEC0FF06C6CEC3FE06C6C9038
01FF8090277FC01FFEC7FC6DB512F8010F14E0010391C8FC9038007FF036446FC147>99
D<F103E095380FFFF04DB5FC5FA37114E0EF000184A21AC0A44E1380A44E1300A44E5AA4
4E5AA44E5AA44E5AA4DB03FC495AED1FFF037F13C04AB512E0913B07FE03F0FFC091390F
F800F8DA1FE0137CDA7FC0133C4A48013F5B4990C77E495A494880494893C7FC131F5C49
4880017F5E495AA2485B4D5A5A4890C8FCA2484C5A5B121FA2494B5A123FA348484B5AA4
48484B5AA4494A5BA3190E4CEB001FA25BA24C48133EA3160F007F4B485BA2163F6C6C02
7F5C16FF001FEC01F7DB03E7495A6C6CEB07C7DB0F83495A6C6CEB3F036C6CD97E01495A
3D01FF03FC00FE0F806CD9FFF0D97FFFC7FC013F496D5A010F01806D5AD903FCC7EA03F0
446A70E74E>I<EEFF80030F13F0037F13FC4AB57E0207EB80FF913A1FFC001F80DA3FF0
EB0FC0DA7FC0EB07E04948C7FC495A4948EC03F0495A495A133F495A495AEF07E0485B5A
91C8EA0FC048161F48178049ED7F00001F16FEEE03FC4848EC1FF84BB45A92B512C048B7
C7FC16F816800380C8FCD8FFF0CAFCA45BA65BA618201870007F17F8EF01F017036C6CED
07E0EF0FC0EF1F80001FEE3F006C6C157E4C5A6C6CEC07F80003ED1FE06C6CEC7FC06C6C
D903FFC7FC90397FC03FFC6DB512F06D14C0010749C8FC010013E035446EC147>I<19FE
953803FFC0060F13E04E13F095383F81F895387E007C06FE13FE943801FC010503EB03FF
4D485A61170F9538F01FFE171FF10FFC053F14F8F107F09538E003E0057F90C7FCA36017
FFA4605EA54C90C8FCA54C5AA592B712F84A825CA26E5E91C7D81FF8C8FCA54C5AA5167F
5FA54C5AA54B5BA54B90C9FCA54B5AA54B5AA64B5AA54B5AA45E157FA45E15FFA35E5CA2
93CAFCA35C5DA34A5AA2D807805BEA0FE0381FF00F003F5C127F00FF5C141F5D01E05BEB
C03F018090CBFC387E007E5C383F81F86CB45A6C5B00031380C648CCFC488984E92F>I<
EE03FCEE1FFF93B57E4BECC03C923A07FE07E07E923A1FF001F0FF92273FE000F91380DB
7F80137D4BC7003F13004A5A4A488014074A485D4A5A023F150F5D027F5E4A5A5B5D494C
5AA24990C8FCA2494C5A5C131FA24A4B5A133FA349484B5AA44A4A5B13FFA34A4A90C7FC
A44D5AA44A4A5A137F171F6E143F60013F157F17FF011F5C6E495B010F5C0107EC0FBF6E
EB3F3F6D6C90387E7FE0903901FF03FC9039007FFFF06E13E0020F903880FFC0913803FC
0091C8FCA24C5BA44C90C8FCA44C5AA34C5AEA0780D81FC04A5A487E486C4A5A5F00FF4B
5A4C5A494990C9FC4B5A49495A49EB1FF86CC7EA7FF03A3FE001FFC06CB6CAFC6C14FC00
0314F0D8001F90CBFC416177C147>I<ED0F8091383FFFC00107B5FC5BA36D5CEB000780
A293CAFCA44A5AA44A5AA44A5AA44A5AA44A5AA44A5AA44990388003FF041F13E0047F13
F80381B57E49903907FE03FE92390FE000FFDB1F806D7E4BC77F903807FE7C4B6E7E6E5A
5D495B5D8592C8FC495AA24A5E187F495AA25CA249484B5AA449484A5BA34D90C7FC485B
A34D5A4890C8FCA24D5AA2485A4D5AA24D481370484818F8A24D5AA24848EF01F0EFFFC0
A2F103E048484A13801AC01907060013804848170F1A0061191E48486E5C197C715B9438
3F83F0496FB45A715B007EC96C90C7FC003CEE01FC456A75E74E>I<ED0780ED1FC0ED3F
E0ED7FF015FFA316E016C0ED7F80ED3F00151E92C7FCB3A3EB01FCEB07FF497F013F7F90
387E0FE09038F807F0D801F07F13E0D803C07F12071380120F130048130F121E123E4A5A
5AA24A5A5AA24A5AA21270C7485AA2495BA34990C7FCA3495AA2495AA3495AA3495AA249
4813E0ED01F0A2EBFFC0A2ED03E0481380A2ED07C04813001680150F4914005D151E153E
153C00015C15F80000495A90387F07E06DB45A6D90C7FC6D5AEB03F8246573E22F>I<15
3EEC7FFF011FB5FC5BA36D13FEEB001F140FA215FCA4EC1FF8A4EC3FF0A4EC7FE0A4ECFF
C0A4491380A4491300A4495AA4495AA4495AA4495AA4495AA4495AA4485BA44890C7FCA4
485AA4485AA4485AA315E0393FF001F0A4397FE003E0A49038C007C012FFA2EC0F80127F
A2EC1F00A2003F133E143C001F137C6C6C5A6CB45A6C5B6C5BD8003FC7FC206A73E727>
108 D<D90FC0DA0FFCED1FF8D93FF091267FFF8091B5FCD97FFC49B500E0010314C0496C
01076E010F802601F07F90271FF80FF890393FF01FF0D803E09028803F8003FC90397F00
07F82B07C03FC07E0001FE01FC6D7E4C6E484880D80F80D9E1F0ED03E0DBE3E06DD987C0
6D7ED81F00D9E7C0ED8F80DBEF80039FC7FC03FFC813BE003E4A16BC08FC824B5E484948
5EA24B4C93C7FC4E5E4849485EA24B5EA2D87001494A90C8485A1200A34990C848484B5A
A3535A49484B5AA3535A49484B5AA2535AA249484B484B5AA352903880038049484B48EF
07C0A2521300A249484B48EF0F80525AA2F71F0049484A494A5A1F1E1F3E53133C48494A
90C8157C1F781FF8674890C848480307495A1E030A03495A993901FC1F80494C6FB5C7FC
494C705A6C486F48EE3FF86C486F48EE0FE0724473C17D>I<D90FC0EC0FFCD93FF89138
7FFF80496C49B512E0496C0107802601F07F90391FF80FF8D803E0903A803F8003FC3D07
C03FC07E0001FE4C80D80F80EBE1F0DBE3E06D7FD81F00EBE7C0EDEF8003FFC8FC003E5C
865D48495AA24B5E6048495AA25DA2D87001494A90C7FC1200A34990C8485AA34E5A495A
A34E5A495AA24E5AA2495A4E5AA29539FFC001C04948EF03E0A24D1380A24948EF07C04D
1300A2F20F8049484A5A1B00624E131E4849173E1A3C1A7C1A784890C800035C19010501
495A943900FE0FC04993387FFF80497090C7FC6C48EE1FFC6C48EE07F04B4473C156>I<
EE3FE0923803FFFE031F6D7E037F80913A01FFC03FF04A9038000FF8DA0FFCEB03FCDA1F
F06D7EDA3FC06D7EDAFF8015804990C8127F494816C0495A010FEE3FE0495A4A16F0133F
495A494816F8A2485B5AA24890C9FCA2485AA2001F177F5B123FA34848EEFFF0A448484B
13E0A319C05F491780A24D1300A24D5AA2604D5AA2007F4C5A4D5A60003F16FF4C5B6C6C
93C7FC4C5A000F4B5A6D4A5A0007ED1FE06C6CEC7FC06C6C49485A2800FF8007FEC8FC90
397FE01FFC011FB512F06D14C0010349C9FC9038003FE03D4470C14E>I<DA01F8EC07F8
DA07FFEC3FFE4A6D90B57E4A6D4814E0913C3E0FE007F81FF0913C7C07F00FC007F802F8
6D48486C7E94393E0001FED901F06D5A4D6D7ED903E0EBFDF0DCFFE015805FD907C04AEC
7FC094C8FCA24948484816E05EA34948485AA21AFFA2010E495A90C7FCA34B485CA44B48
4A13C0A44A494A1380A31B004A90C85AA262191F4A485EA24F5A624A5A4F5AA24F5A021F
5F6F4A90C7FC6061023F4B5A6F4A5A4E5A70495ADA7FE74A5A7049C8FC9239E3E003FE92
39E1F80FFCDAFFC0B512F07013C0041F90C9FCEE07F84949CBFCA44990CCFCA4495AA449
5AA4495AA4133F497E003FB512FC4880B7FC5D6C5C4B5F7EC14E>I<D90FC0EC3FE0D93F
F0903801FFFCD97FFC010713FF496C011F14802601F07F90393FC03FC0D803E0903A807E
0007E02807C03FC0F814F0DBC1F0130FD80F80D9E3E0EB1FF8DBE7C0133FD81F00D9EF80
137F03FFC7FC4BECFFF0123E4BEC7FE04B15C048017FED3F804BEC1F0095C7FC5D4813FF
5DA3D870015B1200A34990CAFCA4495AA4495AA4495AA4495AA4495AA4495AA4485BA448
90CBFCA45B5B6C5A6C5A3D4473C141>114 D<ED03FF033F13E092B57E020314FC913907
FE01FE91390FF0003FDA1FC0EB1F804AC7120F4AEC07C014FE4948EC03E017070103151F
4A143F0107157FA2010FEDFFC05C6EEC7F80EF3F00171E011F92C7FC80806D7E15F0EDFF
8016F06D14FC16FF6D816D816D816E806E80140F020180EC000F03007F163F160FA21607
A2D807801403EA1FC0487E487E5F12FFA2495D1607495D49140F48C85B00F84B5AA2007C
4B5A007E4BC7FC6C15FE6C6CEB03FCD80FE0EB0FF8D807FCEBFFE06CB65AC692C8FC013F
13F801031380334474C13F>I<151E153F4B7E15FF5CA44A90C7FCA44A5AA44A5AA44A5A
A44A5AA44A5AA2003FB712804816C0B8FCA26C1680C701C0C7FC495BA44990C8FCA4495A
A4495AA4495AA4495AA4495AA4495AA4485BA3160E4890C7121FA3163E485A5EA25E5B00
0F4A5AA24B5A00075D15074B5A4BC7FC0003143E5D0001495A3900FE07F090387FFFE06D
13806D90C8FCEB03F82A6073DD33>I<EB01FCEB07FF011F6D151C496D157E90267E0FE0
15FF9026F807F04A1380D801F07F13E0D803C06D4A130012071380120F01004C5A48130F
121E123E4A484A5A5AA24A5A484D5AA24A5AA200704D5AC7485AA2495B4E5AA24990C8FC
A24E5A495AA349484A5BA449484A90C7FCA31A1C4A4A48133E133FA34D48137CA44E13F8
171F173F011FEF01F0177F17FFF103E06D6CEB01EF0107DA03C7EB07C06EEB0F876D6C90
3A3F03FC0F80902801FF80FE01EB1F006D903AFFFC00FFFE023F01F06D5A020F01C06D5A
020190C7EA07E0474473C152>I<D901FCED0780D907FFED0FC0011F6DEC1FE0496DEC3F
F090267E0FE0EC7FF89026F807F014FFD801F07F13E0D803C06D15FC0007177F0180163F
000F171F010017F848010F150F121E003E17074A5A5A18034A4815F05AA24A5AA2007018
E0C7485AA2495BF007C0A24990C8FCA2F00F80495AA2190049485DA3183E495A183C187C
A24A1578013F16F8601701A26017036017074D5A011F93C7FC5F171E6D6C5C5F010715F8
6E495A6D6C495A6D6CEB0FC06D9038C03F8091267FFFFEC8FC021F5B020713F002001380
3E4473C147>I<D901FC190FD907FFF11F80011F6D0370EC3FC0496DDA01F8EC7FE09026
7E0FE04A6CECFFF09026F807F04A6C5BD801F07F13E0D803C06D4A4815F800078601801A
7F000F1B3F01004C4815F048010F191F121E003E1B0F4A484A5A5A1C074A4819E0484D5A
A24A5AA200704D4815C0C7485AA2495B4D49EC0F80A24990C7FCA24D90C8EA1F00495AA3
49484A48153EA31C3C49484A48157CA3644A5D013F031F5E1B01A2641B03A2515AA2053F
4B5A131F057F4BC7FC1B1E6D6C4A6C143E05F7153C6D6CD901F35D932603E3FE5C6D6CD9
07C114016D6C903B0F80FF8007E06D903CE03F007FE03FC091263FFFFE6DB5C8FC6E4901
0F5B020701F0010313F89126007FC09038007FE05D4473C166>I<EB01FCEB07FF011F6D
151C496D157E90267E0FE015FF9026F807F04A1380D801F07F13E0D803C06D4A13001207
1380120F01004C5A48130F121E123E4A484A5A5AA24A5A484D5AA24A5AA200704D5AC748
5AA2495B4E5AA24990C8FCA24E5A495AA349484A5BA449484A90C7FCA44A4A5A133FA34D
5AA44D5AA2173F131F4D5A17FFA26D6C5B01074A5B6E130F6D6CEB3F7F903901FF80FE6D
9039FFFCFFC0023F13F0020F13C00201130091C7485BA34C90C8FCA25F01401407D803F0
5D486C140F486C5D001F151F6D5D48484A5A5F49147F4C5A4992C9FC01C0495A003EC748
5A4B5A6C4A5A4B5A6C6CEB7FC06C6C4848CAFC3903F80FFE6CB512F86C14E0013F1380D9
0FF8CBFC416173C14A>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmtt10 10 47
/Fb 47 123 df<160FEE1F80EE7FC0EEFFE015035D5D033F13C04B138092B512004A13FC
4A5B4A5B4A13C04A5B4A90C7FC4A5A5D4A5A495B495B5D5B495B92C8FC495A133F5C495A
A2495AA2485BA2485BA2485BA34890C9FCA3485AA3485AA4485AA612FF5BB07F127FA66C
7EA46C7EA36C7EA36C7FA36C7FA26C7FA26C7FA26D7EA26D7E80131F6D7E816D7F7F816D
7F6D7F6E7E816E7E6E7F6E7F6E13F06E7F6E7F6E13FF6F13806F13C0030F13E081811500
EE7FC0EE1F80EE0F002B8063F257>40 D<120E123FEA7FC07FEAFFF87F6C7E6D7E6C7F6C
7F00077F6C7F6C7F6C6C7E6D7E6D7F6D7F7F6D7F6D7F6D7F147F816E7E141F6E7E82806E
7FA26E7FA26E7FA26F7EA26F7EA36F7EA36F7EA36F1380A46F13C0A617E081B05D17C0A6
4B1380A44B1300A34B5AA34B5AA34B5AA24B5AA24A5BA24A5BA24A5B5C93C7FC4A5A143F
4A5A5D14FF495B495B495B5B495B4990C8FC495A48485A485B485B001F5B485B485B49C9
FC485A5BEA7FE05B6CCAFC120E2B8072F257>I<EB1F80EB7FE048487E487F487F80487F
15805A15C0A315E07EA27EA27E7E6C7EEB1F7FEB00FF15C0A25B15805B15005B495A131F
495A13FF00035B001F5B485B485BB55A91C7FC5B13F8EA7FE0EA3F80001EC8FC1B2C6294
57>44 D<000FBAFC003F19C04819E0A2BB12F0A46C19E0A26C19C0000F1900440C77B857
>I<13F8EA03FE380FFF804813C04813E0A24813F0A2B512F8A56C13F0A26C13E0A26C13
C06C13803803FE00EA00F815155F9457>I<ED03FF031F13E092B512FC020314FF4A8102
1F15E04A814A8191B77E498249D9FE017F499026F8007F7F4901E0011F7F4B7F4990C700
037F49486E7F4A80017F8349486F7E4A153F48844A151F48496F7EA248496F1380A291C9
7E4819C0A248487013E0A34982003F19F0A349177F007F19F8A549173F00FF19FCB16D17
7FA2007F19F8A56D17FF003F19F0A36D5E001F19E0A26D5EA26C19C06E5D6C19806E5DA2
6C6D4B1300A26C6D4B5AA26C6D4B5AA26D6C4B5A6D6C4A5B6E5C6D6D495B6D6D495B6F5B
6D01F8017F5B6DD9FE01B5C7FC6D90B65A6D5E6E5D6E5D6E5D020715806E92C8FC020014
FC031F13E0030390C9FC466978E657>48 D<151E153F4B7E4B7EA25CA25CA25C5CA25C5C
5C91B5FC5B5B130F137F001FB6FC5A5AB512FB14F314E31483EBFE03EA7FF8EA1FC0C7FC
B3B3B3A9000FB812F0003F17FC4817FEA2BAFCA26C17FEA26C17FC000F17F038676FE657
>I<923803FFC0037F13FE0203B612C0020F15F0023F15FC91B8FC010317C04983498349
834949C66C7F4901E001077F90B5008001017F4849C86C13804A814801F0030F13C04A81
48496F13E0A248496F13F0A291CAFC4819F849177FA76D17FF6C19F0A26E5D6C19E06E5D
6C6D4B13C06C6D4B13806E5D6C6D4B13006DB4EDFFFE6D01C001035B6D01F8011F5B0107
90B712E06D5F010094C7FC023F15FC020F15F0020315C0020F15F0027F15FE49B87E4983
010F02E714F0499026F0000F7F017F01C0010313FE4948C86C7E48496F13804801F0030F
13C04A8148496F13E048496F13F04890CA13F849177F003F19FC49173F007F19FE49171F
A34848EF0FFFA86D5F007F19FEA26D173FA26C6CEF7FFCA26C6CEFFFF86E5D6C6D4B13F0
6E5D6C6D4B13E06E5D6C01FE037F13C06C6D6C49B512806C02E0010714006D01FE017F5B
6D90B75A6D5F6D5F010317C06D5F6D6C4BC7FC021F15F8020315C0DA007F49C8FC030713
E0486979E657>56 D<923807FF80037F13F80203B512FE020F6E7E023F15E091B77E4916
FC49824982011F8349D9FC00804901C0011F7F90B5C700077F48498002F802007F48496F
7E4849153F4849824A151F4890C96C7E5B003F7113805B7213C0485AA27213E012FF5B72
13F0A41AF8A67F007F19FCA37F003F5F7F001F5F7F6C6D5D606C6D5D6E5D6C6D5D6C01FC
92B5FC6C6D14036D6C6C131F6DD9F801B6FC6D90B8FC6D173F6D16FE6DEEFC7F010004F8
13F86E15E0021F15800207ECFE00020014F0031F90C712FF92C913F0A34E13E0A34E13C0
A2601A80A24E130060D801FC5F486C163F486C4C5A487F4E5A486D4A5B5F4D5B4D5B4A4A
5B5F6C90C8B5C7FC6E495B02E0010F5B6C01FC90B55A91B75A6C17C06C5F6C94C8FC6D15
FC6D15F0010F15C0010392C9FC010014FC020713C0466978E657>I<13F8EA03FE380FFF
804813C04813E0A24813F0A2B512F8A56C13F0A26C13E0A26C13C06C13803803FE00EA00
F890C7FCB3AB13F8EA03FE380FFF804813C04813E0A24813F0A2B512F8A56C13F0A26C13
E0A26C13C06C13803803FE00EA00F815475FC657>I<190FF13FC0F17FE0F001FF4E13F0
180F60187F95B512E01703050F14C04D1400057F13FC94B55A040314E04C5C041F91C7FC
4C5B93B512F803035C4B14C0031F91C8FC4B5B92B512F84A5C020714C04A5C023F49C9FC
91B55A4914F0010714C0495C013F49CAFC495B48B512F0485C000F1480003F91CBFC4813
FC14F0B55A1480A214E06C7F14FC6C13FF000F80000314E06C806C6C13FC6D7F010F6D7E
6D80010114F06D14FC023F7F020F6D7E6E80020114F06E80033F13FE6F7F030714C06F14
F0030080043F13FE707F040714C07080040014F8717F051F13FF7114C0050314E0170072
13F0181F8418037213E0F0007FF13FC0F10F00445477DC57>60 D<000FBA12FC003F19FF
481A80A2BC12C0A46C1A80A26C1A00000F19FCCFFCAE000FBA12FC003F19FF481A80A2BC
12C0A46C1A80A26C1A00000F19FC4A267AC557>I<EE7FE0923801FFF84B7FA24B7FA44B
7FA44B80A216F9A3033F80A4037F8016F0A303FF80A3EEE07FA24A81A3EEC03F4A81A4EE
801F4A81A44A496C7EA44A824B7FA44A486D7FA4027F824B7FA402FF824B7FA3498392B7
FCA34983A54983A20380C7121FA24983A292C87EA349844A81A3013F844A81A3017F84A2
001FB500E0027FEBFF804802F849B612C0486E4915E0B618F06F5BA24B7F6C1AE06C4A6D
15C06C02E06D6C14804C677BE657>65 D<001FB812C04817FC4817FFBA12C019F08519FE
6C846C856C8526001FFEC880181F06077F727F84727F197F737EA2191FA28685A84F5AA3
193F62197F4F5A604E5B4E5B4E5B063F5B4DB5C7FC91B85A6119F0611980A219E019F819
FE737E4AC7000180DD001F7F06037F727F727F197F737E737E851B8085A27313C0A37313
E0A9611BC0A261A24F1380A2614F1300614E485A4E5B180F067F5B001FBA5A48614861BB
5A97C7FC6119F86C18E06C18806C05F8C8FC4B657CE457>I<001FB712FE48EEFFC04817
F0B912FC18FF8519E06C846C846C8426003FFCC7001F7F05037F050080727F181F727F72
7F84727FA2727F197F86193F737EA2731380A2851BC0A2851BE0A285A21BF085A6F27FF8
B01AFF1BF0A5611BE0A261A21BC061A21B8061A24F13006162197F6219FF4E5B604E5B4E
5B60067F5B95B55A050391C7FC051F5B001FB95A48604860BA5A6196C8FC606C17F86C17
C06C4CC9FC4D657DE457>68 D<001FB912804818C04818E0BA12F0A46C18E06C18C06C18
80C801F0C8FCB3B3B3B3A9001FB912804818C04818E0BA12F0A46C18E06C18C06C18803C
6573E457>73 D<0207B512FE91B712F0010716FE011F707E017F17E090B97E4884488448
84A248912680001F7F02F8C712014801E06E6C13804A814A8191C97E48487013C0A34982
A2007F19E0A24982A700FF19F04982B3B3A56D5EA3007F19E0A66D5EA3003F19C06D5EA3
6D5E6C19806E5D6E5D02F092B5FC6C01FC02031400DAFFC0133F6C91B75AA26C606C606C
606D5F011F178001074CC7FC010016F002074AC8FC446977E657>79
D<000FB812E0003F17FE48EFFFC019F0BA12FC856C841AC06C85000F85D8000F90C70001
80EF001F06077F06017F727F85731380857313C085A27313E0A285A21BF085A8611BE0A2
61A24F13C0A2614F1380614F130096B5FC4E5B06075B061F5B4DB5FC92B85A626297C7FC
616119F019C04EC8FC18E092CCFCB3AD000FB6FC003F15C04881A2B77EA26C5DA26C5D00
0F92CBFC4C657DE457>I<000FB712E0003F16FE48EEFFC018F0B912FC846C717E856C84
000F8426001FFEC780050F7F05037F05007F84727F84727F84727FA284A28684A76062A2
60A24E5B604E5B604E90C8FC95B5FC05035B050F5B94B55A91B85A6161614EC9FC608484
85854AC76C7F050F7F05037F1700727EA2727E181FA28584AE1B1EF37F80F3FFC0A25013
E0A4841A811CC01A83000FB500FC80003F02FF16C3486F6D90B51280A2B76C6D1500636C
4B80735B6C92C86C5B000F02FC6F5BCC000313C0DF007FC7FC53677DE457>82
D<DBFFF81478020F9039FF8001FC023F9138F003FE91B600FC7F0103EDFF07010F16C749
16E74993B5FC5B90BAFC48EC801F489038F800014801E0EB003F48498091C81207484881
4981003F825B484882A28412FF4982A484A37FA2007F715A6D705A725A6D93C8FC6C7EA2
6C6C7E806C13F06C13FCECFFC06C14FC6CECFFE06C15FE6DECFFE06D15FE6D6F7E010716
E06D16F8010016FE023F81020782DA007F81030781DB007F80040380DC003F7F05037F17
00F03FFF721380847213C084A27213E0A284D80F8018F0EA3FC0486C177F7F12FFA67FF1
FFE0A27F4E13C0A26D5E6D18806E5D6E4B13006E5D02F84B5A02FEEDFFFCDAFFC001035B
03FE131F92B75A616101E794C7FC01E15ED9E07F5DD9C01F15F0007F010715C06C48C64A
C8FC001EC7000313F0446977E657>I<000FB60203B612C0003F03C0010F15F0486F4915
F8A2B76C4915FCA26C4B6D15F8A26C4B6D15F0000F92C7000315C0D8000F90C90003EBC0
00B3B3B3A96F5D6D61A46D6D4B90C7FCA36D6D4B5AA26D6D4B5A6F157F027F5F6F15FF6E
6C4A5B6F5C6E6D495B6E6D495B6E01F0013F5BDCFE01B5FC6E90B7C8FC6E5E6E6C15F86F
5D6F5D6F5D030392C9FC030014FC041F13E0040390CAFC566780E457>85
D<001FB712C04816E04816F0B812F8A417F017E017C001F0C9FCB3B3B3B3B3B390B712C0
17E017F017F8A46C16F06C16E06C16C02D815DF257>91 D<001FB712C04816E04816F0B8
12F8A47E7E7EC9127FB3B3B3B3B3B3001FB7FC5A5AB8FCA46C16F06C16E06C16C02D817A
F257>93 D<91383FFFF00103B67E011F15E04915F890B712FE48707E488318F048838448
9026F8001F7F02E001017F707E051F7F717F6C4980717F6C49806C90C8806C488190CAFC
727EA6041FB5FC0307B6FC157F0207B7FC143F91B8FC1303130F133F5B90B638F8007F48
4AC7FC4814E04891C8FC4813F84813E048138091C9FCEA7FFCA25B12FF5BA67F007F17FF
7F5F6C6C5D6D5D6C01C0143F6C01F049B512FE02FE013F91B512C06C90BA12E06C1AF06C
1AF87E013F16CF6D16070107DBFC0114F001019226E0007F13E0D9003F91C7000F13C002
0301E091C8FC4D4A77C857>97 D<380FFFFE003F7F488081B6FCA27EA27E120FEA0003B3
EF7FF0933807FFFE041FEBFFC0047F14F003C1B67E03C715FE03CF8103DF16C092B87E86
DDC03F7F9326FC00037F04F001007F04C0147F4C6E7E93C86C13804B814B6F13C04B814B
17E0854B6F13F0A2F27FF85DA2F23FFCA41BFE1A1FAB1A3F1BFCA2811A7F1BF8A26F16FF
1BF0616F17E0616F4B13C0814F13806F4B1300705C70ECFFFE04F0495B70010F5B9326FF
807F5B94B65A6203DF5E03CF93C7FC03C715FC6D01C15D038015E06DD9003F1480023E01
0F01FCC8FC91C813C04F667FE457>I<0303B5FC033F14F04AB612FC020715FF021F16C0
4A16E091B812F05B4917F85B499026FE000713FC4901F013014913804990C7FCEBFFFC48
496E13F8485B4AED7FF04849ED3FE04AED1FC04894C7FC91CBFC5A5B123F5BA2127F5BA3
12FF5BAB7F127FA37F123FA26C7EF001F86DEE03FC6CEF07FE6EED0FFF6C7F6C7F6E5D6C
6DED3FFE6C7F6EEDFFFC6D6C6C5B6D01F0010713F86D01FE017F13F06D90B7FC6D17E001
0117C06D17006E5D021F5D020715F0020115C0DA003F49C7FC030313E0404A74C857>I<
94381FFFFC057F7F94B6FC865EA282A283171FEF0007B3ED07FF037F13E00203B512F802
0F14FE023FECFF874A15E749B712F74993B5FC5B5B49EBFC01499038E0003F4990C7120F
494814034801F8804A80484981485B8448498191C9FC48835B123F4982A2127F5BA312FF
5BAB7F127FA260A26C7E60A26C7E606C7E6E5D6C94B5FC806C6D5C6E5C6C6D5C6C6D5C6E
143F6D6C6C90B6FC6DD9F807EDFFE06D90B912F86D04F714FC6D16E7010104C714FE6D16
87023FDAFE0714FC6E4A7E0207DAF00114F80200DA800014E0DB1FFCCAFC4F667AE457>
I<923803FFC0033F13FC4AB67E020715E0021F15F84A8191B77E49707E4983010F834949
C66C7F4901F0130F49018001037F92C87FD9FFFC157F48496F7E48496F7E4A8148491780
4A815A91C96C13C0485AA248487013E0A3485AA27213F0A212FF90BAFCA71AE01AC01A80
01F8CCFC127FA37F123FA27F121F6DEF1F806CF03FC06EEE7FE06C6DEEFFF0806C7F6C6D
5D6C6D4B13E06E5D6D6C6C4A13C06D01E0143F6D01F891B512806D9026FF800F14006D91
B65A6D5F01005F6E5E021F5E0207168002014BC7FC6E6C14F8030F14C0030001FCC8FC44
4A78C857>I<94380FFFC094B512F8040380040F14FF043F15805E4BB712C05D4B16E0A2
4BEBF8074B13C04BD9000313C05E4B486D13804C6D1300193C03FF92C7FC5EAD000FB912
F0003F84488485BAFCA36C606C606C60C801F0C9FCB3B3AF000FB9FC488448844884A46C
606C606C95C7FC43667AE557>I<F103FEDB0FFE91383FFF8092267FFFC090B512E00203
B5D8F80314F0020FDAFE0F14F84ADAFF3F14FC027F92B6FC91BA12FE5B5B49EFFE3F49D9
FC0702E013FC499026C0007FEB801F49496D15F84AC7000FEC0FF049486E9038C003E097
C7FC49486E7F4A8048844A80A348496F7EA96C6D4B5AA36E5C6C606E5C6D6C4A5BA26D6C
4A5B6E6C133F6D6D4990C8FC9239FC07FFFE92B65A495E60495E6095C9FCD9FFEF5C02C3
14F8DAC07F13C0DB0FFECAFC92CCFCA480137F80A2EB3FFC91B712C06D16FE6DEEFFE019
F84917FE49717E4918E090BA7E488548854801F8C86C7F4801C003037F91CA123F484805
0F138049170348487113C04983007F1AE049187FA200FF1AF049183FA66D187F007F1AE0
6D18FFA26C6C4D13C06D5F6CB4050F13806C01C0043F130002F093B5FC6C01FC03035B6C
D9FFC0023F5B6C02FE0107B55A6C91B85A6D60011F188001074DC7FC6D5F010017F0021F
168002074BC8FCDA007F14E0030301FCC9FC4F707BC857>I<380FFFFE003F7F488081B6
FCA27EA27E120FEA0003B3EF3FFC0403B57E040F14E0043F14F893B67E03C38103C78103
CF8203DF8292B87EEFE00F9326FE00017F04F87F04E0814C147F5E93C8FC4B824B153F5D
A25DA25DA45DB3B1000FB600F0017FB6FC003FDBFC01B712C0486F4816E0A2B84816F0A2
6C4B6C16E0A26C4B6C16C0000F9226F0007F150054657FE457>I<ED0F80ED3FE04B7E4B
7E4A7FA24A7FA56E5BA26E5B6F5A6F5AED0F8092CAFCAE0007B612F0488148814881A47E
7E7EC8121FB3B3AF000FB912E0003F18F84818FCA2BA12FEA26C18FCA26C18F8000F18E0
3F6674E557>I<173EEFFF804C13C04C13E04C13F0A24C13F8A57013F0A27013E07013C0
701380EF3E0094C7FCAE027FB612C049B712E04916F018F85BA27FA27F6D7E91C8127FB3
B3B3B3A2EFFFF0A44C13E0EA0FE0486C5C486C16C0486C5C1880486C5C4C13004C5A16FF
9026FF80035B6C90B65A5F6C5E5F6C5E6C93C7FC000315FC6C15F0D8003F14C0010349C8
FC358C78E557>I<000FB612F8003F81488182B8FCA27EA27E120FC8120FB3B3B3B3A900
0FBAFC003F19C04819E0A2BB12F0A26C19E0A26C19C0000F1900446577E457>108
D<DB07F8EC1FE0D81FFFD91FFFEC7FFC48D9807F6D48487E4801C1B5D8E0076D7EB500E7
DAF01F8002EF5D91B66C488071B67E6C16FD6C93B77E6CDAFC0FECF03FC66CD9F0079138
C01FFCDBC003EC000F03805C03005C4A4B807015074A5DA24A5DA34A5DA44A5DB3B2001F
B5D8800F01FE90383FFFF848DAC03F6D90B512FC486E48028114FEB600F003C114FF93B6
12C3A27014C16C02E0038114FE6C4A6C020014FC6CDA800F49013F13F8584881C757>I<
EF3FFC260FFFFE0103B57E003F6D010F14E048DA803F14F86FB67EB600C38103C7816C02
CF8203DF826C91B87E000FEEE00FD800039126FE00017F04F87F04E0814C147F5E93C8FC
4B824B153F5DA25DA25DA45DB3B1000FB600F0017FB6FC003FDBFC01B712C0486F4816E0
A2B84816F0A26C4B6C16E0A26C4B6C16C0000F9226F0007F150054487FC757>I<ED0FFF
037F13E00203B512FC020F14FF023F15C091B712F049824982010F16FF498349D9FC0380
499026E0007F7F0380131F4948C700077F48496E7F4801F002007F4A157F48844A153F48
496F7E91C97E4819804982003F19C04982A2007F19E04982A3498200FF19F0AB6D5EA200
7F19E0A26D5EA2003F19C06D5EA26C6C4C1380A26E5D6C19006E5D6C6D4B5A6C6D4B5A6E
5C6C6D4A5B6C6D4A5B6E6C131F6D01E0017F5B6DD9FC03B55A6D90B75A6D94C7FC6D5E01
0116F86D5E023F15C06E5D020302FCC8FC020014F0030F90C9FC444A77C857>I<EF7FF0
260FFFFE903807FFFE003F6D011FEBFFC048DA807F14F003C1B67EB600C715FE03CF816C
02DF16C092B87E6C85000FDCC03F7FD800039126FC00037F04F001007F04C0147F4C6E7E
93C86C13804B814B6F13C04B814B17E0854B6F13F0A2F27FF85DA2F23FFCA41BFE1A1FAB
1A3F1BFCA2811A7F1BF8A26F16FF1BF0616F17E0616F4B13C0814F13806F4B1300705C70
ECFFFE04F0495B70010F5B9326FF807F5B94B65A6203DF5E03CF93C7FC03C715FC03C15D
03C015E0043F1480040F01FCC8FC040013C094CAFCB3A8000FB612F0003F15FC4881A2B8
FCA26C5DA26C5D000F15F04F6D7FC757>I<953807FF80000FB500F8023F13F0003F6E49
B512FC486E0107806F011F80B7017F158094B712C06C15034C16E06C5D000F4BEBFC07C7
000F4913E04CD9000313C0EEFFFC4D6D138005E06D13004D147E4D91C7FC94CAFC5E5EA2
5E5EA25EA25EA35EA593CBFCB3A9000FB812F8003F17FE4883A2BA7EA26C95C8FCA26C5F
000F17F84B487BC757>114 D<912603FFFE130F027F9039FFF03F800103B638FC7FC001
0F03FF13E0013F16FF90B9FC5A5A5A5A489038FE000702C0EB007F4848C8120F01F88148
48815B00FF825BA56D6F13C0F07F80D87FF8EE3F006D93C7FC6CB47E14F06CEBFF806C14
FF6C15FC6CEDFFE06C16FC6C16FF013F16C0010F16F0010316FCD9007F81020781DA001F
1580DB007F14C0040114E0DC001F13F01703050013F8D80F80167FD83FC0EE1FFC486C16
0F6D17FE00FF1707A27FA37FA26DEE0FFC7F181F6EED3FF802E0157F6E913801FFF002FC
140F9126FFC001B512E092B712C0198019006001EF5E01E316F001C016C0007F013F92C7
FC263F800F14F8001EC76C90C8FC3F4A74C857>I<157CEC01FE4A7E825CB1000FB912FE
003F844819801AC0BBFCA36C19806C19006C60C700070180C9FCB3B0F107E0F10FF0F11F
F8F13FFCA7197F7015F88019FF704913F06E6D5B70010F13E06E9026FF807F13C06F90B6
FC1A806F16006F5D6F5D030315F06F5D6F6C1480041F01FCC7FC040113E0465D7CDB57>
I<260FFFFE92B512E0003F6D020380486E49806F82B65CA26C82A26C82000F1600D80003
EE003FB3B3A4197FA319FFA260606D6D5C606F143F6D01FC91B5FC9226FF800F91B5FC6E
90B912C01CE0806E19F06E16BF6EDBFE3F14E002014B7E6E6CDAF00F14C0031FDA800714
00030101F8CAFC54487FC657>I<001FB500FC91B612E0486E4915F0486E4915F8B76C48
15FCA46C4B6C15F86C4A6D15F06C4A6D15E026001FFCC9EBE000010F606E5DA20107606E
5DA26D95C7FC6F5CA26D5F6F140FA26D5F6F141FA2027F5E6F143FA2023F5E6F147FA202
1F5E6F14FFA2020F5E6F5BA202075E6F5BA26E93C8FC705AA26E5DEEC00FA26E5DEEE01F
A2037F5CEEF03FA2033F5CEEF87FA2031F5CEEFCFFA2030F5C93B5FCA26F5CA36F91C9FC
A36F5B6F5B705A705A4E487CC657>I<001FB500FC023FB512F8486E4A14FC486E91B612
FEB76C4815FFA46C92C715FE6C4A6E14FC6C4A6E14F8C601C0C900031300A36E5E017F60
A56D6C4C5AA56E161F011F60A3EE07E0EE1FF86E496C133F010F4A6C5CA393B5FCA36D6C
486E485AA3EEFE7F030314C0A2D903FF4C5AA2030780A2EEFC3F6D60030F80038F14F1EE
F81FA2039F14F96D95C7FCEEF00FA303DF14FB9226FFE007B5FC6E5EA34C7EA36E496C5B
A36E90C75B6E486E5ADA07F8EC1FE050487DC657>I<000FB500FE010FB512FC486E013F
14FF486F4815804815C094B712C0A27115806C15806C4B6C15006C4A010F14FCD8000301
C09026007FF8C7FC6D6D4A5A6D6D495B4D5B6E7E6E6C495B6E6C4990C8FC606E6C131F6E
6D485A6E6D485A6E5DEEE0FF6E01F15BDB7FF95BDB3FFB5B93B5C9FC816F5B6F5B6F5BA2
6F5B6F5B167F16FF4B7F4B7F835D4B7F92381FFBFF84DB3FF17FED7FE003FF6D7E4A01C0
7F4C6C7E4A6E7E4A13004A486D7E717E4A486D7F4A5A027F6E7F4B6D7F4A488149496E7E
49163F4B814990C86C7E001FB500FC0103B61280486E4915C0486E4915E0B76C4815F0A4
6C4B6C15E06C4A6D15C06C4A6D15804C477BC657>I<000FB500FC91B612E0003F02FF49
15F0486F4815F84D15FCB712C0A26C15807115F86C4B6C15F0000F02FC6D15E026000FFE
C9EBC00013076E5D627F6F5C97C7FC6D7F606D5F81180F027F5E81023F151F6F5DA2021F
153F6F5D140F6F147F6114076F14FF6180705A6E5E16C0A26E4A90C8FC16E0157F4D5A16
F0153F4D5AED1FF8A24D5AED0FFCA260923807FE3FA203035C16FF177F6F5C17FF8160A2
8295C9FC82A25F161FA25F160F161F5FA2163F5FA2167F5FA216FF5FA25D5F5D1320D803
FE92CAFC486C5B4801805B150F486D485AA24B5A9038FE007F4B5A02035BEBFF0F6C90B5
5A5E6C92CBFC5D6C5C6C5C6C5C6D13C06D90CCFCEB07F84E6D7CC657>I<48BA12F80007
19FE5A865AA462A249C900015B4E5B060F5B4E5B4E13804E90C7FC4E5A4D5B6C484B5B6C
484B5B6C484B5BCA485B4D5B4D90C8FC4D5A4C5B4C5B4C5B4C5B4C5B4C5B4C90C9FC4C5A
4B5B03075B4B5B4B5B4B13804B90CAFC4B5A4A5B4A5B4A5B4A5B4A5B4A5B4A90CBFC4A5A
494916FC49494B7E49494B7E49494B1380495B495B4990C9FC495A485B00075B485B4813
C0485B4890BAFCA2BCFCA56C1A0062001F6149477BC657>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmbx10 10 48
/Fc 48 124 df<4DB5FC057F14F0040FB612FE047F6F7E4BB87E030F17F0033FDAC0037F
92B500F8C7EA3FFC4A02C0EC07FE4A49C8487E020F49033F7F4A01F05D4A4992B57E4A49
5C4C8391B55D4991C8FC5D5B614B815BA3735C735CA27490C7FCF21FFC745A97C9FCAB4E
B612F0BDFCA8D8000749C97EA286B3B3B3A2003FB7D8C001B712FEA85F747CF36A>12
D<B912C0B032107EAC40>45 D<133FEBFFC0000313F0487F487F487F487FA2481480A2B6
12C0A66C1480A26C1400A26C5B6C5B6C5B6C5BC613C0013FC7FC1A1A739935>I<EE03E0
4C7EEE1FF8163F16FF1503151F157F0207B5FC147F90B7FCB8FCA5ECF87F148090C7FCC8
FCB3B3B3B3AA001FBA12F0A8446D73EC5F>49 D<92380FFFE04AB67E020F15F0027F15FE
49B87E010717E04917F8013F8349D9C00714FFD9FFFCC7814801E0023F80480180020F80
4890C86C8048486F80486C6F8002C06E80487F02F86F7F48711480806E18C0B582801BE0
84A21BF0A36C5BA26C5BA26C5B6C5B6C5B00011380D8003CC915E090CAFCA24E14C0A34E
1480A21B004E5BA295B55A624D5CA24D5C624D5C4D91C7FC19FC4D5B4D5B4D5B94B55A96
C8FC4C5B4C5B4C13F04C5B4C5B4C90C9FC4C5AEEFFF85F4B5B4B49EC0FF04B90C8FC4B5A
4B5A4B48ED1FE0ED7FE04B5A4A5B4A90C9FCDA07FC163F4A5A4A4817C04A48167F4A5A4A
CA12FF4948160349BAFC5B4919805B5B5B90BBFC5A5A5A481A005A5A5AA2BCFCA262A44C
6D77EC5F>I<923803FFF8033FEBFFE04AB612FC020FEDFF80023F16E04A16F849B812FE
499026FC007F7F4901C0010F804990C76C80D91FFC020180D93FF08349486E80D9FFF883
02FE81486D8381486E82811B80488084A3814B5CA36C1A005D7E6C4A5E4B91B5FC013F90
C85C6D5AD907F05F90C95A624D5C624D5C97C7FC4D5B4D5B4D5B4D13E04CB55A047F91C8
FC92B612FC4A15F06018FE727E6E16F092C714FC051F7F05076D7E7114E071807180727F
86727F1B80841BC0A21BE01BF084A21BF8131EEBFFC0000301F018FC487F487F487F487F
4880A3B67EA21BF8A41BF04B5C6C1AE092C8FC1BC06C5B4A4B14806C5B02E04B14006C01
805F6C90C9B55A6C01C04A5C6C6D4A5C6C01FC4A5C6DB46C011F5C6D01FC017F91C7FC01
0F90B75A010317F8010017E0023F1680020F03FCC8FC020015C0030701F8C9FC4E6F78EC
5F>I<F11FE04F7E197F19FFA260606060A260606095B5FCA25F5F5F5FA25F5F5F94B6FC
845EEE03FEEE07FCEE0FF817F0161FEE3FE0EE7FC0EEFF8017005D4B5A4B5A4B5A5E151F
4B5A4B5A4B5A93C7FC5C4A5A4A5A4A5A5D141F4A5A4A5A4A5A92C8FC5B495A495A495A5C
131F495A495A495A91C9FC5A485A485A485A5B121F485A485A485A90BC12F0A8CA000102
F0C7FCB30307B912F0A8546D7BEC5F>I<133FEBFFC0000313F0487F487F487F487FA248
1480A2B612C0A66C1480A26C1400A26C5B6C5B6C5B6C5BC613C0013FC7FC90C8FCB3A413
3FEBFFC0000313F0487F487F487F487FA2481480A2B612C0A66C1480A26C1400A26C5B6C
5B6C5B6C5BC613C0013FC7FC1A4A73C935>58 D<F107F0F11FFCA24F7EA24F7EA396B57E
A24E80A34E80A24E80A34E80A24E80A34E80A24E80A295B77EA34D82A24D013F80A218FE
05076D80A24D486C80A218F8051F6D80A24D486C80A24E7E057F8218C005FF6D81A24E7F
4C8495C7FC4C6F80A24D800407845F040F6F80A24C486E80A25F043F6F80A24C486E80A2
5F04FF6F81A24B496F80A294C9FC4B7180A24B487080A293BBFC4B86A24B86A34B86A2DB
7FE0C9000180A24C8203FF875E4A7380A293CB7E4A885D02077380A24A487280A25D021F
7380A24A487280A25D027F7380A24A487281010F13FEB86C037FB91280A8817479F390>
65 D<BDFC1CFCF4FFC01DF81DFF1EC08A1EF8C7003F91C9001F80090314FF0900810A3F
8076807680888B7680A27680A2888BA3771480A99AB61200A4525CA2676467525C525C52
5C670A7F91C7FC99B55A515C090714F0093F14C00807B6C8FC94B912F81DC09AC9FC1DF8
1DFF1EE094C9000114F8756C13FE0A1F6D7E0A0714E07680768076808B777F771480A277
14C020E0A27714F0A220F8A38920FCAA5314F8A45314F0A25314E0A25314C0A29AB61280
64521500525C525C0A3F5C99B65A090F5DC012809CC7FC1EFC1EF01EC053C8FC1DE00AF8
C9FC76727AF188>I<96267FFFC0ED03C0063FB500FCED07E00507B700C0140F053F04F8
141F4CB800FE143F040F716C137F043F9538E001FF93BA6C5A03039226FC000FEBFC0703
0F92C86D5A033F02F892381FFF9F4B02C0030790B5FC4AB548C912014A02F8707E4A4A83
021F02C0170F4A4A834A91CB7E91B500FC84494A84494A8549885E494A85494A855B93CD
7E498890B55AA2484A86A2484A86A25A1F7F485CA3481E3F5DA25AA2F71FC0489BC7FCA2
5DA4B6FCB07EA481A27EA2F70FC06CF61FE0A2817EA36C80F73FC07EA26C80F77F806C80
A26D6DF3FF007F704F5A7F6D6E4F5A6D6E190770626D1C0F6D6E4F5A6D6E4F5A6E01FF4F
5A6E6E4E5A6E6E050390C7FC020702F04D5A6E02FCEF1FFC6E02FFEF7FF86E6C02C04B48
5A6F02F803075B030F02FF037F5B030303FC0107B5C8FC030092B712FC043F60040F18E0
040195C9FCDC003F16FC050716E0DD003F4ACAFCDE007F13C0737675F38A>I<BF12FCA4
8AA4C7003F02C0C8121F1B001C1F1C070A017F888989898989898B89A389A21E7FA28BA2
1E3FF20FF0A5787EA31A1F9BC8FCA31A3FA21A7F1AFF611907197F94B7FCA89438C0007F
19071901851A7F1A3FA21A1FA2F77F80A21A0FF7FF00A5666797C9FCA21E03A267A21E07
A31E0F671E1FA21E3FA21E7F545AA2656565650B3F5B9AB5FC1C031C0F1C7F091FB65AC0
FCA567A371717AF07D>69 D<BF12F0A48AA4C7003F02C0C87E1B03F3007F1C1F0A077F88
1C001D7F1D3FA21D1F1D0F8A1D07A21D03A31D01A28AA289A3F21FE0A3F67F80A49BC7FC
1A3FA41A7FA21AFF6161190F197F94B7FCA89438C0007F190F190385851A7FA21A3FA41A
1FA897CBFCB3A8BBFCA869717AF078>I<96267FFFC0ED03C0063FB500FC4B7E0507B700
C0140F053F04F8141F4CB800FE143F040F716C137F043F9538E001FF93BA6C5A03039226
FC000FEBFC07030F92C86D5A033F02F892381FFF9F4B02C0030790B5FC4AB548C912014A
02F8707E4A4A83021F02C0170F4A4A834A91CB7E91B500FC84494A84494A8549885E494A
85494A855B93CD7E498890B55AA2484A86A2484A86A25A1F7F485CA3481E3F5DA25AA279
5A489BC8FCA25DA4B6FCB07EA2081FBAFCA281A27EA37E97C8001FECE000817EA36C80A2
7E817EA26C80A26D7F7F826D807F6D80826D806D806D806E6D606E806E02E05F0207806E
02FC94B6FC6E02FF5E6E6C02C015076F02F8031F7F030FDAFF8091387FFE3F030303FE90
3907FFFC0F030092B7487E043FF0E001040F9538C0007F040195C7121FDC003F04FC1407
050704E0EC01C0DD003F92CBFCDE007F13C0807675F396>I<BA00F0010FBAFCA8C7003F
02C0CA000302FCC7FCB3B3A794BCFCA805C0CA1203B3B3ABBA00F0010FBAFCA888727AF1
95>I<BA12FCA8C7001F02E0C7FCB3B3B3B3B3A8BA12FCA83E727BF148>I<BBFCA8C7003F
02C0CCFCB3B3B3A6F50FF0A41D1F1EE0A61D3FA31EC01D7FA31DFFA264A2641E8064A264
64646499B5FC635114001B0F1B3F98B6FC1A071A7FBFFCA365A564727AF173>76
D<B800C0051FB8FC83838383A28383C7003F6F93C76CEBC00072DE07FCC7FC84A2848484
03EF8003E78015E303E18103E08185708070807080827080857081708170818371807180
867180718083718171818772807280728084728087728172817281857380738088738073
80857381738189748074807480867480897415807415C07415E0877514F07514F81EFC75
14FE7514FF751587877515C71FE77614F77614FF888888A2888888898989A28989898989
A28A8A8A8A8AA28A8A902603FFFE86B800F8197F1F3F1F1FA21F0F1F07795A795A88727A
F195>78 D<95381FFFF80507B612E0057F15FE0407B812E0041F17F893BAFC030319C003
0F9126FC003F14F0033F02C0010314FC4B49C86C7F4AB500F8031F6D7E4A02E00307804A
4A6F80021F4A6F14F84A49CA6C7F4A49717F91B548717F494A7180494A718049894C8349
4A718049894991CC80A24949737F90B5884B85481F804B85481FC0A2481FE04B85A2481F
F0A2484A7314F8A4481FFCA34B85481FFEA6B61DFFB16C1FFEA36F61A36C1FFCA46C1FF8
6F61A26C1FF0A26F616C1FE0A26C1FC06F61A26C6E4F14806C1F00A26D6D96B55AA26D6E
4D5C6D65705F6D6E4D5C6D656D6E4D5C6D6E4D5C6D6E4D91C7FC6E6D4D5B6E6D94B55A6E
6E4B5C6E02E003075C02036E4B14C06E02FC033F5C6E02FF92B6C8FC033F02E0010714FC
030F02FE017F14F0030391B812C0030096C9FC043F17FC040717E0DC007F4BCAFC050715
E0DD001F01F8CBFC787675F38F>I<BC12FCF3FFF01CFF1DE01DF81DFE777E1EE0C7003F
0280C7000381E0001F14FC0903800900807680768076808876808B888BA28B888BA42080
AB2000A36764A267A267525CA2525C525C525C5291C7FC51B55A09075C091F5C0803B612
E094BA5A9BC8FC1DFC1DE09AC9FC1CF009FCCAFC05C0CEFCB3B3A6BA12F0A871727AF183
>I<BCFC1BFEF3FFF01CFEF4FFC01DF81DFE777EC7003F0280C7000F81E0007F14F0090F
800903807580756C7F768076808B7680A27680A28BA27680A38BA967A4525CA267A2525C
67525C675291C9FC525B51B55A09075C091F14E098B61280081F92CAFC94B912F81DE09A
CBFC1CF8881CFF0580C7003F14C0080780080114F87480093F7F897580758075808AA275
80A28A87A28AA68AA78BA5223022FC79EB01FEA287A3766E14FC210388766E14F82107BA
00E06E6EEB0FF07680766EEB3FE00A009139FF80FFC07791B512800B1F16000B075D0B00
15F8D1000F14E0E4003F138087747AF18F>82 D<922607FFF01578037FD9FF8014FC0203
B600F01301021F03FE1303027F9238FF800749B8EAE00F49EFF01F010F9026FC001FEBFC
3F4901E00100EBFE7F4990C8001FB5FC49481503D9FFF815004849824A161F4884484982
85484982A2488491CB127F5A1A3F1A1F5AA21A0FA2B5FC6E1707A3801A03808080806E71
5A6C6D6C93C8FC15E015FCEDFFE06C15FEEEFFF017FF6C17F8F0FF806C18F06C18FC19FF
6C19C06C85866C19FC6D846D846D856D856D8513016D85023F84020F841403DA007F8315
0FDB007F821607DC003F16801703EF001F060115C0727E191F857314E08585003E84127F
4885A286A3867F1CC0A37FA21C807FA26D4E13007F636D187F6D616D18FF02C0606E5E02
F84C5B02FE4C5B6E6C4B5B03F0033F5B03FF92B5C7FC01F902FC010F5B01F091B75AD9E0
3F5FD9C00F17E0D98003178090C74CC8FC48021F15F848020115C00078DA000301F8C9FC
537675F36A>I<000FC012C0A5481FE0A39226F000014AC7123F92C7180302F8F2007F02
E01B1F4A8791C81903498848487613F0A2491D7F491D3FA3491D1FA3491D0F007F1FF8A3
491D07A748C9F203FCA5CA97C7FCB3B3B3AA0203BCFCA8767079EF85>I<92381FFFF802
03B612E0023F15FC91B87E010317E04917F8499026F8003F7F4948C7000713FF496C6C01
0180496D6D8090B56F7F6F6E7F84486E82727FA2727FA2866C5C846D49836D5B6D90C8FC
6D5A6D5A90CAFCA6057FB6FC047FB7FC030FB8FC92B9FC1407023F158391B6EAC0030103
ECFC00010F14E0013F91C7FC4913FC90B512F0485C4814804891C8FC5A485B5C5A485BA3
B55AA560A2606C7F606C6D4B7E183E6C6D03FE806C6DDA01FC14F86C02C0902607F83FEB
FFF86C6ED91FF015FC6C02FC9026FFE01F14FE6C91B6487E013FEE0007010F4B7F010103
F8010014FCD9001F02C0020F13F8020049CBFC574D7BCB5D>97 D<903803FFF8B6FCA8C6
FC133F7FB3AB943801FFF0053FEBFF804CB612F0040715FE041F6F7E047F16E09326FFFC
008003FB01C0010F13FC92B5C700037F04FC6E7F04F06E14C04C6F7F4C6F7F93C97E747F
4B844B848688A2741480A21DC0A21DE086A21DF0A51DF8AC1DF0A51DE062A21DC0A21D80
A2501400A2646F4C5BA26F4C5B704B5B705F704B5B7092B55ADBEFF8020391C7FCDBC7FE
4A5B922683FF80013F13F80300D9F801B55A4A6DB712C04A011F93C8FC4A010715FC4A01
0115E04A6D6C49C9FC90C9000713C05D747AF26A>I<93383FFFE00307B6FC033F15F04A
B712FC020716FF021F83027F8391B526F8001F7F010302C001077F4991C7487F4901FC82
49495C495B49494A7F90B5FC485C5D5A5A92C86C5B5A725B48496F5B725B725B48715B96
C8FC5C5AA4B5FCAD7EA380A27EA37E806C193FF27F806C80A26C6EEEFF00A26C6E4B5A6C
18036D6D5E6D6D4B5A6D6D151F6D01FF4B5A6D6EECFFE06D02F001035B6D02FE013F5B6D
6C90B648C7FC021F5E020716F0020116C06E6C92C8FC030714F8DB003F90C9FC494D7ACB
55>I<97381FFFC00607B6FCA8F00007190185B3ABEE1FFF0307B512F0033F14FE4AB77E
020716E0021F16F8027FD9FC007F91B500E0EB0FFE010391C70003B6FC494914004901F8
153F494981494981498390B54881484A81A24891C9FC5AA2485BA25AA25AA25C5AA5B5FC
AC7EA57EA2807EA27EA26C7FA27E6F5D6C606C606D7F6F153F6D6D5D6D6D92B67E01076D
020315F86D6D4AEDFFF86D6D6CEB3FFD6D6C9039F803FFF16E90B612E1020F16810203ED
FE01DA007F14F8030F14C09227007FFC0002FCC7FC5D747AF26A>I<EE3FFF0307B512F8
037F14FF4AB712E0020716F8021F82027FD9F80313FF91B52680007F7F010349C7001F7F
494902077F49496E7F49496E7F49498249496E7F90B5167F484A82A24891C96C13805A73
13C0485B1BE05A85481AF05CA25AA21BF8A3B5FCA291BAFCA41BF01BE002FCCCFCA47EA5
6C7FA37EA26CF101E06EEF03F06CF107F8A26C6EEE0FF07E6FEE1FE07E6D6DEE3FC06D6D
167F6D6DEEFF806D6D030313006D01FF4B5A6D6EEC1FFC6D02F0ECFFF86D6C01FF011F5B
6E91B612C0020F5F02034CC7FC020016F8031F15E003014AC8FCDB000F13E04D4D7BCB58
>I<EFFFF8041F13FF4BB612C0030715F0031F81037F15FE4AB538C03FFF4A49C65A4A01
F890B512804A4915C04A495A4A13C04A494814E0160091B5FC5B5D5B7114C05D496F1480
721300725A725AF007F095C8FCB1B912C0A8D8000749CAFCB3B3B3A4003FB712F8A84374
7AF33A>I<F201FE922607FFF891380FFF8092B600C0013F13C0020703F890B512E0021F
DBFE0314F0027FDBFF8F14F849B9EAFE7F49DA003F9138E0FFFC4901F801071480011F49
6D495A4901C001007F49496E7F1CF890B5C86CEBC07F4807E013F0F33FE0489638F00F80
4A6F91C7FC4885A34885A96C61A36C616E5D6C61A26C616D6D4A5BA26D6D91B5C8FC6D01
F001035B01076D4913F803FF013F5B4991B65A491780D93F1F4BC9FC020715F849C615C0
030701F8CAFC01FE90CDFCA3487EA48080A214F014FC6C90B8FC19FCF1FFC06D18F01AFC
6D18FF1BC06D85876D856D856D85010F85013F1A8090BCFC481BC0000701F8C812014801
E0ED0007480180040014E091CB123F4848180F007F7313F0A2484884A76C6C4E13E0A26C
6C4E13C0A26C6D4D13806C6D4D13006E5F6C01F84C485A6C01FE04075BC66D6C031F13F0
6D01F092B55A011FD9FF80011F1480010791B748C7FC010118F86D6C17E0020F94C8FC02
0016F0030102F8C9FC566E7BCB5F>I<903803FFF8B6FCA8C6FC133F7FB3ABF01FFF4DB5
12F0050F14FC053F14FF4D15C04CB77E4CD9C03F7F93270FFC000F7FDC1FF06D7FDC3FC0
814CC77E04FE825EEDF9F8DBFBF0834C80EDFFC0A24C83A293C8FCA25DA45DB3B3A5B8D8
800FB712F8A85D7378F26A>I<EB01F8EB07FE90381FFF80497F497F90B57E4880A24880
A24880A66C5CA26C5CA26C5C6D5B6D5B6D5BD907FEC7FCEB01F890C9FCAF903801FFF8B6
FCA8C6FC133F7FB3B3B3A2B712FEA8277478F335>I<EE03F0EE0FFCEE3FFF4C138093B5
12C04B14E04B14F0A24B14F8A24B14FCA66F14F8A26F14F0A26F14E06F14C07013807013
00EE0FFCEE03F093C8FCAF933801FFFC92B6FCA8ED007F161F82B3B3B3B113F8EA03FE38
0FFF80487F487F18F8487F5EB56C15F0A218E05E18C0A26C4949138093B512006C495C4A
485B6C49485B6CD9C00F5B6C90B612C000015E6C4BC7FC013F14F8010714C09026007FFC
C8FC36958AF33A>I<903803FFF8B6FCA8C6FC133F7FB3AC4EB612FEA8DE001F01F8C7FC
070713804F90C8FCF11FFC4F5AF1FFF04E5B4E1380060F90C9FC4E5AF03FF84E5A4D485A
4D5B4D90CAFC4D5AEF3FFC4D5AEFFFE004035B5E4C7F4C7F047F7F93B5FC03F98003FB80
92B7FC8516FB04F18004E0800480804C6C7F4B7F4B6D7F03F06D7F857180837180718086
727F84727F727F867280847280728087737F85737F87757EB700FE0103B712E0A85B737A
F265>I<903803FFF8B6FCA8C6FC133F7FB3B3B3B3B3A6B8FCA8287378F235>I<902603FF
F0DA1FFFEFFFF8B64AB500F8030FEBFFC0050702FE033F14F0051F6E6C91B612FC057F03
E0010315FF4CB76C010F824CD9C01F6D4948C680932707FC00076DD93FE0013F7FDC1FF0
6FD9FF8081C6DB3FC06D4A48C77E013F4A486F4848826D027EC76CDA83F06E7F4CEF87E0
DBF1F8EF8FC0DBF3F0DDDF80824C6E92C87E03F718FF4C5FDBFF804D83A293C95CA24B60
A44B60B3B3A5B8D88007B700FC013FB712E0A8934B78CAA0>I<902603FFF0EC1FFFB64A
B512F0050F14FC053F14FF4D15C04CB77E4CD9C03F7F93270FFC000F7FDC1FF06D7FC6DB
3FC081013F4AC77E6D02FE825EEDF1F8DBF3F0834C80EDF7C0A2DBFF8083A293C8FCA25D
A45DB3B3A5B8D8800FB712F8A85D4B78CA6A>I<93383FFFC00307B512FE033FECFFC04A
B712F8020716FE021F707E027FD9F80114E091B526C0003F7F010391C7000F13FC4901FC
02037F49496E7F49496E8049496F7F49496F7F90B5486F7F488692C97E488648864A8248
86A2481B80A24A82481BC0A3481BE0A5B51AF0AD6C1BE0A56C6D4C14C0A36C1B80A26C1B
006E5E6C62A26C6E4B5B6C626F5D6C6E4B5B6D6D92B55A6D6D4A5C6D6D4A5C6D01FF020F
91C7FC6D02C0013F5B0101DAF801B512F86D91B75A023F17C0020F94C8FC020316FCDA00
7F15E003074AC9FCDB003F13C0544D7BCB5F>I<902603FFF8ECFFF8B6021FEBFFC094B6
12F8040315FE040F6F7E043F16E093B812F803F9D9FC008092B500C0011F13FFC693C700
0780013F02FC6E806D02F06E804C6E8004806F7F93C9FC4B707F4B707FA2747F1D80A274
14C0A37414E0A31DF0A3861DF8AD1DF0A262A31DE0A35014C0A21D80621D00A2505B646F
5E6F4C5B705F7092B55A704A5C704A5C704A91C7FC04FE021F5B706C017F13F803FCD9F8
03B55A70B712C0041F93C8FC040715FC040115E0706C91C9FC050713C094CCFCB3A5B87E
A85D6B7ACA6A>I<902607FFE0EB0FF8B691387FFF804CB512E04C14F8040F804C809339
3FF07FFFDC7F80B512804C5AC6DBFC0114C0013FEBE1F86D9026E3F00314E0A2EDE7E016
C015EF168003FF6D14C016007114807213004B6E5A725A725A95C8FC5DA55DB3B3B812E0
A8434B7ACA4F>114 D<912603FFFC130F027F9039FFC03F800103B6EAF0FF010F92B5FC
133F90397FFE00072601FFE013004890C8123F4848150F4848814981001F82485A83127F
A2187FA212FF7FA27F01FFEE3F006E92C7FC14F014FE6CEBFFF0EDFFC016FE6CEDFFE017
F86C16FE6C707E6C17E06C836C836C836D82011F826D1780010317C0D9007F16E0140F02
0016F01507DB001F14F81600173F050F13FC003E1603007F824882187F7FA2183F7F19F8
A27FA26D17F06D167F19E07F6DEEFFC06D5D02C04A13806E4A130002FCEC3FFE913AFF80
03FFFC01F790B65A01E316E001801680D9003F4AC7FC00FC010714F000789026007FFEC8
FC3E4D7ACB4B>I<ED7F80A715FFA45CA45CA25CA25CA25CA25C5C91B5FC5B5B5B5B133F
90B9FC1207BAFCA6D800030280C8FCB3B3F00FF0AE6DEE1FE082A26DEE3FC0A26E6DEB7F
80826E6DEBFF006E9038FE03FE6E90B55A6E5D6E5D02005D033F5C030791C7FC9238007F
F83C6A7DE84A>I<902601FFFC93381FFFC0B6030FB6FCA8C6EF000F013F17036D83B3B3
A761A461A26D5FA2616D5F6F157E6D4D80060115F86D6DDA07F8ECFFF86D6E495A6E01F8
EBFFE06E90B65A020F160002035D020015F8031F14E0030091C749C7FC5D4C78CA6A>I<
B7D8FE01B700E0010FB61280A8D8003F01FCC86C01C0C8001FEB800073DD03FEC7FC6D66
6F7115076D71606F71150F856D667070151F6D66704A6D153FA26D4D607070157F6D6670
4A6D15FFA26E93B693C8FC70715B6E715E70496F13034F7E6E030360707113076E4C6C5E
7001076F130F4F7E6E030F60058070131F6E4C6C5EDDC01F6F133F4F7E6E033F6005E070
137F6E4C6C5EDDF07F6F13FF4F7E6F02FF95C9FC7117816F92C76C5C05FD17C34E806F01
FF601DE76F4A6E5C1DFF4E806F62A26F4A6E5CA24E806F62A26F4A6E5CA24E807096CAFC
A27090C96C5AA24D163F041F60A27048705AA2DC03F0EE07E0814B7CC98A>119
D<B700FE027FB61280A8D800070280020701FCC7FC6D6E020113C04F5B6D6E93C8FC6D6E
4A5A6E6D140F6E6D4A5A6E6D4A5A4F5A6E6D4A5A6E6E485B6E02C05C6E6E4890C9FC6E6E
485A180F6F6D485A6F6D485A6F6D485A6F90B55A6F5D616F92CAFC6F5C81705B82A2707F
707F708070804C805E4C804C804C8093B67E05CF7F4B138F4B0107804B6D804B486C804B
486C804B486D7F4B487F4C814B486D7F4A496D7F4A6F804A90C76C804A48804A48834A48
6E804A486F7F4B6F7F4A486F7F494981011F01E083B70203B712F8A85D4A7CC965>I<B8
4AB612F0A8D8001F49C90007EBE0006D6D040090C7FC626D61701503A26D6E4B5AA26D6E
4B5AA26D6E4B5AA26E6D4B5AA26E6D5E1A7F6E6D5E1AFF6E95C8FC705CA26E6E495AA26E
6E495AA26E6E495AA26E6E495AA26F6D5C193F6F5E71137FA26F6D495AA26F6D4890C9FC
A26FEC83FEA26FECC7FCA26FECE7F818EF6FECFFF0A2705CA3705CA2705CA27091CAFCA2
705BA2705BA2705BA3705BA2715AA260A24D5AA24C90CBFCA25F1603D801F05DD80FFE14
07487E486D495A487F4C5AB57E4C5AA24C5A4C5A5D94CCFC6C49485A4B5A9138801FF86C
49485A49EBFFE0261FFC075B6CB65A6C92CDFC6C14FCC614F0013F13C0D907FCCEFC5C6B
7CC965>I<0007BA12FC1AFEA41AFC03E0C714F84801FCC75A02F017F002C04A14E04A4A
14C091C85A494B14801A00494B5B4D5B4992B5FC61494A5C4C5C5E61001F4B5C4C91C7FC
495C4C5B6093B55A4B5CC85A604B5C4B5C5D95C8FC4B5B4B5B92B5FC4A5C5F4A4AEB01FE
4A5C5C5F4A91C7FC4A4914034A17FC5E91B55A495C5B494A14075E495C4991C8FC49170F
5D4949ED1FF890B55A48183F4B157F484A15FF484A5C485F484A140F92C8127F48490207
B5FC4890B9FCBB12F0A57E474A7BC955>I<BE12FCA65E0680B05F>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi10 10 4
/Fd 4 85 df<933803FF80043F13F84BB512FE03076E7E92261FFE007FDB7FF0EB3FE0DB
FFC0EB0FF8020390C76C7E4A486E6C1560DA1FF86E6C15F04A5A4A486E6DEB01E04A4882
4949157F4972EB03C04990C9123F494883495A013F72EB07804A161F017FF20F00494883
A24849191E5A745B4849160F64485BA2486391CAFC48505A515AA248484F5AA251C7FCA2
4848191E63A26349611AFF63636398C8FCA24960A5127FA36C6C173F197F001F18FFDE03
F75C6C6C932607C7FFEB0380DE1F8314076C6CEE3F03000317FC6C6C922603F801EC0F00
6C6DDA1FE0EC801E6D6C91267FC000143E6D6CD907FFC7007F5BD91FFCD97FFC91383FC1
F80107B600E06EB45A010103806E5B6D6C01F8C800031380020790CA48C7FC5C4B79C86A
>11 D<F23FF80703B5FC071F14C0077F14F0953A01FFC01FF8953A03FC0003FCDE0FE06D
7EDE1F806D7E067EC8EA7F804E16C0DD01F0153F4D4816E04D5A4DC9EA1FF0171E5F4D17
F85F16015F4C5A4C5A4CCA123FA2161E5EA24CEF7FF0A25EA24B48EFFFE0A24B4818C063
4B481880A24BCA481300A2515A031E60515A515A5D515A515A953A0FFFC0FF804B023FD9
F9FEC7FC95B65A4D5DDEF00013E04B4948487F71B67E718172EBE3FE4A48021FEB01FF95
C87F88757E4A5A88A2757E4A5AA288A24ACBFCA388141EA21B7FA25CA3644A18FFA44A4D
5BA364010160A2644A5F010362A26E4D5BA2010797C7FC6263505A010F610278177F6302
7C4D5AD91E3C4C5B636E4C90C8FC021F4C5A496C4C5A6E6C4B5A6F4B5A6E6C4B5A902678
01F8913801FF806E6C020790C9FC037FEC1FFCDB1FE0EB7FF8496DB612E0030392CAFC03
0014FC041F13E04848DA0020CBFC94CCFCA3485AA4485AA448D0FCA4121EA45AA45AA45A
12605D957CF45E>I<030FB66C0403B712C04B6F4C16E0A2731BC06F74168092C76EDC00
07ECC000051F070001FCC7FC4D6DF07FF07A5A053D6373725A057898C8FC85067F191E85
4D6C61A28684DC01E06E5F848684DC03C0628684864C486C4E5A8684A24CC76D4C5A197F
8685041E704B5A85A2874C6E4DC9FC8785874C6E171EA287854C705D85871A7F4B486287
86884B486F5E8886A24B4871495A8688864BC96E495A86A288031E704B5A881B7F884B71
4ACAFCA21D80874BF1C01E871DE0874B621DF0871DF84A48715C1DFC87A24A48735A1C7F
1DFF884A486288A34ACC6C5BA288A24A735B141E143F4A859BCBFC4A8501037F010F6D85
90B500FC197E007FECFFF8B76C183EA24C181C6C4B18088B7179F085>78
D<0107BE12FE491DFF5BA34901F8C7000301FCC7120392C84AEC001F02F84D1507D97FE0
F303FE4A1B0191C94849150013FE1F7E5B48484C5B491D7CA2485A4E5B5B1207491D784E
90CAFC48CAFCA25A001E4D4817F81FF0123E123C4E5A5AA2F601E0484C5BA20060F500C0
CA1A004D5BA44D5BA44D5BA44D5BA44D90CCFCA44D5AA44D5AA44C5BA44C5BA44C5BA44C
5BA44C5BA44C90CDFCA44C5AA44C5AA44B5BA45DA25D151F0203B67E0003BA7E48858662
6C6170707CEF61>84 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmti10 10 20
/Fe 20 122 df<EE3FC0923801FFF0030F13FC033F6D13F8923A7FE07F01FC913B01FF00
0F83FE4A48EB07C7DA07F8EB03EFEC1FF04A48EB01FF4A5A4A486D5B5B4990C8FC4A157F
01075F495A131F5C013F5F495AA2495A484D5AA2485BA2484C5B5C5AA291C8485B5AA348
484B90C7FCA448484B5AA4494B5AA212FFA24D5A49181C1A3EA24D48137CA2127FA24D48
13F8A25EF101F0003F5D4C13C04CEC03E0121F5E6C6C023EEC07C00007ED7C7F6D02F8EC
0F800003913803F03F6C6CD907E0EC1F006C6C903A1F801FE03E903C7FC0FF000FF07C6D
B4486DB45A010F01F86D5B6D01E001005B010090C8EA3F80474B6FC855>97
D<157E0103B5FC90B6FC5AA25D7EEB007F141F5DA44A5AA44A5AA44A5AA4495BA4495BA4
4990CAFCA4495AA4495AEE3FC0923801FFF0030713FC90263FF81F13FFDB3FC07F9239FE
003FC0DAF9F86D7E4948486D7EDAF7C080DAFF80130792C77F495A4A6E7E5C84485B5C4A
1680A2485BA44890C8FCA35F485AA448485DA448484B1300A448484B5AA36049157FA200
FF5F17FF60A2495E5E605E60127F4C90C7FC5F160F5F003F4B5A4C5A6D5D001F4B5A4C5A
000F93C8FC6D495A00074A5A6C6CEB0FF84B5A6C6CEB7FE03A00FF81FF8090263FFFFEC9
FC6D13F8010713E0010190CAFC39756EF24C>I<EE0FFC93387FFFC00303B512F0030F80
92393FF803FC9239FFC0007E4A90C7121FDA07FEEC0F80DA0FF8EC07C04A5A4A48EC0FE0
4A48143F4A4814FF4990C75A49485C130749485C495A133F494816C0198049486E130048
705A4A6E5A4894C7FCA2485BA24890CBFCA25A5B123FA3485AA4485AA45BA75BA360F003
80F007C0127FF00F806DEE1F00003F173E60001F17FC4D5A6C6CED07E04D5A6C6CED3F80
00034CC7FC6C6CEC01FE6C6CEC0FF8D97FC0EB7FE0903A3FF007FFC06DB6C8FC010714F8
010114C09026001FFCC9FC3B4B6EC84C>I<F20FC096387FFFE0061FB5FC60A21BC084F0
000F19031B80A44F1300A44F5AA44F5AA44F5AA44F5AA44F5AA44E5BA44E5BEE3FC09238
01FFF0030F13FC033F6D4890C7FC92387FE07F913A01FF000F874A48EB07C7DA07F89038
03EFFEEC1FF04A48EB01FF4A5A4A486D5B5B4990C8FC4A157F01075F495A131F5C013F5F
495AA2495A484D5AA2485BA2484C5B5C5AA291C8485B5AA348484B90C8FCA448484B5AA4
494B5AA212FFA24D5A49181C1A3EA24D485BA2127FA24D485BA25E4F5A003F5D4C13C04C
4A5A121F5E6C6C023E4A5A0007ED7C7F6D02F84A5A0003913803F03F6C6CD907E04AC7FC
6C6C903A1F801FE03E903C7FC0FF000FF07C6DB4486DB45A010F01F86D5B6D01E001005B
010090C8EA3F804B756FF255>I<EE0FFC93B57E030714E0031F8092397FF807F8913A01
FFC001FC4A90C7127EDA0FFC80EC1FF04A48EC1F80ECFFC0495B4990C8FC495A130F495A
5C133F495A01FFEE3F005C48177E485B60484C5A4AEC07F0484C5AEF7FC04890C73803FF
80DC3FFEC7FC92381FFFF84890B612E094C8FC16F003E0C9FCD87FFCCBFCA45BA312FFA3
5BA5127FA360F00380F007C0123FF00F80F01F00001F173E6D5E000F17FC4D5A6C6CED07
E04D5A0003EE3F806C6C4BC7FC6C6CEC01FE6D6CEB0FF86D6CEB7FE0903A1FF007FFC06D
B6C8FC010314F8010014C0DA1FFCC9FC3A4B6EC84C>I<F107F8F11FFE96387FFF8096B5
12C0953903FC0FE0953907F803F095390FF000F895381FE003F20FFC95383FC01F067F13
3F1A7F9538FF80FFA25F1BF84D5B1BF0F27FE04DEC3FC0F21F004E90C7FC170FA44D5AA5
4D5AA54D5AA54D5AA5037FB712E092B87EA36F5EDB000301C0C8FC60A54C90C9FCA54C5A
A54C5AA54C5AA54C5AA64C5AA54B5BA54B5BA54B90CAFCA54B5AA54B5AA45E153FA35EA2
157FA25EA315FF5EA34A5BA3D803E091CBFCEA0FF0486C485AEA3FFC127F5D00FF13075D
01F85B140F01F05B01E05BEBC01F01005B007C49CCFC6C137E381FC1FC6CB45A6C5B6C13
C0C66CCDFC4E9784F433>I<EF1FE0EFFFF8040713FE041F6D137C933A3FF03F80FE933A
FF8007C1FF4B90380003E3DB07FCEB01F74B5A4B486DB5FC4B48804B4815FE15FF4A4914
3F4A90C8FC1AFC4A5A140F4A48151FF13FF84A5A147F5D02FFEE7FF0A2495BA249EFFFE0
5D5BA24B4A13C05BA34990C8481380A449484B1300A44A4B5AA44E5AA25CA24E5AA4011F
4C5A18FFA25F010F4B5B6E5C01075DA20103033F5B6D6C147D17F96D6CEB03F191277F80
0FE35B91393FE03FC36EB51203020713FE0201D9F80790C7FC9138003FC092C7FCA24D5A
A44D5AA44D5AA34D5AA2EA03E0486C4B5A486C5E486C5C486C5E007F4B90C8FC4C5A4848
4A5A5F494A5A49EC7FE06C484A5A4901035B6C484948C9FCD81FF8EB3FFC6CB612F00003
15C0C64ACAFC010713E0486B78C84C>I<16F0ED03FCED07FEED0FFF5DA25DA216FEA216
FCED1FF8ED0FF0ED07C092C7FCB3A5147F903801FFC0010713F0497F90381F81FC90383E
01FE137801F07F00017F49481380EA03C012071380120F1300485BA2123E4A1300A25A4A
5AA25A4A5AA20070495AC7FCA24A5AA34A5AA2495BA3495BA34990C7FCA3495AA2495AA3
4948130E161FA24948133EA2495A167CA2485B16F8A24A13F01501A2ED03E016C0EC0007
1680150F6CEC1F00153E6D6C5A90383F81F86DB45A6D5B6D1380D900FEC7FC287072ED33
>105 D<197CF001FE4E7E4E138060A260A21A00A261725A725AF001E095C8FCB3A5EF7F
80933803FFE0040F13F84C7F93383F81FE93387C00FF5EDB01E06D7E4B48804B5A150F4B
C77F153EA24B14FF157815F84A5AA24A48495BA25D14074D5B4A5AA26EC7FC91C84890C7
FCA44D5AA44D5AA44D5AA44D5AA44D5AA44C5BA44C5BA44C90C8FCA44C5AA44C5AA44C5A
A44C5AA44C5AA44B5BA34B5BA2D803E092C9FC486C5B486C5C486C130F486C5C007F4A5A
5E4848495A4B5A49495A4991CAFC397FE003FE49485A393F801FF8391FC07FE06CB55A6C
91CBFC6C13F838007FC0419086ED33>I<D903F0DB7FE0ED1FF8D90FFE912603FFFC92B5
FC90263FFF80010F01FF020314C0496D013F02C0010F14F09026FC1FE09027FFC07FE090
393FF01FF82C01F00FF001FC001FF090397F0007FCDC03F06D6C01FC6D7ED803E09026F8
0FC0ED03F048486C6C48486D6C48486D7E4CC74A5A0180027C6F48C780000FDAFE78161E
04F8163ED81F006D486F48824A495E4C5E123E4C5E93C85C485B4B5FA24B94C85C48013F
4C5E4B5EA21270C748484B484B90C7FCA44A484B484B5AA3545A49494B5AA3545A49494B
5AA2545AA24990C8485B545AA2535B49484B5B2170534913F8A249484B90C8ED01F05313
00A2F803E049484B484B5AA2F807C0535A49484B481980200F5414006849484B48181E20
3E0B0F143C6848494B4818F80B07495A0B03495A9B38FC1FC04A4C6FB55A91C9496F6C48
C7FC6C487048705A017C70CAEA0FE07D4B72C888>109 D<D907F0ED7FE0D91FFC913807
FFFC49B4021F13FF496D017F80903DF83FC001FF807FE03E01F01FE003FC001FF0D803E0
DA07E0130F6E6C484880D807C06D48C77F043E1407D80F804A816F5AD81F00EBFDF0DBFF
E0814A5B003E5DA293C8FC5D48133F5DA24B5E48017F160F5DA21270C748484B5AA44949
4B5AA34F5A495BA34F5A4990C9FCA24E5BA2495A4E5BA24E90C8FC495AF303804E48EB07
C0A24948F00F804E5AA21C0049484B485BA21B1E4E48133E495A63611B78484918F86306
3F495A1A03484960061F495A060F011FC7FCF1F07E91C96CB45A4904015B6C487013E06C
48EF3F80524B72C85D>I<EE07FE93387FFFC00303B512F0030F14FC92393FFC07FE923A
FFE000FF804A01806D7EDA07FEC7EA1FE0DA0FF8814A486E7E4A5A4A486E7E4A48814990
C812034948821307495A49481780133F495A1AC0495A5A5C5AA2485BA24890C9FCA2485F
5B123FA348484C1380A448484C1300A36149163FA261187F61A24E5A5B4D5B615F614D90
C7FC127F4D5A6D5E003F4C5A4D5A001F5F6D4B5A000F4C5A4C90C8FC6C6C4A5A0003ED0F
FC6C6CEC1FF06C6CEC7FE0903A7FC001FF8090263FF00F90C9FC010FB512FC6D14F00100
1480DA1FF8CAFC424B6EC855>I<DB3F80EC1FE0DBFFE0ECFFF8020301F8010313FE4A6D
010F6D7E91260FC1FE90391FE07FC04AC66C90397F001FE006FC6D7E023EDA81F86D7E02
3C90267FC3E080027CDAC7C013030278DACF808002F802FFC7FC4D6E7E49485C04FF1780
5F49485C4D16C0A24948485BA44948485BA3D907005F90C74890C8FCA44B485DA44B484B
1380A44B484B1300A3634B48153FA2631A7F4B485EA2631AFF4A495E6163A24A494A5B98
C7FC61705D4A4C5A4F5A62704A5A4A4C5A62704AC8FC03FE4A5A4A486CEB07FC047C495A
70EB3FF093391F80FFC04A486CB5C9FC7013FC7013F09338007F804A4890CBFCA44A5AA4
495BA4495BA44990CDFCA4495AA3131F90387FFF80003FB612C04881B7FCA26C5D52697E
C855>I<DC3FC01303922601FFF0EB0780030F01FC131F033F6DEB3F0092267FE07F5B91
3B01FF000F80FF4A48EB07C1DA07F8903803E1FEDA1FF014E34A48EB01F74A5A4A486DB4
5A5B4990C8FC4A157F01075F495A131F5C013F5F495AA2495A484D5AA2485BA2484C5B5C
5AA291C8485B5AA348484B90C7FCA448484B5AA4494B5AA212FFA24D5A5BA34D5AA2127F
A24D5AA25EA2003F4B5B5E5E121F4C5B6C6C5C00075D6D14FB0003DA03F790C8FC6C6CEB
07E76C6CEB1F8790397FC0FF076DB448485A010F13F86D13E00100130091C7485AA44C5A
A44C5AA44C5AA44B5BA44B5BA35D033F13E091B712F04982A36D5E41696FC84C>I<D903
F8EC03FED90FFE91381FFFE090263FFF80017F13F8496D48B57E903CFC1FE003FC01FE90
3CF00FF007E0003F0001DB0F80148048486C6C48C7EAFFC001C0D9FC3E5B00074B5B0180
4A5B000FECFFF04C5BEA1F004A4915805E003E190093C76C5A725A484948EC01F04B91C8
FCA348495AA31270C7485AA44A5AA4495BA4495BA44990CBFCA4495AA4495AA4495AA449
5AA4495AA4485BA45C91CCFC6C5A137C424B72C846>I<EE3FF00303B5FC031F14C04B80
9239FFC00FF0913A01FE0001F8DA03F86D7EDA07E0143E4A48804A5A023FED0F804AC8FC
02FE157F18FF01015D4A5C01035DA30107170060715A6E6E5AEF00606E92C7FC8115E015
FCEDFFC016FE6D6E7E17E06D15F86D81836E806E81020F816E811401DA001F801501ED00
1F04037F1600177F173FA2D801C0151FEA07F0487E486C6F5A123F487EA248484B5AA249
5EA2494B5A5B01804BC7FC00FCC9127E007C16FE4C5A6C4B5A003F4B5A6C6C4A5AD80FE0
EC3FC0D807F849B4C8FC6CB4EB0FFEC690B512F8013F14E0010F91C9FC010013F0394B74
C844>I<ED07804B7E4B7E4B7E157FA24B5AA44A5BA44A5BA44A90C7FCA44A5AA44A5AA4
4A5AA3003FB712F84816FCB8FCA26C16F8C701E0C7FCA4495BA4495BA44990C8FCA4495A
A4495AA4495AA4495AA4495AA4485BA4485BEE01C0EE03E0EE07C04890C7FCA2EE0F80A2
4848EC1F00A2163EA25E5B5E5E15014B5A00074A5A4B5A00034AC7FC153E6C6C13FC3900
FF03F86DB45A6D13C0010F90C8FCEB03FC2E6A71E737>I<EC7F80903801FFE001076D16
F0496DED03F890261F81FC4B7E90263E00FE150F496D82494D5A4848805B120348486E4A
5AA248485AA2D81F004A4A5AA2003E5BA24F5A484990C8FCA24A5A484D5BA24A5A1270C7
4C5B4A5AA34A484A90C7FCA24A5AA24E5A495BA34E5A495BA34990C8485AA449484B5A1B
381B7CA24E4813F85CA3011F4B9038C001F0A2130FF203E0A24D1380F207C05F01075D6E
4AEC0F80171E01034BEC1F006D6CECF87FDC01F0143E6D903B8007E03FC07C913C7FE03F
C01FE0F8021FB5486CB45A6E49486C5B020301F801015B9126007FC06D6CC7FC4E4B72C8
59>I<027F163C902603FFC015FE496D4A7E496D4A138090261F83F84A13C090383C01FC
01786D5C01F018E0D801E07F120301C08200076F7F018082000F498113004892C8127F1A
C0003E49163FA24A5A48181FA24A4816805AA24A5A1270C718004A5AA34A48153EA2495B
A261495BA2197819F84990C9FCA24E5A495AA24E5AA249485E1807A261180F96C7FC4A5D
181E183E183C187C187818F8606E4A5A010F15036001074B5A6E4AC8FC01035D6D6C143E
17FC6D9038C001F891393FF00FE06EB55A6E5C020149C9FC9138003FF0434B72C84C>I<
147F903801FFE001076D1678496DED01FC90261F81FCED03FE90263E00FE1507496D16FF
49EF0FFE4848805B120348486EEC1FFC5B000F5BA2D81F004AEC3FF8A2003E5BA2F17FF0
484990C8FCA24A5A48F0FFE0A24A5A1270C74C13C04A5AA34A484A1380A24A5AA24E1300
495BA34E5A495BA34990C8485AA449484B5AA44E5A5CA34E5AA44D5BA25FA201074B5B6E
5C01035D5F6D6C4A90C7FC6D92B5FC91397F8003F791393FE01FE76EB5EA8FFE6E140F02
0313FC9138007FE092C7485AA34D5AA260177F01F85ED803FC15FF486C5E487E484B5BA2
484B90C8FC4C5A495D160F495D494A5A494A5A01C04A5A003EC8485A003F4A90C9FC6C4A
5A6C6CEB07F86DEB1FF06C6CEB7FE03A03FC03FF806CB548CAFC6C6C13F8011F13E0D907
FECBFC486B72C851>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmbx12 12 30
/Ff 30 118 df[<EF07C0EF1FE04D7E177FEE01FF1607161F167F0303B5FC151F4AB6FC
143F017FB7FCB9FCA515E7ECFE0714C0EB8000C8FCB3B3B3B3B3A9003FBB12FEA9>79
130 111 257 112 49 D[<93383FFFC00307B6FC037F15F00203B712FE020F707E023F17
E091B912F8010318FE49727E499026FE003F81013F01E00103814990C86C14F8D9FFFC03
1F804801F06F804801C00303804A6F814890CAFC48487180D9FFC070804801F08502FC82
486D708080487280816F84B682A26F8485A31D80A36C5CA26C5CA26C91C9FC6C5B6C5B6C
5BC601E01A00011FCAFC90CBFC6164A34F5CA26461644F5CA24F5C646199C7FC96B55A63
4E5C4E5C634E5C4E5C98C8FC4E5B4E5B4E13F095B55A624D5C4D49C9FC4D5B4D5B4D13E0
4D5B4D5B4D48CAFC4C5B4C5B4C5B4C13C04C5B95C9EAFF804C5AEE7FF84C485D4B491700
4B5B4B5B4B48C9FC4B5A4B485E4B5ADBFFC05F4A5B4A90CA12074A5A4A5ADA1FF0170F4A
48171F4A484CB45A91BBFC5B5B5B5B5B49625B90BCFC5A5A5A5A48635A5AA2BDFCA364A4
>89 130 117 257 112 I[<933807FFFC93B612F0030F15FF033F16E04AB812F8020717
FE4A717E023F18E04A9026F8003F8049B5C7000714FC4901F80201804901E06E6C7F4901
806F804948C96C805C496C7080496C6C8415E090B56C6F8081486E8481A2486E84A385A3
61A37E4B607E5D6D49606D495D6D5B01074960010190C95A90CB5D6461644F91C7FC6396
B5FC4E5C634E14E04E5C4E5C063F91C8FC4E13FC0503B512F00403B612C00307B7C9FC4B
15FC19F0A219FF1AE06F16FC92C86C13FF060714C0060114F07214FC073F7F737F7314C0
887380738088A2738088A27315801DC0A21DE0A2861DF0A3EB0F80D97FF01AF83801FFFC
000713FF48804880A248804880A3B67E1DF0A497B612E0A25D6C1CC0A24B1980616C4A19
004B606C91C95A4A616C01F84C5C6C01E04C5C6C5B02F04C5C6C01FC4C5C6C01FF93B6C7
FC013F01E04A5C6D01FE02075C6DD9FFF0017F5C010391B812E001001980023F4DC8FC02
0F17F8020317C0DA007F4BC9FC030715E0DB000F01F8CAFC>93 132
119 257 112 I[<F203FE507E6262A2626297B5FC61A2616161A261616196B6FCA26060
60A260606060A295B7FC4D13BF4D133F18FE1707EF0FFCEF1FF8EF3FF0A2EF7FE0EFFFC0
4C138018005E4C5A4C5A4C5AA24C5A4C5A4C5A5F5D4B90C7FC4B5A4B5AA24B5A4B5A4B5A
5E15FF4A5B4A90C8FC4A5AA24A5A4A5A4A5A5D147F4A5A495B4990C9FCA2495A495A495A
5C133F495A495A485BA24890CAFC485A485A5B121F485A485A485A90BE12E0A9CC92C8FC
B3A5043FBA12E0A9>99 131 122 258 112 I[<1BFF080313C0A2507FA2507FA3507FA2
507FA3507FA297B6FCA34F81A24F81A34F81A24F81A34F81A24F81A34F81A296B8FC1AEF
1ACF4E01C781A21A874E0183811A034E6D81A219FE060F6D8161061F6E80A261063F6E80
61067F6E80A26106FF6E80A24D496D81A2614D6F81A24D90C76C81A260050F6F81A24D48
6F80A260053F7080A24D486F80A26005FF7080A24C496F81A2604C7181A24C90C96C81A2
5F040F7181A24C487180A25F043F728094BCFC4C87A393BEFCA24B89A34B0180CA000381
A24B90CB82895E030F7381A24B48888A5E033F7480A24B48888A5E03FF7480A24A49898A
5E4A7581A24A90CD828A5D020F7581A25D4A6C75800107B512F8B94CBBFCA9>152
140 120 267 169 65 D[<BE12F8F5FFE01EFEF6FFE01FF81FFF20C08C20F8C7000702FC
CA15FE0B1F800B03817781776C807880788078807880A278808A8E8A8EA27980A48E8BA9
676AA36A9CB6FCA2545DA29FC7FC545C6669545C545C545C545C9BB65A0B034AC8FC535C
0B3F14F09AB612C00A0F92C9FC94BB12FC1FE09CCAFC1EFCF6FFE01FFEF7FFC005FCCA6C
14F00B0714FC0B0014FF0C3F14C00C0F14F0788078807880786E7E7980A2798079808E8B
8E8B8EA27980A22380A38B23C0AB672380A4551500A2676A676A676A555C9CB6FC545D54
5D545D0C1F92C7FC0C7F5C53B65A0B075D0B7F5DC212C06956C8FC20F820E09DC9FC1FF8
1F800CC0CAFC>138 137 120 264 159 I[<BB12FEA9C700030380C7FCB3B3B3B3B3B3AB
BB12FEA9>71 137 122 264 83 73 D[<B90C0FB812F0726572657265A3729AB9FCA272
64C70007A148C8FC72F403FDA24B6EF407F9A3706DF40FF1A2706EF31FE1A2706EF33FC1
A3706EF37F81A2706EF3FF01A2706EF201FEA2706EF203FCA3706EF207F8A2716DF20FF0
A2716EF11FE0A2716EF13FC0A3716EF17F80A2716EF1FF00A2716E4E5AA2716E4E5AA371
6E4E5AA2726D4E5AA2726E4D5AA2726E4D5AA3726E4D5AA2726E4DC7FCA2726E4C5AA372
6E4C5AA2726E4C5AA2736D4C5AA2736E4B5AA3736E4B5AA2736E4B5AA2736E4BC8FCA273
6E4A5AA3736E4A5AA2736E4A5AA2746D4A5AA2746E495AA3746E495AA2746E495AA2746E
49C9FCA3746E485AA2746E485AA2746E485AA2756D485AA375EC9FE0A275ECFFC0A2755D
A27592CAFCA3755CA2755CA2755CA2765BA34A6C725B49B512F8B900F06F49033FBA12F0
A2765BA27690C9FCA3765AF400F8>196 137 120 264 213 77 D[<0703B57E4EB7FC06
3F16F84DB9FC050F18E0057F18FC4CBBFC040F1AE0043FDB800315F84C02F0C7001F804B
B60080020314FF030702FCC96C14C04B02F0041F80033F02C0040714F84B4A708092B548
CB804A4A727F4A4A7280020F02E0060F14E04A4A72804A4A7280A24A91CC6C8091B54873
80494A747F498C494A74804C86498C494A7480A2494A7480A2494A748090B68A93CE7E48
8DA24B87482280A24822C04B88A24822E0A3484A7614F0A34822F8A5484A7614FCA7B620
FEB36C22FC6F64A56C22F8A46F646C22F0A36C22E06F99B6FCA26C22C0A26F636C2280A2
6C6F501500A26C6970626D6870626D6870626D686D6E505CA26D6E505C6D6E97B65A6D9D
C7FC70616D6F4E5C6E6E4E5C6E666E6E4E5C6E6E4E5C6E02FC067F5C6E6E95B65A6E6E4D
92C8FC6E6C02C0040714FC6F6E4C5C6F02F8043F5C030702FE93B612C003016E6C020392
C9FC6F03F8023F5C043F9126FF8003B612F8040F92B812E004031A80DC007F06FCCAFC05
1F18F0050195CBFCDD003F16F8060193CCFCDE00031480>143 141
116 266 168 79 D[<BE7E1DFF1EF01EFF1FE01FF81FFE797E20E0C700074AC9003F810A
0115FCE2003F800B078077810B008178807880788078808A8D8A8D781580A322C0A28A22
E0A422F0AB22E0A422C066A22280A2220066696669545C545C545C669BB65A0B0392C7FC
535C0B3F5C52B65A0A3F15E094BC128055C8FC1FF81FE09CC9FC1EF89BCAFC1D8095D0FC
B3B3B0BB12F8A9>132 137 120 264 153 I[<BD12E0F4FFC01DFEF5FFE01EFCF6FF801F
E01FF81FFEC700074AC800036F7EE1000F15E00A0181E2003F800B0F14FE77800B018177
818A78808D78808A8D8D8A8DA37881A48EAA6AA3669FC9FCA269A2545CA2545C69545C69
669BB6CAFC535C0B075C0B1F5C0B7F14E052B65A0A0F92CBFC0903B612FC94BB12F01FC0
54CCFC1EF0661EFC1EFF4DC8000F15C00900810A3F14F80A0F8076800A0180768177808C
77807780A277808C89A28CA2898DAC8DACA1EA03E0A1EA07F0776FEC0FF8A4897BEC1FF0
8AA2786EEC3FE08A786EEC7FC0BB00F06F80786EECFF8078DB80031300789238F00FFE0D
3F91B5FC795E0D0716F00D005E0E1F1580D300014AC7FCE6000313F8>157
139 120 264 167 82 D[<000FC212FEA6488DA30480C703E0C7123F03F0C818010380F3
003F4AC9190F02F81D034A894A894A8A4A8A4890CA741380498BA2498BA2498BA3498BA3
498B007F22C0A449207FA84848F83FE0A6CC98C7FCB3B3B3B3A6033FBD7EA9>139
135 120 262 156 84 D<4BB512E0037FECFF800207B712F8023F16FE91B912C04918F0
01078449DA000114FE4901C0D9001F6D7E496D020780496D6E806F6E8090B56F6C7F6F83
48727F6F81877380A28885A26C4A84A26D49816D49846D5B6D5B6D5BD901FEC9FC90CBFC
A995B7FC94B8FC161F0303B9FC151F92BAFC0207EDF003021FECFC00027F14C049B548C7
FC010714F8011F14C0495C4949C8FC90B55A485C4814E05A485C5D5A4891C9FCA2485BA3
B55AA561A3616C7F4F7E6C6D163F193E6C6E157E6F03FC806C6EDA03F8806C6EDA07F0EC
FFC06C6E91261FE03FECFFE06C02FEDAFFC016F06C9126FFE007496C15F8013F91B6487E
6D4C7F010704F87F010004E01300021F0380023F14F002034AC8000314E0DA000F01E092
C9FC655C79DA6D>97 D[<ED3FE0017FB5FCB7FCA9EA003F1307A27FB3B0F17FFE060FB5
12F0067F14FF0503B712E0050F16F8053F16FE94B97E04E19026FE001F8004E701E00103
14F004EF90C86C7FDCFFFC031F13FE4D6F7F05E06F804D6F8094C96C804C70804C838A4C
717F4C717FA28A881F80A27614C0A21FE0A31FF088A21FF8A51FFCAE1FF8A51FF0A264A2
1FE0A21FC0A2641F80A252140066A2704D5B525B827094B55A704C5C66714B5C05E0030F
91C7FCDC3FF04B5B9226FE1FFC037F5B4B6C6C4AB512F09227F807FFC001075CDBF00101
F8017F14807090B8C8FC4B6D16FC4B011F16E04B0107168092C7000103FCC9FC4ADA003F
14C090CA000301F8CAFC>110 139 121 265 125 I<94387FFFE0041FB67E93B712F803
0716FF033F17C092B97E020318F84A84021F9126F0000F7F4A91C700017F91B500FC4A14
804902F05C4902C017C0494A5C4991C8FC49494B14E0495B5B5D90B55A5AA2484A6F14C0
A2484A6F148073140048725B735B484A705AF21FE097C8FC5AA34891CDFCA5B6FCAF7EA2
81A37EA36C80A37E6FEF03F86CF207FCA26C80F30FF86C806C6EEF1FF0A26D6DEF3FE06D
6D177F6D6EEEFFC06D6E17806D6E15036D02F84B13006D6E4B5A6D02FFED3FFC6E02E049
B45A021F02FE011F5B6E91B712C002036002004DC7FC033F16F8030F16E003011680DB00
1F02F8C8FCDC007F90C9FC565C79DA64>I[<52B4FC0803B6FC0707B7FCA9F10001F2003F
A287B3B0EF7FFF040FB512F093B612FE0307EDFF80033F16E092B812F8020317FE4A9139
F8007FFF021F0280010713DF4A49C7000190B6FC91B500F86E7E4902E0151F494A814991
C97E49498249844949824949838790B55A485CA25A485CA25A5DA25AA25AA292CBFC5AA5
B6FCAF7EA57EA2817EA37EA26C80A27E817E636C6E94B6FC6D6D5E6D60816D6D5E6D6D16
1F6D6E4B816D6E5D01006E4AB712F06E01F8020701BFECFFFC6E01FF023F133F020F9139
E003FFFC6E91B612F8020117E06E6C1680030FEDFE00030315F8DB003F14C0040101F8C7
02F0C7FC>110 139 121 265 125 I<EFFFFE043FEBFFF84BB7FC030F16E0033F16F892
B812FE020383020FDAE00714C04A49C780027F01F8023F7F91B500E0020F7F4902806E7F
4991C800017F49498349496F8049844949844949707F90B5FC4B707F5A48737F5D488786
485C885AA2747F5AA292CAFC5AA21D80A4B6FCA292BBFCA41D006492CEFCA67EA56C80A3
7EA36C801C3E6C1B7F6FF0FF807E5113006C806C626F606D6D17076D4F5A6D6D606D6D17
1F6D6E4C5A6D02E0EEFFE06D6E4B5B6D02FC03075B6E01FF031F90C7FC6E02E0ECFFFE02
0F02FE010F5B6E91B712F00201606E6C1780031F4CC8FC030316F8DB007F15C004074AC9
FCDC003F13C0595C7ADA66>I[<F0FFF8053FEBFF800403B612E0041F15F8047F814BB77E
030782031FDAC03F13804B9026FC007F13C04B01F090B512E092B5485A4ADA800314F04A
14004A4916F84A5D4A5BA24A5BA24A5B7214F091B5FCA24C6D14E0497014C07313807313
00F10FFCF103F096C8FCB3A3BA12C0A9D8000102F0CAFCB3B3B3B1007FB812F8A9>77
139 121 266 68 I<F407FC93261FFFF0ED7FFF0303B66C49B51280031F03F0010F14C0
92B700FE4914E002039326FF807F14F0020F05E1B612F8023F05FB13F14A9026FC007F90
B5000313FC91B500E0010F14F801030280010314E04949C814C049496F13E049496F13F0
1EF849496F6D7E49736C13F04B6FED7FE090B572EB3F80F50600487490C7FC4B814887A4
4887A96C63A46C98C8FC6F5D6C62A26D616F5D6D616D6D4B5BA26D6D4B5B6D6D92B55A6D
6D6C01035C010002E0010F49C9FC4902FC017F5B4991B75AD907EF17E002E31780D90FC0
4CCAFC031F15F0011F01031580DB001F01F0CBFC013F91CEFCA2137FA480A213FF80806D
7E14FF15C092B87E1AFF1BF06D19FE757E6D1AE01CF86D1AFE886D876D1BE06D87A26D87
6E860103BC7E130F013F8790BEFC4802C0C916804849CA12034801F8EF003F4849060F14
C04849180348864A84487513E0A25CB586A76C6D4F13C0A36C6D96B512806C6D4E1400A2
6C6D4E5B6C6D4E5B6C6D4E5B6C6D6C053F5B6C02E094B55A6D01F804035C6D01FE040F5C
6DD9FFE092B6C7FC0107DAFF80013F14FC010192B812F06D6C19C0020F4EC8FC020318F8
DA003F1780030304F8C9FCDB000302F8CAFC66847ADA70>I[<ED3FE0017FB5FCB7FCA9EA
003F1307A27FB3B0963807FFF0077F13FF4EB612E0060F15F8063F15FE4E6F7E4DB87E4D
D9F007804DD9000180DD0FF86D80DD1FE080DD3F806E7F4DC88017FEDCE1FC6F7FEEE3F0
A2DCE7E084DCEFC0815F16FF94C981A25EA25EA35EA45EB3B3ADB9D8C003B9FCA9>112
138 120 265 125 I[<EC3F80ECFFE0010313F8497F497F497F49804980A290B67EA248
81A76C5DA26D5CA26D5C6D91C7FC6D5B6D5B6D5B010013E0EC3F8091C9FCB3A2ED1FE001
3FB5FC007FB6FCA9EA003F1307A27FB3B3B3ADB812FEA9>47 139
120 266 62 I[<EF0FE0EF3FF8EFFFFE4C7F4C14804C14C04C14E04C14F0A24C14F8A24C
14FCA77014F8A27014F0A27014E07014C0701480701400705BEF3FF8EF0FE094C8FCB3A2
F007FC041FB5FC033FB6FCA9ED000716018283B3B3B3B3AE133C48B47E487F000F13F048
7F486D16F8A2486D91B5FC19F0B6FCA24C14E0A219C04C1480A26C4916004C5B6C49495B
4A5D6C49495B6C49017F5B6CD9F801B55A6C90B7C7FC6C5E6C6C15F86D15E0010792C8FC
010114F8D9000F1380>62 179 139 266 68 I[<ED3FE0017FB5FCB7FCA9EA003F1307A2
7FB3B3B3B3B3B3A7B91280A9>49 138 120 265 62 108 D<DB3FC0912607FFF094381F
FFC0017FB5037F01FF4CB512FCB74AB600E00307ECFF80060F03F8033F15E0063F03FE92
B712F84E6F6C4916FE4DB86C0107824DD9F0076E49D9C01F804DD900016E90271FFC0007
80DD0FF86D6ED93FE06D80DD1FE06EDB7F807FD8003FDB3F806E6D01FEC88001074BC86E
48488305FE4E5A6DDAC1FC6F6D48486F7FDCC3F0F00FC0A2DCC7E0DE9F8083DCCFC06F02
BFC97E4D18BE04DF19FE94C94B8416FF4C61A24C61A34C61A44C61B3B3ADB9D8C003B901
0FB812FCA9AE5A78D9BB>I<DB3FC0913807FFF0017FB5037F13FFB74AB612E0060F15F8
063F15FE4E6F7E4DB87E4DD9F007804DD9000180DD0FF86D80DD1FE080D8003FDB3F806E
7F01074BC88017FE6DDAC1FC6F7FEEC3F0A2DCC7E084DCCFC0815F16DF94C98116FF5EA2
5EA35EA45EB3B3ADB9D8C003B9FCA9705A78D97D>I<94387FFFC0040FB512FE93B712E0
030716FC033FEEFF8092B912E0020318F8020FDAF00114FE4A91C7001F7F4A01F8020380
91B5486E14E04902C06E6C7F494A6F7F4991C96C7F4949707F4949707F49497080494970
80A290B548708048884B834888A248884B834888A24888A34891CB6C1480A3481DC0A6B6
1BE0AE6C1DC0A56C1D806F5FA36C1D00A26C646F5FA26C646F94B5FC6C646C646F5E6C64
6D6D4C5C6F5E6D6D4C5C6D6D4C91C7FC6D6E4B5B6D6E4B5B6D02F04AB55A01006E4A14E0
6E01FF021F5C6EDAF001B65A020F91B748C8FC020318F86E60DA003F1780030F4CC9FC03
0116F0DB001F92CAFCDC007F13C0635C7ADA70>I<DB7F80EB03FF90B6021F13E0B7027F
13F84DB512FE4DECFF80050F15C04D15E094263FFC0F13F094267FE01F13F89438FF803F
4E4813FCD8003FEC81FC0107DA83F890B512FE5F6DEC87E0168F5FEE9F80A294C76C13FC
16BF04BE6E13F816FE7313F04C6E13E007031380963800FE004C92C7FCA45EA65EB3B3A8
B912F0A94F5A7AD95C>114 D<92261FFFE0EB03C00207B6EB0FE0023FEDE01F49B7EAF8
7F010793B5FC5B013F9038F0003F4948C71203D9FFF0EC007F4849151F480180814890C9
7E48834982121F4982123F197F127FA2193F12FF7FA27FA214C06E705A02F893C8FC14FE
ECFFC06C14FEEDFFF0EEFFC06C16FEEFFFC06C17F86C17FE727E6C18E06C846C846C18FE
6D836D84010F846D840101846D7E020F83020183EC003F0300821607EE001F050180717E
181F003F05071480486C8200FF8384856D83A36D83A21B007FA27F627F6D173F627F6E4C
5A806E4C5A6E4B5B02FC03075B02FF4B5B03C0027F90C7FC03FC90380FFFFE01F990B75A
D9F07F16F0D9C03F5ED9800F1680D9000103FCC8FC00FC6D6C14E00078020301F8C9FC49
5C79DA58>I<ED07FCA8150FA5151FA4153FA3157FA215FFA25CA25C5CA25C5C5C5C91B5
FC5B5B130F5B90BA12C01207BBFCA7C702FCC9FCB3B3A9F107FCB01AF86E160F82A26EEE
1FF0A26E6D15E0193F6E6EEB7FC07113FF6E6E4813806EDAFC0713006E91B55A6E5E6F5D
031F5D03075D03011580DB003F49C7FC040113F046807CFE57>I<DB1FF0F07FC0017FB5
4CB6FCB70303B7FCA9D8003F94C7FC0107191FA26D85B3B3AE63A463A3637F98B6FC626D
19F77015036EEF07E7E00FC7806E171F70DB7F8714FC6E6DDBFF0791B5FC6E6D6CEB07FE
6E02F8EB3FFC6E91B612F8020017E06F16C0031F1600030315FCDB007F14F0040191C702
FCC7FC705B78D97D>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmbx9 9 16
/Fg 16 117 df<137E3801FF80000713E04813F04813F84813FCA24813FEA2B6FCA66C13
FEA26C13FCA26C13F86C13F06C13E00001138038007E001818749731>46
D<161F4C7EEEFFC01503150F153F4AB5FC140F49B6FC0007B7FCB8FCA514F1EBFE01EAF8
00C7FCB3B3B3B2003FB912FEA83F6274E158>49 D<ED7FFE020FB512F8027F14FF49B712
C0010716F0011F16FC017F16FF90B97E4849C66C14E04801E0010F804801800103804848
C880486C6C6E7F6E6E7F486D806E6E1480486D17C06E80B518E06E801AF0A283A21AF8A2
6C5BA26C5B6C5B6C5B6C5B6C5BC648C8FC90C915F0A25F1AE0A21AC05F1A805F1A004D5B
614D5B614D5B94B55A614C91C7FC4C5B4C5B604C13E04C5B4C5B4C48C8FC4C5A4B13F04B
5B4B5B4B90C7EA07F84B5A4B5ADB7FF0EC0FF04B5A4A5B4A5B4A48C8FC4A5A4A48151F4A
4816E0EC7FC04A48153F4990C9FC4948ED01FF49B9FC5B4918C05B5B90BAFC5A5A5A4819
805A5A5AA2BBFCA21A00A4456277E158>I<19FF4E7F4E7FA24E7FA24E7FA34E7FA24E7F
A34E7FA295B6FCA24D81A34D81A24D81A34D81A2DD1FFB80A2DD3FF180A218E1DD7FE080
A24D486C7FA24E7E4C8318004C6E80A24D7F0407835F040F6E80A24C486D80A24D7F043F
83A24C486D80A24D8004FF835F4B7080A24B90C86C80A24C81030785A24B486F80A24C81
031F855E4BBA7EA24B85A392BCFCA24A870480C9123F93CA7E4A875D02077280A24B8302
0F875D021F7280A24A487180A24B83027F87A24A48727FA24B84010301E087B700FC0307
B9FCA878697AE885>65 D<BE12F0A489A4C702FCC8121F1A001B1F09077F871B001C7F1C
3F1C1FA21C0F767EA31C03A21C01A289A288A2F107F8A3F57F80A49AC7FC190FA3191FA2
193F197FF001FF180F93B7FCA89338FC000F1801F0007F193F191FA2190FA31907A896CB
FCB3A4BA12C0A861667AE56F>70 D<001FBF12E0A6481EF0A29226C0000F9138C0000F02
F8C7EF007F02E01A1F02801A0791C88449874987491C7F491C3FA2491C1F007F1EF8A249
1C0FA4491C07A648C9F103FCA6CA96C7FCB3B3B3A20207BB7EA86E657AE47B>84
D<92B512C0023F14FE49B712C0010716F0011F16FE498249D9800314C0D9FFF8C76C7F48
6D021F7F6E6E7F486D6E7F717F486E6D7FA27180A286A26C91C87E866C5B6C5B6D5A6D5A
EB0FC090CAFCA30403B6FC0303B7FC157F0207B8FC143F49B6EAFC7F0107ECFC00011F14
C04901FCC7FC90B512F04814C04891C8FC485B485B485B485BA2485BA25CB5FCA595B5FC
A26C6D5CA26C6DEC03EF17076C6DDA1FCF13FC6C01FEDA3F8FEBFFFC6C6DDAFF0714FE6C
9126E00FFE15FF6C91B5487E6C6C4B7E011F9238E0007F010703806D13FE01004AC70003
13FC020301E091C8FC50457BC356>97 D<903807FFE0B6FCA8C6FC7F7FB3A8EF3FFE0403
B512F0041F14FE047FECFFC003E1B712F003E78203EFD9C00F13FE9227FFFC00017F04F0
6D6C13C004C06E7F4C020F7F4BC86C7F4B834B814B83737FA2731480A21CC0A21CE086A2
1CF0A41CF8AC1CF0A41CE097B5FCA21CC0A21C80611C00636F5D6F4B5B636F4B5B6F4B5B
04C04A5BDBBFE091B55ADB1FF8010391C7FC9128FE0FFF803F13FCDAFC0390B65A4A6C16
E04A6C6C15804A011F02FCC8FC4A010714E090C9D87FFCC9FC55697AE762>I<923801FF
FC033FEBFFF04AB612FE020F6F7E023F16E091B87E49830107DA80037F4901FCC77F4901
F05B4949497F495B90B5484914804891C7FC5A5C5A5C48701400A248496E5B715B48715A
725AF00FC0484992C8FCA4B5FCAC7EA280A27EA36C7FF10FC06CF01FE0807E6EEE3FC07E
6C6EED7F806C6E15FF6D6D4A13006D6D4A5A6D01FCEC0FFC6D01FFEC3FF86D9139F003FF
F0010191B65A6D5F023F93C7FC020F15FC020115F0DA003F1480030101F8C8FC43457AC3
4F>I<923803FFF0033FEBFF800203B612F0020F15FC023F15FF91B812C049DA803F7F01
079026FC00077F4901F001017F4901C06D6C7E49496E7E498390B5C87E48496F13804819
C04A814819E05A4A6F13F05AA24819F8845C5AA21AFCA2B5FCA291B9FCA41AF81AF002F0
CBFCA47EA46C7FA37E1AF06C6DEE01F8F103FC7E6EEE07F87E6C6DEE0FF06C6E151F6D6D
ED3FE06D6DED7FC06D6D15FF6D01FC020313806D01FF021F13006D9139F001FFFE010091
B612F86E5E021F16C0020793C7FC020015FC031F14E0030001FCC8FC46457BC351>101
D<F27F8092263FFF80903803FFE00207B500FC010F13F0023F9126FF803F13F891B700E0
B512FC010304FB14FE4993B5129F011FD9F8039138F83FFF499026C0007F13E04990C700
1F13C049486E13E048496E13F048496E9038F81FFEA2489538FC0FFCF203F048496E9038
FE00C01B00A24884A86C60A36C6D4A5BA26C60A26C6D4A5B6C6D4A5B6D6C4A5B6D01C001
7F5B6DD9F803B5C8FC4990B612FC495E017E16E0D9FC3F1580020702FCC9FC0001D9003F
138092CCFC1203A47FA27F8014F091B712F0F0FF806C18F819FE6C727E1AE06D18F8866D
846D846D19805B017F19C048BBFC00071AE04801E0C8121F480180030014F091CA121F48
4883007F7213F8498300FF84A6007F1AF06D5FA26C6C4D13E06C6D4C13C06E5E6C6D4C13
806C01F893B512006C01FE03035B6CD9FFC0021F5B6C6C01FE0103B512F0011F90B812C0
010795C7FC010117FCD9003F16E002034BC8FCDA000F148050637BC358>103
D<EB03F0EB0FFCEB3FFF497F90B57E4880A24880A24880A66C5CA26C5CA26C5C6D5B6D90
C7FCEB0FFCEB03F090C9FCAE903803FFE0007FB5FCA8C6FC7F7FB3B3ACB712F0A8246978
E832>105 D<903803FFE0B6FCA8C6FC7F7FB3B3B3B3ADB712F8A8256878E732>108
D<90260FFF80EB7F80B6903803FFF8040F13FE043FEBFF804C14C093B612E00381018313
F0923883FC07922687F00F13F8C615E06D90268FC01F13FC6DEB9F80160015BF15BE03FE
6D13F85D7113F0A24B6D13E005001380F03E004B91C7FCA55DB3AEB8FCA83E437AC249>
114 D<91260FFFE013F049B6EA03F8010715CF013F15FF5B3A01FFF8003F4801801303D8
07FCC8FC4848157F4848151FA24848150FA2007F1607A312FF7FA201FC6F5A6D92C8FCEB
FFC014F8ECFFE06CECFF8016FC6CEDFF8017E06C16F86C8217FF6C836C83C6836D82011F
820107821301D9003F811401DA000F80ED003F160304001480003E163F007F824882837F
83A26D1700A27FA26D5E6D15076001FE150F6D4B5A6E4A5A02F0ECFFE002FE010F5B91B7
5A01EF93C7FC01C315FC010015F000FC013F14800078010301F0C8FC39457AC346>I<EC
03FCA71407A5140FA3141FA2143FA2147FA214FFA25B5B5B5B5B137F48B812F0120FB9FC
A6D8000F01FCC8FCB3AEEF01FEAD6DED03FC816D16F817076D6DEB0FF0EE801F6D9138E0
3FE06E90B512C06E15806E150002075C020114F86E6C5B0307138037607DDE45>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmr9 9 72
/Fh 72 124 df<933801FFE0043F13FE4BB67E030781031F9038003FF0DB7FF8EB03F891
2601FFC0EB00FC4A90C8123E4A48157EDA0FF84AB4FC4A485C4A484A7F027F5D4A5A495B
5BA24990C8FCA27290C7FC49486F5A725A95C9FCB2953801FFC0050FB5FCBBFCA526000F
FEC8120F1803A284B3B3AD496C4B7F017F01C0020F13F8007FB6D8C00FB612F8A54D6A7D
E955>12 D<DDFFE0ED3FF8041F01FC0207B57E93B6023F14E00307DBC001B67E031F9027
803FE0079038E007FC922A3FF80003F00FFEC77EDBFFE0902700F83FF8143F4A01809126
7C7FE0EC0F80DA07FEC8267EFFC0141F4A484AB5C8EA7FC04A484A4915FF4A484A494A7F
4E5E4A484A5B4A485E5B4B5E5B8472705B4990C86C496E5B7271C7FC9BC8FCB2F67FF00A
03B5FCC0FCA5D8000790C8000101C0C712031D00A21E7FB3B3AD496D4A6D4B7E013F01E0
020F01F8020313FE003FB6D8E00FB6D8F803B612FEA5776A7DE980>14
D<1406EC1F80EC3FC0EC7FE014FF4913F0A24913E05B4913C01580491300495A495AEBFF
F05C485B485B4848C7FC5B485A485AEA3FC05B48C8FC12FE12F8127012201C1D60E84D>
19 D<DE038015704E6C15F84E6C4A7EA3061F15034F5DA2063F15074F5DA3067F150F96
C85BA34E151F4E5EA20501163F4E5EA30503167F4E93C8FCA205075E4E5DA3050F15014E
5DA3051F15034E5DA2053F15074E5DA3057F150F95C85BA34D151F4D5E003FBF12F8481E
FCC012FEA36C1EFC6C1EF8C9D807F0C848C9FCA3040F15014D5DA3041F15034D5DA4043F
15074D5DA4047F150F94C85BA34C151F4C5EA3003FBF12F8481EFCC012FEA36C1EFC6C1E
F8C8D807F0C848CAFC030F15014C5DA3031F15034C5DA3033F15074C5DA2037F150F93C8
5BA34B151F4B5EA30201163F4B5EA20203167F4B93CBFCA302075E4B5DA2020F15014B5D
A3021F15034B5DA3023F15074B5DA2027F150F92C85BA3023E6F5A021C6F5A6F8578E780
>35 D<EE1FE0EEFFF803037F4B7F92381FF01F92393FC00F804B486C7E9238FF00034A48
6D7EA24A486D7E14075D140F18784A5AA4143FA460A34D5AA26F495AA24D5AA2021F4ACC
FC5F173E6F133C5F17F8020F495A6F485A5F4C5A160F6E6C48C9B7FC163E5E6E5B5E4C04
0F14C06E490401EBFE007513F070715A6E1A807071C7FC1C3E1C3C4A6D177C4A19784A6D
17F891260F9FFE5FDA1F1F4D5A91263E0FFF1603027C614A6C6D4B5AEB01F049486C6D4B
C8FCD907C06E5D49486C171E011F6F5D49C77F017E027F5E01FE6F15F800016F6C5D4848
021F4B5A0007701403000F6F6D5C706D495A4848180F003F6F6D91C9FC706D131E007F19
3E706D5B716C137800FF706C13F84F5A716C485A71EB83C07113C771EBEF806D05FFC912
0F715B715B007F177F6D706C161E727E003F716D153E6D846C053F6D157C6C6D4B7F6E92
26FC7FF815F86C932703F83FFEEC01F06C6D91270FE01FFF14076C6D91263FC00701C0EB
0FE026007FFC49B4C66C01F0EB3FC090283FFF803FFE01009039FE01FF80010F90B500F8
6EB612006D03E0021F14FC0101038002035CD9003F01FCC96C13C0020301C0DC07FEC7FC
686E7AEA77>38 D<166016F0ED03E0ED07C0ED0F80ED1F00153E5D5D4A5A14034A5A4A5A
A24A5A4AC7FC5C147E5C13015C1303495AA2495AA2495AA2495AA2137F91C8FC5BA2485A
A3485AA3485AA3120F5BA2121FA35B123FA55B127FA812FFA25BB17FA2127FA8123F7FA5
121F7FA3120FA27F1207A36C7EA36C7EA36C7EA27F80133FA26D7EA26D7EA26D7EA26D7E
1301801300147E147F806E7E6E7EA26E7E6E7E14016E7E157C8181ED0F80ED07C0ED03E0
ED00F01660249571EF3C>40 D<126012F0127C7E7E6C7E6C7E6C7E6C7E6C7E7F137E7FA2
6D7E6D7E8013076D7E801301806D7EA2147FA26E7EA26E7EA281140F81A26E7EA36E7EA3
6E7EA38180A21680A3157F16C0A5153F16E0A816F0A2151FB1153FA216E0A816C0157FA5
168015FFA31600A25C5DA34A5AA34A5AA34A5AA25D141F5DA24A5AA24AC7FCA214FEA249
5A5C13035C495A130F5C495A49C8FCA2137E5B5B485A485A485A485A48C9FC123E5A12F0
1260249578EF3C>I<1838187C18FEB3B3AA003FBE12F0481DF8BF12FCA36C1DF86C1DF0
CB48CBFCB3B3AA187C1838666778D877>43 D<EA07E0487E487E487E487EB5FCA21480A3
14C07E7EEA1FFBEA0FF3EA07E3EA0003A6EB0780A4EB0F00A3131EA2133E133C137C1378
5B12015B485A485A120F48C7FC123E121C1208122D738F2B>I<B8FCA928097EA433>I<EA
07E0EA0FF0EA1FF8EA3FFCEA7FFEB5FCA6EA7FFEEA3FFCEA1FF8EA0FF0EA07E01010738F
2B>I<ED1FF84AB57E020F14F0023F14FC9139FFF00FFF49D980017F4948C76C7E49486E
7E49486E7E49486E7E49486E7E49486E7E49486E7EA24890C91380A24818C049167F0007
18E0A2000F18F049163FA2001F18F8A3003F18FCA349161FA2007F18FEA700FF18FFB3A8
007F18FEA76D163F003F18FCA4001F18F8A46C6CEE7FF0A2000718E0A26D16FF6C18C0A2
6C6D4A13806C18006E5C017F5E6D6C4A5A6E140F6D6C4A5A6D6C4A5AD903FFECFFC06D6D
485B6DD9F00F90C7FC023FB512FC020F14F0020114809126001FF8C8FC40667AE24D>48
D<150E153F5D5D1403140F143F49B5FC130F000FB6FCB7FC14CFEBFE0F13F0EAF000C7FC
B3B3B3B3A44A7F4A7F49B512F8007FB812E0A5336373E24D>I<913801FFC0021F13FE91
B67E4915F0010715FC90260FF8017F903A3FC0003FFF49C7000F13C001FC02037F48486E
7F48486E7F48486F7E5B48486F7E48C97F83003E18807113C0127EEA7FE06D6F13E07F48
7E7F6D6F13F0A66C5A6C5A6C5A6C485D6C4817E0CAFCA34D13C0A219805F1900A24D5AA2
4D5A604D5A4C5BA24C5B604C90C7FC4C5A4C5A5F4C5A4C5AEEFF804B90C8FC5E4B5A4B5A
4B5A4B5AED3F804BC9FC15FE4A5A5D4A5A4A4815F04A5A4A5A4AC8EA01E0147E5C495A49
5A5C4948150349C913C0131E4916075B49161F48B9FC5A481880A25A5A5A5ABAFC1900A3
3C6378E24D>I<ED3FF80207B512C0021F14F0027F14FE903A01FFC01FFF902703FC0003
13C0D90FE001007FD91F806E7E013EC86C7E4982496F7E498248486F138013FF486D16C0
80487F6E6E13E0A67E4A5C6C4916C06C5B013FC8FC90C91480A25F1900A24D5A604D5AA2
4D5A604C5B4C5B4C48C7FCEE1FFCEE7FF092381FFFE0020FB512804A01FCC8FCEEFFC06E
14F891C7EA1FFE933803FF80040013E0717E717EEF1FFE717E19807113C0A27113E019F0
7113F8A219FCA219FE83A219FFA2EA03E0EA0FF8487E487E487EA2B57EA219FEA25F19FC
91C8FC6C5A4917F8495D6C4817F090C914E06C5E6C6C17C06D4B1380D807F04B13006C6C
4B5AD801FE4B5A6C6C6C4A5AD93FF0010313E090271FFF801F5B010790B6C7FC01015D6D
6C14F0020F14C09126007FF8C8FC40667AE24D>I<18F04D7E1703A21707170FA2171F17
3FA2177F17FFA25E5EA25EEE0FBF173F161F163E163C167C16F816F01501ED03E016C015
07ED0F80ED1F00A2153E5DA25D4A5AA24A5A4A5AA24A5A4AC7FC141E143E5C147814F849
5A5C1303495A5C130F49C8FC131E133E5B5BA2485A485AA2485A485AA248C9FC123EA25A
5ABB12F0A5CAD87FF8C7FCB14D7EA20407EBFF80033FB712F0A544657CE44D>I<01C016
18D801F0167C01FEED03FCD9FFC0EC1FF802FF903803FFF092B6FC6060604DC7FC5F5F17
E05F94C8FC16FC01F314E09026F01FFCC9FC91CBFCB3ED3FF00203B5FC021F14C0027F14
F09139FFC01FF8903AF3FC0007FED9F7E0EB01FFD9FF806D7F91C86C7E496F7E4982496F
7E4982170FD800C08290C97F831980A219C0A28319E0A419F0A4EA07C0EA1FF0487E487E
A2487EA319E0A25B5F4917C06C5A01C017800078C9FC6C5E1900003E5F001E161F001F5F
6C6C4B5A00075F6D157F6C6C4B5AD801F84A5B6C6C4A5B017FDA0FFEC7FCD93FC0EB3FFC
903A1FFC01FFF80107B612E06D158001004AC8FC023F13F0020390C9FC3C6678E24D>I<
EE1FFC4BB57E030F14E0033F14F89239FFF003FC4A903880007EDA07FCC7121F4A48EC0F
80DA1FE0EC07C0DA7FC014034A48EC1FE04990C8127F494815FF49484A13F05C010F5D49
5A133F5C017F6F13E0495A7113C04849ED7F8048EF1E0095C7FC4890CBFCA35A5B121FA3
123FA216404990381FFF80007F027F13F04AB512FC4A14FF912607E0017F913A0F80007F
E0021EC7EA1FF000FF496E7E4A6E7E4A6E7E4A8101FD6F1380EBFFC07113C04A16E0F07F
F091C9FC19F8A219FC49163FA219FEA44917FF127FA7123FA27FA2121F19FEA3120F19FC
6C6C167FA219F87E19F06C6D15FF19E06C6D16C0017F4B138080013F4B13006D6C4A5A6D
6C4A5A6D6C4A5A6D6C4A5A6D6C6CEBFFE06DD9F0071380023FB6C7FC6E14FC020714F002
0114C09126001FFCC8FC40667AE24D>I<EA0780A2487E7FEBFF8091B912C0A35A1A801A
00A26161615A610180C9EA03E0003ECA12074E5A003C604EC7FC007C5F0078177E187C60
17014D5A60484C5A170F60CA48C8FC5F177E177C5F16014C5A5F16074C5A5F161F94C9FC
5E167EA216FE5E1501A24B5AA215075E150FA2151F5E153FA3157FA25E15FFA35CA35CA3
5E5CA55CA75CAB6E90CAFCA26E5A6E5AEC00F0426878E44D>I<ED1FFC4AB512C0020714
F0021F14FC91397FE007FF02FEC713C0D903F0EC1FE049486E7ED90F80EC03F849C86C7E
013E6F7E013C167F137C49EE3F80A24848EE1FC0A21203F00FE0A21207A37FA27F19C06D
161F7F6E16806C6D153F02F016006E5D6C01FE15FE6E6C5C6C6E495A03F013036D6D495A
6D01FE495A9239FF801F806DDAC07FC7FC6DECF0FE6DECFBF86DECFFF06D15C06D7E6E14
F0020F806E14FE83021F15C0027F81DAFF0F14F8902603FC0780902607F8018090270FE0
007F7FD93FC06D14804948010F14C049C76C14E04848140148486E14F049033F13F84848
150F000F7013FC484815017113FE4848163F181F4848160FF007FFA290CA7E4883A384A4
19FEA26C7E19FC18016C6C17F8A26C6CEE03F0A26C6CEE07E06C6CEE0FC06C6CEE1F806C
6CEE3F006C6C6C157E6D6C4A5AD93FF0EC07F8D91FFEEC3FF0903B0FFFE003FFE0010390
B6128001004BC7FC023F14F8020714C09126003FFCC8FC40667AE24D>I<ED1FFC4AB57E
020F14F0023F809139FFF007FE4990388001FF4948C76C7ED907F86E7ED91FF06E7E4948
6E7E017F6F7E4A8149486E7E48707E4890C8FC48188083484817C0121F19E0003F177F49
17F0A2127F19F8A300FF18FCA2183FA319FEA719FF007F5FA4123FA26D93B5FC121FA200
0F5EA26C7E6C5E6C7FEF07BF6C6DEC0F3F137F6D6C141E6D6C143C6D6C027813FED907FE
EB01F0903A01FF8007E06D90B512C0023F1480020FEBFE00020101F814FCDA0002C7127F
92C8FCA219F8A319F018FFA219E0A24D13C01378D801FE1780486C5D486D1600A2486D4A
5A60170F4D5A4A5D4D5A6C90C8485A494B5A01F84A90C7FCD803C04A5A6D4A5AD801F8EC
1FF8D800FEEC7FF0903A7FE003FFC06DB65A010F4AC8FC6D14F8010014E0DA0FFEC9FC40
667AE24D>I<EA07E0EA0FF0EA1FF8EA3FFCEA7FFEB5FCA6EA7FFEEA3FFCEA1FF8EA0FF0
EA07E0C7FCB3AEEA07E0EA0FF0EA1FF8EA3FFCEA7FFEB5FCA6EA7FFEEA3FFCEA1FF8EA0F
F0EA07E0104073BF2B>I<183C187E18FFA34D7FA34D7FA34D7FA34D7FA24D7FA34D7F17
3EA2057E7FEF7C7FA205FC7F4D7EA20401814D7EA2DC03E080840407814D7EA2040F814D
7EA2041F814D7EA24C81043E7FA24C81197F04FC814C80A20301834C80A20303834C80A2
0307834C80A24B488285031F8393C87EA24B83033E81A2037E83037FB8FCA292BAFCA3DA
01F8C9003F7F4B82A24A4884860207854B82A2020F854B82A2021F8592CA7EA24A85023E
83A24A851B7F02FC854A84A2010187496C84A2D90FFE86496C60017F6D4D7F0003B500F0
0403B512FCB74BB8FCA5686B7BEA73>65 D<BA12FCF1FFE01AFC1AFF1BE0D8001F01FCC8
001F7F010349030313FC4B03007F6DF03FFF7413C0747F86747F88747F8688A2757EA375
1380A9511300A3515AA2505B6462505B505B505B505B5048C7FC505A070313F0071F5B96
B5C8FC92B812FC1AE01AFEF2FFC003F0C8000313F89638007FFE97381FFF8008077F7413
F0747F747F757E757E1D807513C0871DE0A27513F0A27513F8A31DFCA91DF8A2631DF0A2
631DE0635113C05113801D0098B5FC505B08075B5013F049063F5B6F93B55A011F6D030F
91C7FCBC5A1BF01BC050C8FC1AC05E667AE56D>I<942601FFF01518057F01FF153C0403
B612E0041F03F8147C047F03FE14FC4BB5398007FF80030701F8C7387FC001031F01C091
380FE003DB7FFEC83803F807DBFFF8ED00FC020349EE7E0F4A01C0EE3F1F4A90CAEA0F9F
4A48EF07FF4A48834A48834A5A4949834949187F4949183F5B4990CC121F495A1C0F495A
01FF1A075C481B035C5A1C01485BA2481B005C5AA348491A7CA4481C381D0091CFFCA3B5
FCAE7EA380A27E1D181D3CA26C7FA37E806C1C78A26C7FA26C1CF0807E6EF101E0137F6D
6CF103C0A26D6CF107806D7F6DF20F006D6D606D6D181E6D6D606E6C606E6C606E6C1701
6E6C6C4C5A6E6DEE0FC06E01F04C5A02006D047EC7FCDB7FFE4B5A92261FFFC0EC07F803
0701F8EC3FF00301903AFFC003FFC06F6C90B6C8FC041F15FC040315F0DC007F14800501
01F0C9FC5E6C78E86F>I<BA12FEF1FFE01AFCF2FF801BE0D8001F49C8003F13F8010349
030313FE4B9238007FFF6D061F13C008077F08017F7413FCF33FFE757E757F757F87757F
89757F1C7F89767EA2767EA27613801EC0A2881EE0A27613F0A31EF8A288A21EFCA51EFE
AF1EFCA61EF864A21EF0A35213E0A21EC064A21E80521300A2525AA2525A651CFF515B51
5B515B515B5190C7FC515A515A50485A505B080F13C049067F5B6F4B4848C8FC011F6D03
3F13F8BC5A1B8050C9FC1AE04FCAFC67667BE575>I<BD12F8A488D8001F49C9FC010349
16074B16006D193F1B0F1B071B031B01757EA21C7EA21C3EA31C1E1C1FA388A6071EEC07
80A499C7FCA4193EA3197EA219FE18011807183F92B7FCA503F8C7123F18071801180019
7EA2193EA3191EA21D3CA31D78A396C9FCA31DF81DF0A31C01A31DE01C03A21C07A31C0F
F41FC0A21C3F1C7F1CFF635113801B0F49193F6F4CB5FC011F6D163FBEFCA21D00A35E66
7AE569>I<BD12F0A41CF8D8001F49C81201010349ED000F4B16016DF0007F1B1F1B0F1B
071B03F301FCA21B00A21C7CA31C3C1C3EA31C1EA61C0F193CA31C00A5197CA319FCA218
011803180F187F92B7FCA503F8C7127F180F180318011800A2197CA3193CA896C9FCB3A6
497F81011FEBFFC0B9FCA558667BE564>I<942603FFE01530057F01FE15780403B612C0
041F03F014F893B700FC1301030391388007FF030F01F0C7EB80034B018091381FE007DB
7FFEC83807F00FDBFFF8ED01F8020301E0923800FC1F4A49EE3E3F4A90CA121F4A48EF0F
FF4A48834A48834A4883495B4949834949187F4990CCFC491A3F495A1C1F495A01FF1A0F
5C481B075C5A48491903A3481B015C5AA348491900A35A1D709AC7FC91D0FCA3B5FCAE7E
A2070FB8FC80A37E96C7003F1400090713FC6C6D725B87A27E807EA2807E7E807E80137F
6D7EA26D7E6D7F7F6D7F6D7F6D6D5F6E7E6E6C5F6E7E6E6C6CEE0FBF6E6DEE1F9F6E01F0
EE3F1F020001FCEE7E0F6FB4923801FC07031F01C0913807F8036F01F891383FF0010303
903BFFC003FFC000030091B6481338041F4BC71210040303F091C7FCDC007F1480050301
F0CAFC686C77E879>I<B812FCA5D8000FECC000010391C7FC6D5B6D5BB3B3B3B3AE497F
497F010F14C0B812FCA52E667CE537>73 D<021FB8FCA591C7003F1400040713FC705B82
B3B3B3AE7FEA07F0EA1FFC487E487EA2B57EA3605EA291C75C7E494A5B5BD83FF04A5B01
8093C7FC6CC85A6C6C5D6C6C4A5A01F04A5AD801F8ECFFE06CB401035B90267FE00F90C8
FC011FB55A010714F8010114C09026001FFCC9FC40697AE54F>I<B800F0033FB61280A5
D8001F0280C90007ECF000010301FCCA000191C7FC7513F86D4919E0659AC8FC64F301F8
64515A515A515A093FC9FC1B7E63F201F0505A505A505A50CAFC1A3E6262F103F04F5A4F
5A4FCBFC193E61614E5A4E5A4E5A4E5A063FCCFC604E7E4D7F4D7F5F4D7F4D7F5F057D7F
05F87F933803F07FDC07E07F4C486C7F4CC66C7F163E4C6D7F4C6D7FEDF9F0DBFBE06D7F
DBFFC06D7F4C7F93C87F4B6F7E4B6F7F5D737F737FA2737F737F737FA2737F747EA2747F
747FA2747F747F747FA2747F747FA2757E757F8789757F89878989496D4D7F777E011FD9
FF80043F14F0B800F0020FB712E0A56B667BE577>I<B9FCA5D8001F02C0CBFC010349CC
FC5D6D5BB3B3B31CF0A5F301E0A61B03A4F307C0A31B0FA31B1F1B3FA2F37F801BFF6262
62621A3F4995B5FC6F1507011F6D92B6FCBD1200A554667BE560>I<B600F8083FB6FC6F
62A36F97B7FCD8001FF6F800902603EFFFDF01EF13C0A201016602E76DF003CFA202E36D
F0078FA302E16DF00F0FA202E06D181EA36F6C183CA26F6C1878A36F6C18F0A26F6CEF01
E0A36F6DEE03C0A26F6DEE0780A36F6DEE0F00A36F6D161EA2706C5EA3706C5EA2706C5E
A3706C4B5AA2706D4A5AA3706D4A5AA2706D4AC7FCA3706D141EA2716C5CA3716C5CA271
6C5CA3716C495AA2716D485AA3716D485AA2716D48C8FCA371EBF01EA2726C5AA3726C5A
A2726C5AA3726C5AA2725B497EA2496C6F5BA2D91FFE6F90C9487F497E0003B500F097B5
12F8B700C06D480207B8FCA2197CA2193880667AE58D>I<B600F00403B7FC81818181D8
0007DE000F14C001016E0400EBFC0070715AF41FE002EF7F02E76D715A02E37F765A02E1
7F02E07FA26F7E6F7F6F7FA26F7F6F7FA26F7F6F7F6F7FA2707E707FA2707F707F707FA2
707F707FA2707F717E717FA2717F717FA2717F717F717FA2717F727EA2727F727F727FA2
727F727FA2727F727F737EA27313807313C0A27313E07313F07313F8A27313FC7313FEA2
F27FFF7413877413C7A27413E77413F7A27413FF8686A28787A2878787A2496C8487497E
87D91FFE197F496C193F0003B512F0B700C0171F1C0FA21C0776C7FC68667BE573>I<94
380FFFC04CB512FE040FECFFC0047F15F8922701FFFC0013FE030701C090380FFF80DB1F
FEC7000113E0DB7FF89138007FF8DBFFE0ED1FFC0203496FB4FC4A90C900037F4A48707F
DA3FFC7013F04A48717E4A48717E4949717E4949717EA24949717F4990CB6C7F49874948
727F4A84017F874948737EA24849737EA248884A85481D80A248497313C0A3481DE04A85
A2481DF0A3481DF891CD7EA5B51CFCAF6C6D4F13F8A56C1DF0A26E61A26C1DE0A26E616C
1DC0A26C1D806E61A26C6D4F1300A26C646C6D4F5AA26D6C4E5BA26D6C4E5B6D6D4D5B6D
636F5F6D6D4D5B6D6D4D90C7FC6D6D4D5A6D6D4D5A6E6C4C5B6E6C4C5B6E6D4B5B02076D
4B13806E01F0033F90C8FC6E6D4B5A9126007FFE913801FFF892261FFFC0010F13E00307
01FC90B51280030190B648C9FC6F6C15F8040F15C004014ACAFCDC000F13C0666C78E877
>I<BA12F0F1FF801AF01AFE747ED8001F49C814E0010349030F7F4B030113FC6D716C7E
747E747F08077F88747F747FA2747FA288A2757EA31D80AA1D00A3515AA264A2505B6462
505B505B505B5090C7FCF27FFC4F485A070F5B96B512C092B9C8FC1AFC1AE04FC9FC03F8
CDFCB3B3A3497FA2011FEBFF80B812F0A559667AE569>I<BAFC19F8F1FF801AF01AFCD8
001F49C7000713FF010349DA003F13C04B030713F06D05017F737FF23FFF747F747F747F
A2747F888688A28886A288A864A26264A2646264505B64505B5090C9FC505AF2FFFC4F13
F0070713C0073F5B952607FFFCCAFC92B812F01A8007FCCBFCF1FF8003F8C7000F13E006
007FF13FFC737E736C7E737F737F737F85871A7F87A2747EA287A688A688A61FC076EB01
E086A38676EB03C086497F746DEB0780011FD9FF8081B800F070EB0F00E0007F5C756C13
3E98391FFF80FC0907EBFFF8CE00015CE1003F13C00A0390C7FC6B697BE571>82
D<DBFFF0140C020701FF141E023F14E091B600F8133E010303FE137E499038800FFFD91F
FCC7EB80FED93FF0EC1FE1D97FC0EC07F149C8EA01FB4848ED00FF4848167F183F484816
1F4848160F1807485A1803123F491601127F1800A2197E12FFA2193EA27FA36D171EA27F
127F6D170C6D94C7FC7F6C7F806C13F014FE6CEBFFE015FE6CECFFE06C15FE6CEDFFE06C
16FE6D6F7E6D16E06D16F86D16FE6D820101836D83021F82020782DA007F81030781ED00
3F040380DC003F7F17070500148084061F13C084847213E0A284A200607113F012F0197F
A3193FA37EA31AE07EA36CF07FC0A26C19806D17FF1A007F6D4C5A6D16036D5F6D4C5A01
FF4C5AD99FC04B5AD90FF04B5AD907FCEDFF8027FE03FFC0010390C7FC48C601FEEB1FFE
023FB612F848010F5D48010315C0DA003F49C8FC0060020113E0446C78E855>I<001FBE
1280A502F8C76C9038E000014890C86C49D9000F13C001FC6F49140301F01A00491B7F49
1B3F491B1F90C9180FA2003E1C07A348F403E0A500781C01A600F81DF0481C00A5CA1900
B3B3B3A54D7F4D7F0407B512FE0203B912FCA564657BE46F>I<B800F00207B7FCA5D800
1F0280C9001F14C0010301FCCA0001EBFC00755B6D49F03FE0A2765AA2765AB3B3B3A86D
50C7FCA281A2147F1C3EA26E6C60A2141F6F6080515A6E6D16036E616E6D4C5A70160F6E
6D4C5A037F4DC8FC6F6C167E6F6C5E6FB4ED03F803036DEC0FF06F01E0EC3FE09226007F
FCECFF8093273FFF800F90C9FC040F90B512FC04035D040015C0051F91CAFC050013F068
697BE573>I<B86C030FB612F0A5C66C0280CA6CEBFE00010F01FCCB001F13E06D490607
13806D7490C7FC656D745A65816D63811C03027F626F18076E62821C0F6E6270171F6E97
C8FC82646E193E70177E6E197CA27017FC6E61821B016E61701603037F60821B076F6071
150F6F60831B1F6F95C9FC715D6F173EA271157E6F177C831BFC6F5F7114016F5F831A03
047F5E711407705E841A0F705E72131F7093CAFCA2725B70153E841A7E70157C7213FC70
5D841901705DF0FE03057F5C18FF1907715C198F715CA219DF7191CBFC19FF715BA3715B
A3715BA2715BA3725AA2725AA3725A72CCFC6C697DE573>I<B8027FB76C91B612FEA5C6
6C91C9003F02C0C8000714C0011F01F8040F49CAEBFE006D497001F8EF7FF86D4970F11F
F06B6F70735A7F7C5A6F707F6D56C7FCA26F717E6D201EA26F84027F67A26F94B57E6E67
A270DB01EF7F6E67A270DB03C77F6E545AA270DB07837F6E545AA270DB0F017F6E545AA2
70DB1E007F6E54C8FCA2704B6D7E6E1E1EA2704B6D7E037F65A2704B6D7F6F65A2714948
6D7F6F65A27149486D7F6F525AA27149486D7F6F525AA27149C76C7F6F525AA271011E6E
7F6F52C9FCA271496F7E6F1C1EA271496F7E047F63A271496F13807063A2DE81E06F13C0
7063A2DEC3C06F13E070F2E1E0A2DEE7806F13F170F2F3C0A206FFC96C13FB70F2FF80A2
4E827098CAFCA24E837062A24E173F057F61A24E171F053F61A24E170F051F61A24E1707
050F61A24E170371CB6C5A97697DE59E>I<003FB700E091B712F0A5D8000F4AC8000F02
F8C7FC010102F0030314806D4A6F01FCC8FC6E496F13F06E725A6E617094C9FC6E7F6E6D
167E636E6D4B5A6E7F505A6E6D4B5A6F7F505A6F6D4A5A6F7F50CAFC6F6D147E6F6D14FE
6F5E71495A6F6D495A8171495A706D485A8272485A706D48CBFC82F0F07E706D5A7013F9
F0FDF870EBFFF0705CA2715B83A2717F717FA2717F717FA2854D7F5F86DD1FBF7FEF3F1F
86DD7E0F7F4D7E864C486C7F4C487E0407814D6C7F4C487F4C4881737F4CC76C7F167E73
7F4C6E7F4B5A737F4B486E7F4B5A030F6F7F4C6F7F4B5A4BC96C7F747F037E824B84747F
4A48824A4884747F4A4882020F854A48717F4A6C83027F8649486C8501076D4D7F011F6D
94B57E48B6040714FFB700F0037FEDFFC0A56A667CE573>I<B800C00303B612FCA5D800
3F02E0CA003F1400010791CB000F13F86D7413C06D49725B6D6D4FC7FC765A6E6D606E6D
4D5AA26E6D4D5A656E6D170F6E6D4D5AA26E6D4DC8FC6E6D177EA26E6D5F515A6F7F6F6D
4B5A646F6D15076F6D4B5AA26F6D4B5A51C9FC6F7F6F6D157E1B7C6F6D15FC706D495AA2
706D495A505A707F706D495A505A707F706D49CAFC1A3E706D137E62707F71EB81F8F183
F07113C371EBE7E0627113FF62837191CBFC6183715BB3B05F85050FEBFFC0047FB712F8
A56E667EE573>I<913807FF80027F13F80103B6FC010F15C090263FF8007FD97F80EB3F
F801FCC7EA0FFC486C6E7E6D6E7E486D6D7F6E6D7F486D81177F84173F846C5B171F6C49
816C90C8FC133C90C9FCA6173F0303B5FC157F0203B6FC141F91B5EAC01F0103EBF80001
0F13C04990C7FCEB7FFCEBFFF0485B4813804890C8FC5A485A5B123F491878127FA2485A
A4173FA3177F6C7E17FF003F922601EFFE13F86D03E714F06C6C913903C7FF016C6CDA0F
83EB83E06C6DD91F0313EF6C01E0D97E01EBFFC06C9027FC03FC0014806C6CB500F09038
7FFE00011F4A6D5A01030280EB0FE09026003FF8CAFC45457AC24D>97
D<14FCEA07FFB5FCA51201EA007F133F131FB3AAEE03FF043F13F093B512FE03036E7E92
260FF80313E0923A1FC0007FF0037EC7EA1FF84BEC07FEDAFDF06E7EDAFFE06E7F4B6E7F
4B6F7E92C9123F4A83737E4A83190F86A2737EA21B80A31BC085A31BE0AC1BC0A3611B80
A31B006162A24F5A626E163F6E5F4F5A6F4B5ADAF3C05E6F4A90C7FCDAE1F04A5ADAC0F8
EC0FFC037EEC3FF89126801F80EBFFE092260FF0075B4A6CB6C8FC011E010114FC90C86C
13E0DC07FEC9FC4B6A7CE755>I<ED1FFF4AB512F0020714FE021F6E7E91267FF80013E0
DAFFC0EB0FF0010390C7EA01F8D907FC4A7E4948140749484A7E4948141F017F4B7E495A
485BA24890C8FC48705AA248486F5A715A001FEE01E04992C8FC123FA3127F5BA312FFAC
127FA27FA2123FA36C6CEE0180F003C0120F6DEE07807E6C7FF00F006C7F6C171E6D6C5D
6D7E6D6C5D6D6C5D6D6CEC03E06D6C6C495A6D01E0EB3F809028007FFC01FFC7FC021FB5
12FC020714F0020114C09126001FFCC8FC3A457BC244>I<193F4DB5FC173FA5EF007F18
1F8484B3AAED0FFC92B512C0020714F0021F14FC91397FFC01FF913AFFE0003F87010301
80EB07C74948C7EA03E7D90FF8EC00F74948157F494881017F82495A484981488391C9FC
5A485AA2121F5B123FA3127F5BA312FFAC127FA37F123FA3121FA26C7EA212076D5E7E6C
6D5D6C5F806D6C5D6D6C03F77F6D6CDA03E77F6D6CDA07C713F0D903FFDA1F87EBFFE06D
01C0EB7F076D9038F803FC023FB512F8020F14E002010280ECFC009127001FF80001E0C7
FC4B6A7BE755>I<ED3FF84AB57E020F14E0023F14F891397FF00FFE903A01FF8001FF49
48C713C0D90FFCEC3FE049486E7E4948814948140F49486E7E4A814816034890C87F4882
1980485A83001F18C05B123FA3007F18E049167FA4BAFCA319C001F8CBFCA7127FA37F12
3FA3121F6D17C0000FEF01E0A212076DEE03C07E6EED07807E6C6DED0F006D6C5D6D6C15
3E6D6C5D6D6C5D6D6C4A5AD901FFEC07E06D01C0EB3FC091273FF801FFC7FC6EB55A0203
14F8020014C0DB0FFEC8FC3B457CC244>I<EEFF80030F13E0033F13F892B57E4AEB80FE
4A48487E91260FF80113804A485A4A484813C0147F15C014FF49138070138049496C1300
705A49157C94C7FC5C130FB3A5B8FCA526000FFEC9FCB3B3AF805B017F13E0007FB612F8
A5326A7CE92F>I<F13F80DB7FE0903803FFE0912607FFFE010F13F0021F9026FF803F13
F8027F9138E07FC3903D01FFC03FF8FE07FC499039000FFFF0D907FC010313E049486D13
8049486DEC03F8494891397FC001F0017F70C7FC49486E7EA24883A248496E7EA34883A8
6C5FA36C6D4A5AA26C5FA26D6C4A5A013F5E6D6C4A5A6D6C4990C8FC6E495A49B4EB0FFC
499038C03FF8D93C7FB512E0D97C1F1480D9780749C9FC9039F8007FE092CBFCA31201A3
7F1200A27F7FEB7FC091B612F86DEDFFC018FC6D16FF6D17C06D8319F8011F83017F83D9
FFC0C700077FD803FEC9123FD807F8040713804848040113C048488249EF7FE0003F183F
4848171FA21AF048CB120FA66C19E06D171FA26C6CEF3FC06C6CEF7F80A26C6CEFFF00D8
07FCEE03FED801FEEE07F86C6C6CED1FF0D97FF0EDFFE0D91FFE02071380902607FFE0D9
7FFEC7FC010190B612F86D6C15E002074AC8FCDA003F13C046637CC24D>I<14FCEA07FF
B5FCA51201EA007F133F131FB3AA933801FFC0041F13FC047F13FF4BB67E922603FC0313
E0923A0FE0007FF0DB1F80EB1FF8033EC7FC4B6E7E03F0811807DAFDE081ECFFC04B80A2
92C880A35CA35CB3B3A2496C4B7F90B56C021F13F0B7D8801FB612F0A54C687BE755>I<
130FEB3FC0497E497E487FA2487FA46C5BA26C5B6D5A6D5A010FC7FC90C8FCB3147C3803
FFFCB5FCA51201EA007F133F131FB3B3AD497E90B51280B7FCA520657BE42A>I<ED0780
ED1FE0ED3FF0ED7FF8EDFFFCA24A13FEA46E13FCA2ED7FF8ED3FF0ED1FE0ED078092C7FC
B3167E913807FFFE91B5FCA51400153F151FA2150FB3B3B3ADEA0FC0D83FF014FC487E15
1F486C14F8A216F0153F16E06C5AED7FC049EBFF80D83FC014006C48485A390FF807FC00
03B512F06C5C6C6C1380D907FCC7FC278486E42F>I<14FCEA07FFB5FCA51201EA007F13
3F131FB3AC053FB512F8A5050F91C7FC050313F819C096C8FC6018F84D5A18C04D5A4DC9
FC177E5FEE01F04C5A4C5AEE1F804CCAFC167C16FC4B7EED07FF5D4B7F4B7F037D7F15F9
DAFFF07F4B6C7EED803F03007F4A6D7E4A6D7E5C707F707F707FA2707F717E173F84717E
717EA2717F717F717FA2717F858585496C8290B5020314E0B7011FECFF80A549687BE751
>I<14FCEA07FFB5FCA51201EA007F133F131FB3B3B3B3AF497E90B57EB71280A521687B
E72A>I<02F8902603FF80EDFFE0D807FF021F01F8020713FEB5027F01FE021F6D7E4BB6
027F80922607FC039027C001FF0013F092260FC0009026E003F0EB3FF84BC7273FF007C0
EB0FFC0001023E4C5AD8007F017891261FF81EC76C7E013F496F488190261FF9E0020F49
8007FE83DAFBC05EDAFF806E6C4880A292C84A82A34A5FA34A94C8FCB3B3A2496C4B6D4A
7F90B56C023F01E0020F13F8B7D8803FB6D8E00FB612F8A575427AC180>I<02F8903801
FFC0D807FF021F13FCB5027F13FF4BB67E922603FC0313E0923A0FE0007FF0DB1F80EB1F
F80001023EC7FCD8007F496E7E013F01F081011F1607DAF9E081ECFBC0DAFF8080A292C8
80A35CA35CB3B3A2496C4B7F90B56C021F13F0B7D8801FB612F0A54C427BC155>I<ED0F
FF92B512F0020714FE021F6E7E91267FF80113E0913AFFC0003FF0010390C7EA0FFC4948
6E7ED90FF8EC01FF49486E7F49486F7E49486F7E49486F7E488491C9120F48844848707E
A2000F844982001F1980A2003F19C0A24982007F19E0A400FF19F0AC007F19E0A36D5E00
3F19C0A3001F19806D5E000F1900A26C6C4C5AA26C606C6D4B5A6C6D4B5AA26D6C4B5A6D
6C4B5A6D6C4A5BD907FEDA07FEC7FC6D6C4A5A6D01C0EB3FF8903B007FFC03FFE0021FB6
128002074AC8FC020014F0030F90C9FC44457CC24D>I<02FCEB03FFD807FF023F13F0B5
91B512FE03036E7E92260FF80313E0923A1FC0007FF0037EC76C7EC64AEC0FFE90263FFD
F06E7EDAFFE06E7F6D496E7F4B6E7F92C9FC4A707E864A707EA2737EA2737EA21B8085A2
1BC0A3851BE0AC1BC061A31B8061A21B006162A24F5A626E167F6E4C5A626F4A5B6F4A5B
6F4A90C7FCDAFDF04A5ADAFCF84A5A037EEC7FF8923A1F8001FFE092260FF0075B6FB6C8
FC030114FC6F6C13E0DC07FEC9FC93CBFCB3A2497E90B57EB77EA54B5F7CC155>I<DB0F
FC140F92B56C5B020714E0021F02F85B91397FFC01FC9139FFF0003F010301C090380F80
7F4990C7EA07C049486E6C5A494814014948EC00F1494815794948153D48173F4849815C
48834890C9FCA248835B123FA25B127FA35B12FFAC127F7FA3123FA27F121FA26C7EA26C
6D5DA26C6D5D6C5F6C7F606D6C15F76D6CEC01E76D6CEC03C7D907FEEC0F876D6C6CEB1F
076D6D137E903A007FF807FC6EB512F0020F14E0020114009138001FF892C8FCB3A24E7F
063F13E0053FB612E0A54B5F7BC151>I<02F8EB0FE0D807FFEC7FFCB549487E4B7F9239
07F07F8092390F80FFC0ED1E0100014A4813E0D8007F1378013F13F0EB1FF915E09126FB
C00113C0701380DAFF80EB7F00171C94C7FC92C9FCA35CA55CB3AF80133F90B512C0B712
F0A533427CC13C>I<DA3FFC13180103B5EA803C011FECE07C017FECF8FC9039FFC003FD
D803FEC7127FD807F8141FD80FE0140749140348481401123F160048C9FC177CA25A173C
A27FA27F7F6D1518D87FFC92C7FC13FF6C13E0ECFF806C14FC6CECFFC06C15F06C15FC6C
15FF6C82013F816D81010381D9007F80020780DA001F7F03017FED003F040F1380006015
0300F0817013C0A26C167FA2173F7EA37E18807EA26DED7F00A26D15FE7F6D4A5A6D4A5A
017E4A5A486C6CEB3FE03BFC1FF001FFC0D8F807B6C7FC6D14FC48C66C13F00060010F90
C8FC32457BC23D>I<140FA75CA55CA35CA25CA25BA25B5B5B5B5B5B48B5FC000F91B512
F8B8FCA4D8000790C8FCB3AE170FAE6D151E81A27F173C6D7F17786E7E023F14F091391F
F801E091390FFE07C06EB51280020114006E6C5AED0FF8305E7DDB3C>I<02FCEE1F80D8
07FF93B5FCB5151FA50001EE003FD8007F160F013F82011F82B3B360A460A2130F60606D
7E187B06F37F0103846D6CDA03E313F86D6DD907C3EBFFF0DA7FE0EB1F83DA3FFCEBFF03
6EB512FC020714F8020102E0ECFE009127000FFE0001F0C7FC4C447BC155>I<B600FE02
3FB512C0A5000102C00207EBFC00D8003F90C8000113E06D486F138097C7FC010F177E19
7C806D17786F15F86D5FA26F14016D5F6F14036D5FA26F1407027F5E6F140F023F93C8FC
81021F151EA26F143E020F153C6F147C6E1578A27013F86E5DEEC0016E5DA26E6D485AA2
EEF007037F5C16F8033F49C9FCA2705A031F131EEEFE3E030F133CA2EEFF7C6F137817F8
6F5BA26F5BA36F5BA2705AA370CAFCA2161E4A427DBF51>I<B6D8FC07B6D8C001B6FCA5
0001912680000F01F8C7001F13F06C6C48C7000301E0020713C06D486E496E130071705A
011F63765A6E6F7E010F63183F6E7014016D047F5EA26F6F14036D04FF5EA26D6D6F4A5A
5F6FDAE7FE140F6D98C7FCEF03C36F6F5C027F0207161E18816F70133E023F020F163C18
006E6C705B5F6F011E6D6C13F8020F614D133F6FEEF0016E027C5E0578131F0480EDF803
6E02F85E4D130F6E01C06F485A16C1DCE1E0903807FE0F6E96C8FCDCE3C0130304F36F5A
DB7FF7161E4D7F04FF16BE6F17BC94C8FC6F17F8A24C157F030F5F4C153FA203075F4C15
1FA203035F4C150F03015F6F486FC9FC68427DBF6F>I<007FB500FE49B61280A5C66C01
F86D6CEBF000010F01E06E90C7FC6DEE1FFC6D4915F06D6D5D6D17806F92C8FC6E6C143E
6E6C147E021F157C6E6C5C6F495A6E6D485A6E6D485A6E140F6E01E05B7048C9FC92387F
F83E6F6C5A031F5B16FF6F5B6F5B6F5B81836F7F707EA24C7E4B7F4B7F04E77FED07C3DB
0F817FDB1F017F4B6C7F033E6D7E4B133F4B804A486D7E4A486D7E0207804B6D7F4A4881
4AC76C7F023E6E7F027E157F02FE6F7E0101830107707E011F4C7ED97FFF830007B56C91
B512F0B600E00107ECFFF0A54C407EBF51>I<B600FE023FB512C0A5C602C00207EBFC00
013F90C8000113E06D486F138097C7FC010F177E6E167C7F19786F15F86D5F6F14016D5F
8118036D5F6F1407027F5E6F140F023F93C8FCA26F5C021F151E6F143E020F153C6F147C
6E1578A27013F86E5DEEC0016E5D16E06E4A5AA2EEF007037F5CEEF80F033F91C9FC16FC
031F131EA2EEFE3E030F133CEEFF7C6F137817F86F5BA36F5BA26F5BA3705AA270CAFCA2
161EA2163E163C167C167816F85EA215015E15035EEA1FC0486C495A487E486C49CBFCA2
151E153E153C157C495B6C48485AEBC0036CC6485A4A5A391FE07F806CB5CCFC000313FC
6C13F038003FC04A5F7DBF51>I<000FB812FE84A302E0C7EA3FFE49C85BD81FF84B5A49
15FF494A5B495E494A5B5E90C8485B95C7FC4C5A001E153F4C5A5F4C5A003E5C003C4A5B
5F4B5B5D4B90C8FCC85B4B5A157F4B5A5E4A5B5C4A5B5E4A90C9FC5C4A48EC07805D4A5A
14FF495B5D4949140F491700495B92C8FC495A133F49485D5C495A485F485B4A5D48495D
5A4890C81203494B5A4848151F007FED03FFB9FCA37E39407CBF44>I<BC12F0A44C0480
A94D>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmsy10 10 3
/Fi 3 104 df<EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C13006C5A6C5A
EA03F0121272B22E>1 D<F07F8094380FFFC094B5FC04031480040FEBE000043F90C7FC
EE7FF8EEFFE04B5B4B90C8FC4B5A4B5A151F4B5AA24B5AA34B5AB3B3AD4A5BA34A5B93C9
FC5C4A5A5D4A5AEC7FF04A5A01035B010F90CAFCEB7FFE387FFFF0B512C049CBFCEBFFC0
6C13F038007FFEEB0FFF010313C001007F6E7EEC1FF86E7E816E7E80826E7FA36E7FB3B3
AD6F7EA36F7EA26F7E150F6F7E6F7E6F13C06F7FEE7FF870B4FC040F13E00403EBFF8004
0014C0170F9438007F803AA774FC53>102 D<EA7FC0EAFFFEEBFFC06C13F8000113FE39
001FFF8001077F01017F6D6C7E6E7EEC0FFC816E7E6E7FA26E7FA36E7FB3B3AD6F7EA36F
7EA26F7E150F6F7E6F7E6F7F6F13E0707EEE1FFE706C7E0403EBFF80DC007F13C0170F17
7F0403B51280040FEB80004C48C7FCEE7FF04C5A4B13804B90C8FC4B5A4B5A151F4B5AA2
4B5AA34B5AB3B3AD4A5BA34A5BA24A90C9FC4A5A5DEC3FF84A5A49485A01075B011F5B48
B448CAFC007F13F8B512C049CBFCEA7FC03AA774FC53>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr10 10 81
/Fj 81 123 df<DD3FFEED7FC00407B500E0903807FFF8043F02F8011F13FE93B600FE01
7F7F0307903DF001FF01FFC03F80031F90C7D83F83010013C0DB3FF8912607C7FCEB7FE0
DBFFE091260FEFF8EBFFF04A4991393FFFF0014A90C84816F84A4892B5485A4A4817C002
1F5D4A4817804A5A02FF7313F04B94C713E04970EE7FC04BF13F804971ED0E00734891C7
FC4B151F5BB3A6BE7EA5D800070180C8D81FFEC9FCB3B3B3A4496D4B7E87017F01F84AB5
12F0B7D8FC03B712FEA565757CF461>11 D<EF3FFC0407B57E043F14F04BB67E03079038
E007FE031F90C7127FDB3FF8EC1F80DBFFE0EC07C04A4914034A90C8EA1FE04A48ED7FF0
4A4815FF021F4B7F4A5A4A485C14FF5D5B5D5BA24B6E5B49705B735A735A96C9FCB3F13F
FC0507B5FCBBFCA5D800070180C7120184197F193FB3B3B3496D4B7EA2017F01F80203B5
12C0B7D8FC07B712E0A553757CF45C>I<EF3FFE0407B512F0043FECFC1C4BB712FC0307
EBE001DB1FFEC7123FDB3FF8147FDBFFE014FF4A495B4A90C7FC4A485C4A5A4A5A143F4A
5A02FF814B8049177F4B153F5BA25D5BB3A6BBFCA5D800070180C8123FB3B3B3A4496D4B
7EA2017F01F80203B512C0B7D8FC07B712E0A553757CF45C>I<DD1FFEEEFFF00407B500
C0021F13FE043F02F091B612C093B600FC01078103079026F003FE011F9038801FF8031F
90C7007F903A7FFC0001FCDB3FF891271F80FFE0EB007EDBFFE0DA07C30180141F4A49DA
03E790C87E4A4991260FFFFCED7F804A48C8003F494A487E4A484B495C021F93B54B7F4A
484A5C4A484D5C02FF5D4B5F5B4B94C8FC5B844B6E496F5B49765B077F7090C8FC071F70
5A9CC9FCB3F7FFF00B1FB5FCC1FCA5D800070180C8D81FFEC812078A8A8AB3B3B3496D4B
6C4B7FA2017F01F84AB500E0020F13FFB7D8FC03B7D8F01FB71280A581757CF48A>I<EC
01C0EC07F0EC0FF8EC1FFC143F15FE147F14FF4913FCA24913F84913F04913E015804913
00495A495A14F0495A485B485B49C7FC485A485A485A5BEA3F8048C8FC12FE5A12301F1F
5EF353>19 D<D803F0EC03F0D80FFCEC0FFC486C4A7E486C4A7E486D491380A2B56C90B5
12C0A26E15E0A46C6D6D13F0A26C81D81FFEEC1FFED80FFCEC0FFCD803F0EC03F0C791C7
FCA64948EC01E0A4010315034A15C0A34948EC0780A249C8EA0F00A2011E151EA2495DA2
495D495D00011501495D48484A5A48484A5A48C848C7FC001E151E001C151C0008150834
327BF253>34 D<DA07F01A0EDA3FFE1A1F91B5507E010314C0902707FC0FE0197F90270F
E003F04FC7FC4948C66C4E5A4948017C180349C76C4E5A496E6C4D5A48486E6C171F0003
04F0EF7FF0496E6C4D5A000704FE1603496E6C6C030F5B000F05F0033F5B932601E7FE91
3801FF7F48489226E1FFE090261FFCFFC8FC706C6CB6EAF0FE003F050F15C106019138FE
03FC942678001F01C05B007F95C8120749505A651C1F057C4C5A00FF043C5F1C7F52C9FC
641B01515A641B07641B0F515A641B3F515A007F047C93CAFC05785D505A636D1803003F
4F5A4D5D1A0F001F4F5A4C485D6C6C183F04034B5A00074C92CBFC6D02075D00034C495A
6D020F5D000193C712036C6C021E4A5A6D4A5D6D6C017C140F6D6C494A5A90270FE003F0
5D902707FC0FE0143F6DB5484A5A010091C890CCFCDA3FFE5DDA07F04A48ED03F891C949
ED1FFF0603047F7F4E484AB512E04F913903FE07F0060F923907F000F84E484A48137C4F
4A487F063F4B487F4E48027F8096C848C7EA07804E4A16C04D484B14034E0203ED01E005
035E4D480207ED00F060050F4B5A4D4819784E141F173F4D48193C95C8485A5F4C5A5F04
031B1E4C48157F5F160F4C5A5F163F5F167F4CC9FC5E15014B5A5E0307173F4B481B3C5E
151F4B5A4C707E037F1C784BCAFC4B170F02011DF04A48717E5D02070603ED01E04A4884
4B0501ED03C0021F7314074A487116804B726CEB0F00027F073F5C4ACC6C6C133E4A736C
5B0101746C5B4948963903FE07F04A73B55A766C13806D48081F90C7FC6D48F203F87786
77FC8A>37 D<EA03F0EA0FFC487E487E481380A2B512C0A214E0A46C13F0A27EEA1FFEEA
0FFCEA03F0C7FCA6EB01E0A4130314C0A3EB0780A2EB0F00A2131EA25BA25B5B12015B48
5A485A48C7FC121E121C1208143272F22E>39 D<160C161E167C16F8ED01F0ED03E0ED07
C0ED0F80ED1F005D157E5D4A5AA24A5A4A5A140F5D4A5A143F4AC7FCA214FE13015C1303
5C13075C130F5C131FA2495AA2495AA213FF91C8FCA25A5BA21203A25B1207A3485AA412
1F5BA4123FA25BA3127FA75BA212FFB3A5127FA27FA7123FA37FA2121FA47F120FA46C7E
A312037FA21201A27F7EA280137FA26D7EA26D7EA2130F80130780130380130180130014
7FA26E7E141F6E7E8114076E7E6E7EA26E7E157E8181ED0F80ED07C0ED03E0ED01F0ED00
F8167C161E160C27A770FC41>I<126012F0127C7E7E6C7E6C7E6C7E6C7E7F6C7E137E7F
A26D7E6D7E8013076D7E806D7EA26D7E808081143F81141F81140F81A26E7EA26E7EA281
1401A28180A21680A2157F16C0A3ED3FE0A416F0151FA416F8A2150FA316FCA71507A216
FEB3A516FCA2150FA716F8A3151FA216F0A4153F16E0A4ED7FC0A3168015FFA21600A25C
5DA214035DA24A5AA24A5AA25D141F5D143F5D147F92C7FC5C5C495AA2495A5C495A130F
5C495A49C8FCA2137E5B485A5B485A485A485A48C9FC123E5A12F0126027A777FC41>I<
F003804E7E4E7EB3B3AE003FBF12F0481EF8C012FCA36C1EF86C1EF0CBD80FE0CBFCB3B3
AE725A725A6E6F77E081>43 D<EA03F0EA0FFC487E487E481380A2B512C0A214E0A46C13
F0A27EEA1FFEEA0FFCEA03F0C7FCA6EB01E0A4130314C0A3EB0780A2EB0F00A2131EA25B
A25B5B12015B485A485A48C7FC121E121C1208143272912E>I<B812E0AA2B0A7EA837>I<
EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C13006C5A6C5AEA03F012127291
2E>I<191C193E197FA219FF19FEA2180119FCA2180319F8A2180719F0A2180F19E0181F
19C0A2183F1980A2187F1900A26060A2170160170360A2170760A2170F60A2171F60A217
3F60A2177F95C7FC5F5FA216015FA216035FA216075FA2160F5F161F5FA2163F5FA2167F
94C8FCA25E5EA215015E15035EA215075EA2150F5EA2151F5EA2153F5E157F93C9FCA25D
5DA214015DA214035DA214075D140F5DA2141F5DA2143F5DA2147F92CAFCA25C5C13015C
A213035CA213075CA2130F5CA2131F5CA2133F5C137F91CBFCA25B5BA212015BA212035B
A212075B120F5BA2121F5BA2123F5BA2127F90CCFCA25A5AA2127C123840A777FC53>I<
923807FF80037F13F84AB512FE02076E7E91261FFE0113E0913A7FF0003FF8DAFFC0EB0F
FC49496D7E4948C7EA01FF49486E7F49486F7E49486F7E013F834A151F017F8349486F7E
A248496F7EA2488491C97E481980A348487013C0A3001F19E0A4003F19F0A24982A2007F
19F8A900FF19FCB3AA007F19F8A76D5E003F19F0A5001F19E0A46C6C4C13C0A36C1980A2
6C6D4B1300A26C606E150F6C60A26D6C4B5AA26D6C4B5A6D6C4B5A6D6C4B5A6D6C4A5B6D
6C4A90C7FC6D6D495A6D6D495ADA7FF0EB3FF8913A1FFE01FFE00207B6128002014AC8FC
6E6C13F80307138046737AEE53>I<ED0380ED0FC0151F153F157FEC01FF1407141F91B5
FC130F0007B6FCB7FC14E7140713F0EAF800C7FCB3B3B3B3AE4A7FA24A7F49B6FCB912FE
A5376F71EE53>I<ED7FF80207B512C0021F14F8027F14FE49B77E49D9003F13E0D90FF0
01077FD91FC0010113FC49C86C7E017E6F7E496F7FD801F06F7F48486F7F834848834848
6F7F8548CAFC85003E177F855AD87FF8826D18807FB5FC801AC06E81A66C5B6C90C9FC6C
5A6C485E6C481880EA01E0CBFCA21A0060A26118FF615F61615F614D5BA24D5B4D90C7FC
604D5A4D5A604D5A4C5B604C90C8FC4C5A4C5A4C5A5F4C5A4C5A4CC9FC4B5A4B5A4B5A4B
5A5E4B5A4B5A4BCAFC15FE4A5ADA03F0ED03C04A5A4A5A4BED07804AC9FC143E5C5C4948
160F49481700495A495A91CA5A131E49173E4917FE90B9FC5A5A5A4860A25A5A5ABAFC61
A3426F78EE53>I<ED1FFF4AB512F0020F14FE023F6E7E9126FFE00713E04948C713F8D9
07F0EC3FFCD90FC06EB4FC49C800077F013E83496F7F4983484881498348486F7F13FF48
01C082808048717E80A3805CA26C94B5FC5C6C606C5B6C5B6DC95B90CAFC5F61A24D5BA2
614D5B614D90C7FCA24D5AEF3FF84D5A4D5A4C5B040790C8FCEE1FFE92380FFFF80207B5
12E04A91C9FC17F06E14FE91C73807FF80040013E0EF3FF8717E71B4FC717F717F85717F
717F85187F8585841A80A21AC0A27213E0A41AF0EA03F8EA0FFE487E487F487FA2B57EA3
1AE0A34A5D1AC06C5B91C914805B6C484C130013F06CCA5B18FF6C6C5F6D4B5B6C6C5F6C
6C4B5BD801FC4B5B6C6C4B5BD97F804A90C7FCD93FE04A5AD90FFCECFFFC902707FFE007
13F0010190B612C06D6C5D021F02FCC8FC020314E09126001FFEC9FC447379EE53>I<18
1E183FA26060A25F5FA25FA25F5FA25F5FA294B5FC5EA2EE03EFEE07CFA2EE0F8F170F16
1F163E163C167C16F816F01501ED03E0A2ED07C01680150FED1F00151E153E5D157815F8
4A5A5D14034A5AA24A5A92C7FC5C143E143C147C5C5C1301495AA2495A495AA249C8FC13
1E133E5B137813F8485A5B1203485AA2485A90C9FC5A123E123C127C5ABCFCA5CA001F90
C7FCB3A24D7F4D7F0403B512F8031FB8FCA548717BF053>I<012017C0017CEE03E0D97F
80151F02F84AB45ADAFFC0017F5B92B7C7FC60606060606095C8FC5F17F817E094C9FCD9
7C7F13F8020190CAFC91CCFCB3A4ED07FF037F13E04AB512FC020714FF91261FF8037F91
3A3F80007FE002FEC76C7ED97DF8EC0FF8D97FE06E7E4A814A6E7E91C86C7F017E83017C
6F7FA20178707E01308390CAFC727EA285A38584A21A80A41AC0A4EA03E0EA0FF8487E48
7E487EA2B57EA31A80A291C9FCA2494C13006C5A5BD87BE05F0078CAFC6C4D5AA2003E60
001E17FF001F607E6D4B5B6C6C5F00034C5B6D4B90C7FC6C6C5ED800FC4B5A017E4B5A6D
6CEC7FF06D6C49485AD90FF801075B902707FF803F90C8FC010190B55A6D15F8023F14E0
020791C9FC9138007FF0427378EE53>I<EE03FF043F13F04BB512FC030714FF92261FFE
007FDB7FE0EB0FC0DBFF80EB03E0DA03FEC76C7E4A48EC0078DA0FF0157C4A48153C4A48
EC07FE4A48140F02FF151F4990C8487E49485D010793B5FC495A5C131F495AA2017F705A
49486F5A725A48496F5A725A4894C8FCA2485BA35A91CCFCA25AA35A1610923807FFF049
011F13FC007F027F13FF92B612C0913A01F8007FF0DA03E0EB1FF8DA0780EB07FC4AC76C
7E00FF011E6E7E4A6E7F4A82727E4A6F7E856D48151F854A82180F855C1A80A291C914C0
84A21AE0A45B007F19F0A8123FA37FA27E1AE0A37EA21AC07E6E5D1A807E1A007E6E4B5A
7E616D6C4B5A013F5F6E157F6D6C5E010F4C5A6D6C4A5B6D6C4A90C7FC6D6C4A5A6D01C0
495A6E6CEB3FF8913A3FFC01FFE0020FB65A6E92C8FC02015C6E6C13F0030790C9FC4473
79EE53>I<EA03C0A2487E13F8EBFFE091B912FEA35A1AFC1AF8A21AF01AE05A1AC01A80
1A0001C0CA123F90CB123E003E6019FC61003C4D5A1803007C4D5A0078604E5A181F96C7
FC183E48177E6060CA485A1703604D5A170F604DC8FC5F177E177C17FC4C5A5F16035F16
074C5AA2161F5F163F94C9FC5E5EA24B5AA215035EA21507A2150F5E151FA3153FA24B5A
A315FFA35CA45C5EA25CA55CA75CAD6E5BA26E5BDA01FECAFC6E5A477477EF53>I<ED07
FF037F13E00203B512FC020F80913A3FFC01FF80913A7FE0007FC0DAFF80EB1FF0D903FE
C76C7E49486E7E49486E7E011F6F7E49486E7F495A727E49488248173F484982A248717E
4890C9FC855A8548170F4983A2127F1A80A400FF19C084A41AE0A81AF0127F60A4123FA2
7F6C5FA27E607E806C5F7E6C6D15F7A26D6CEC01E76D7E011FED03C76D6CDA078713E06D
6CEC0F076D6C141E6D6C6C137C6D9038E001F8023FB512F0020F14E00203028014C09139
007FFE00DB00805B93C7FC1A80A41A0060A261A261183F017E5F13FF486D4B5A487F486D
5E486D15FF615F614D90C7FC604A14076C494A5A4A5D91C8485A6C484B5A01E04B5A0001
4C5A01F8020390C8FCD800FE4A5AD97F80EB1FF8D93FF8EBFFF06DB65A0107158001014A
C9FC6D6C13F0020790CAFC447379EE53>57 D<EA03F0EA0FFC487E487E481380A2B512C0
A66C1380A26C13006C5A6C5AEA03F0C8FCB3B1EA03F0EA0FFC487E487E481380A2B512C0
A66C1380A26C13006C5A6C5AEA03F0124772C62E>I<EA03F0EA0FFC487E487E481380A2
B512C0A66C1380A26C13006C5A6C5AEA03F0C8FCB3B1EA03E0EA0FF8487E487E487EA2B5
1280A414C0A27EA27E7E7EEA03F3EA0003A6EB0780A5EB0F00A35B131EA25BA2137C1378
13F85B485AA2485A485AA248C7FC121E121C1208126772C62E>I<003FBF12F0481EF8C0
12FCA36C1EF86C1EF0D3FCB3A9003FBF12F0481EF8C012FCA36C1EF86C1EF06E2977BD81
>61 D<F0FFFC051FEBFFE094B612FC0407EDFF80043FD9000313F0DCFFE09038001FFC03
0390C8EA03FFDB07F89238007F80DB1FE0EE1FE0DB3F80EE07F003FECAEA01FCDA01F8EF
007EDA03E0181F4A48727E4A48727E021ECCEA01E04A737E4A1A784A8649488649488649
48747E010F8891C9D83FF01503011E922603FFFE6F7E49031F6D6C6E7E017C037F02E081
01789227FFE01FF0157849020390260001FC814C48EB007E4848DA0FF8021F81DC3FF06E
7E48484A486E6C804C48EC01E0484849496FEC0780747E48C74890C90078EC03C04B48EE
3FFE030F84001E4B70EC01E0151F4B488248F500F0157F5EA24802FF1B785EA25CA3484B
1A3C5CAD80007881A380A2826C027F1B38A2701A78153F7E6F6C5E150F6C6F4C15700307
1BF06F6C5E6C6C6D6D92B5FC50ED01E06C6C6D6D15EF706CDA07C715C06C6C6E6CDA0F87
EB8003DC0FF8DA1F0315806C6CDA07FEDA7E011407706C49486C9038C01F000178020090
26E01FF090387FE07E017C6FB5486DB45A013C031F02806D5B6D030349C7000713E06D92
26003FF09138007F806E92CDFC13076D7E6D7E6D7E147880806E6CF20FF86E6CF23FFC6E
6CF2FFF8DA01F8070313E0DA00FE071F1380DB3F809538FFFE00DB1FE0050713F0DB07F8
053F13C06FB4932603FFFEC7FC030001E0037F13F0DC3FFF027FB5C8FC040790B712F004
0094C9FC051F15C0050002C0CAFC6E7777F481>64 D<F001E04E7E4E7EA34E7EA34E7EA3
4E7EA34E7FA395B57EA34D80A34D8018E7A2DD07C77F18C3A2DD0F837F1881051F801801
844D80053E7FA2057E81057C7FA205FC814D7FA20401824D7FA20403824D7FA20407824D
7FA2040F824D7FA24CC78085A2043E8286047E83167C8604FC834C81A20301844C81A203
03844C81A20307844C81A2030F8493B9FCA24B84A34BCA7F033E83A24B858703FC855D87
0201864B83A20203864B83A20207864B83A2020F864B83A2021F8692CCFCA24A86885C8A
4A85497F496D4E7F010F6D86013F01F84DB57E0003B6050F14FEB700F0030FB812C0A572
777BF67D>I<BB12F01AFF1BF01BFC1BFFD8000F02C0C86C13C0010191C9000F13F06D49
04037F027F7113FE746C7E757F757F757F8987757F898789A2757FA3761380AA99B51200
A3515BA2515BA2515B65515B515B635190C7FC515A505B080713F0505B087F1380962603
FFFEC8FC92B912F01B801BF01BFE4BC9383FFFC0080313F0080013FCF33FFF757F7513E0
757F757F757F757F767E1E80881EC07613E0A27613F0A21EF888A31EFCAA1EF8A2641EF0
A2641EE0645213C01E8099B5FC511400515B515B515B515B097F5B02FF4DB51280496D04
0791C7FC010F02C0033F13FCBD5A1CC099C8FC1BF898C9FC66717AF076>I<DE1FFF1630
0507B500F01578053F14FE4CB700C014F8040F701301043F9039F8007FF893B50080D907
FE1303030301FCC86C13074B01E0ED3F80031F018092380FE00F4B48C93803F01FDBFFFC
EE01F84A01F0933800FC3F4A49EF7E7F4A49171F4A90CB13FF4A48844A48844A488402FF
85495B494984495B491B7F4B193F5B4990CD121F5C017F1B0F13FF5C481C075C5A1D0348
5BA25A4A1A01A25AA348491A00A4481D701E00A25CA3B5FCAF7EA380A37E1E301E78A26C
7FA37EA26E1BF07EA26C7FA26CF401E0807E6EF203C0137F6D7EF507806D7F6DF30F0081
6D1B1E6D6D193E6D6D193C6D6D61027F1AF86E6C4E5A6E6C616E6C4E5A6E01C04D5A6E6D
051FC7FC6E6D173E6E01FC5FDB3FFE4C5A6F6C6C4B5A030701E0ED0FE06F01FCED7F8003
00D9FF80D903FFC8FC043F01FCEB3FFC040F90B65A040116C0DC003F92C9FC050714F8DD
001F90CAFC657977F478>I<BB12F0F2FF801BF01BFE757ED8000F02E0C7000114E00101
0280DA001F13F86D91C900037F6E9438007FFF091F7F757F090313F0757F757FF43FFE76
7E767F767F8A88767F767F8A1D7F8A1D3F8A771380A27713C0A21FE089A21FF0A27713F8
A41FFC89A31FFEA51FFFB01FFEA61FFCA265A21FF8A35313F0A21FE0A2651FC0A2531380
A2531300661D7F66535A6466525B525B525B5290C7FC525A525A525A09035B515B091F5B
097F90C8FC91B54C485A496E030F13F8010F02E04AB512E0BD128051C9FC1BF01B8008F0
CAFC70717BF07F>I<BE12F8A489D8000F02E0C8120301010280ED000F6D91CA12016EF0
007F1C1F1C0F767E1C031C011C00A21D7EA21D3E1D3F89A389A31E801D07A60878EC03C0
A49AC7FCA51AF8A31901A219031907190F193FF003FF93B7FCA593C71203F0003F190F19
0719031901A21900A31A78A31E3CA31E78A397C9FCA31EF0A41D01A21EE0A21D03A31D07
1EC0A21D0FA21D1FA21D3FF57F801DFF6464641C1F52130091B54DB5FC496E160F010F02
E00303B6FCBFFCA265A366717BF071>I<BE12C0A41DE0D8000F02E0C8120F01010280ED
007F6D91CA120F6E18031B001C7FF43FF01C1F1C0F1C07A21C03A21C011DF81C00A31D78
A31D7C1D3CA61D1EA2F101E0A21D00A71903A31907A2190F191F193F19FF180793B7FCA5
93C712071800193F191F190F1907A21903A31901A996CAFCB3A88291B5FC4980010F14FC
B912F8A55F717BF06C>I<DE1FFF16300507B500F01578053F14FE4CB700C014F8040F70
1301043F9039F8007FF893B50080D907FE1303030301FCC86C13074B01E0ED3F80031F01
8092380FE00F4B48C93803F01FDBFFFCEE01F84A01F0933800FC3F4A49EF7E7F4A49171F
4A90CB13FF4A48844A48844A488402FF85495B494984495B491B7F4B193F5B4990CD121F
5C017F1B0F13FF5C481C075C5A1D03485BA25A4A1A01A25AA348491A00A4481D709BC7FC
A25CA3B5FCAF7EA36E057FB8FCA37EA297C715000A0F13FC6C6D8566887EA2807EA26C7F
A27E807E80137F6D7EA26D7F7F816D7F7F6D7F6D6D606E7E6E7E6E6C606E7F6E6DEF1F7F
6E6DEF3F3F6E01F8EF3E1F6E6D177CDB3FFF933801F80F6F01C0923803F007030701F092
380FE0036F01FC92383FC0010300D9FF80903901FF8000043F01FCD91FFEC71238040F90
B600F81410040104E091C7FCDC003F1580050702FCCAFCDD001F1380707977F482>I<B9
6C017FB812C0A5D8000F02F8C9000702FCC7FC010102C0040014E06D4A715B6E90CB6C5B
B3B3A893BBFCA593CB123FB3B3AC91B56C4D7F496E94B57E010F02F8040714FCB96C017F
B812C0A572717BF07D>I<B912E0A5D8000702FCC7FC010014E06E5BA26E5BB3B3B3B3B3
A54A7FA291B57E010714FCB912E0A533717CF03C>I<0207B812FEA591C7000FECFC0004
0014E0173F6183B3B3B3B3A4EA03F8EA0FFE487E487F487FA2B57EA3615FA24A93C7FC7E
5C91C8485A6C5A494B5A01E05E6CC85A6C6C5E6D4A5B6C6C4A5B6C6C4A5B6C6C4A90C8FC
D800FEEC3FFCD93FC0495A903A1FF803FFE00107B6128001014AC9FC6D6C13F0020790CA
FC47757AF055>I<B96C92B712C0A5D8000F02F8CA001FECF800010102C0050714806D4A
7101FCC7FC6E90CB6C13F01EC06653C8FC6565F403E0525A525A52C9FC1C3E6464515A51
5A515A515A51CAFC1B3E1BFC505AF203E0505A505A50CBFC1A3E62624F5A4F5A4F5A4F5A
4FCCFC193E61611801F007FC4E7E181F4E7E4E7F95B5FC4D804D80EF07DFDD0F8F7FDD1F
077F173E4D6C7F4D6C7FEE01F04C486C7F4C486D7F4C5A043FC76C7F047E6E7F16F84C6E
7F4C6E7F5E4C6E7F93C86C7F8587747F8688747F747FA2747F747FA2747F747FA2757F75
7FA2757F757FA2757F757FA2757F757FA2767F767FA2767F8A8A8A8A91B56C85496E057F
14C0010F02F84CB612F8B96C027FEDFFF0A574717BF081>I<B912F8A5D8000F02FCCCFC
010114C06D5C8093CDFCB3B3B3A7F401E0A41C031DC0A61C07A21D80A31C0FA31C1FA3F4
3F00A26464A2636363515A1B1F1B3F1BFF1A0391B5160F496E157F010F02E00207B5FCBD
FC64A45B717BF068>I<B7093FB612E07062A37097B7FCD8000F55C7FCD901FB6DDF01EF
13F0010067027B6602796DF103CFA302786DF1078FA26F6CF10F0FA36F6C191EA26F6C19
3CA36F6D1878A36F6D18F0A26F6DEF01E0A36F6DEF03C0A26F6DEF0780A3706CEF0F00A3
706C171EA2706C5FA3706D5EA2706D5EA3706D4B5AA3706D4B5AA2706D4B5AA3716C4BC7
FCA2716C151EA3716C5DA3716D5CA2716D5CA3716D495AA2716D495AA3716D495AA3726C
49C8FCA2726C131EA3726C5BA2726D5AA3726D5AA372EBE1E0A272EBF3C0A372EBFF80A2
7390C9FCA302FC705AA3496C705A497E010F01C06F484C7F013F01F0517F48B500FE50B5
12FEB700FC6E48021FB812E0A2735AA2735A8B717AF098>I<B600FE050FB712C06F7EA2
8282D80003DF001FECE000D9007F6D050391C7FC70050013FCF53FF0027B6D725A02797F
70725A14786F6D715A6F7FA26F7F6F7FA26F7F6F7F83816F7F8482707F707FA2707F707F
A2707F707F8482717F717FA2717F717FA2717F717F8583717F727FA2727F727FA2727F72
7F8684727F8684737F737FA2737F737FA2737F737F8785737F741380A27413C07413E0A2
7413F07413F81CFC867413FE7413FFA27513877513C7A27513E77513F71DFF878787A287
88A28888A2888814FC88496C8588497E010F01C0197F013F01F0193F48B512FEB700FC18
1F1D0FA21D0777C8FC72717BF07D>I<F0FFFC051FEBFFE04CB612FE04076F7E043FD9C0
0F13F0DCFFFCC713FC030301E0EC1FFF4B018002077FDB1FFEC8000113E0DB3FF86F6C7E
DBFFF0EE3FFC4A49707E4A49707E020F90CA000313C04A48717F023F864A48717F4A4872
7E4B183F4949727E49874949727F4949727FA24990CC6C7F49884A85017F884948737FA2
4849747EA248894A86481E80A348497413C0A2481EE0A24A86A2481EF0A4481EF84A86A5
B51DFCB06C6D5013F8A66C1EF0A26E62A26C1EE0A36C6D5013C0A36C6D501380A26C1E00
6E97B5FC6C65A26C6D4F5BA26D6C4F5BA26D6D4E5B6D646F606D6D4E5B6D646D6D4E90C7
FC6F606D636D6D4E5A6E6C4D5B6E6C4D5B6E6D4C5B6E6D4C5B6E6D4C5B02016D4C48C8FC
6E01FCEEFFFC6F6C4B5B92261FFF80020713E06F01E0021F5B030301FC91B5C9FC030090
26FFC00F13FC043F90B612F00407168004014BCAFCDC001F14E0050001FCCBFC6E7977F4
81>I<BB12C01AFEF2FFE01BF81BFED8000F02E0C700036D7E01010280DA003F13E06D91
C9000713F86E05017F746C7E757E757F757F757F757F89757FA2757FA289A21E8088A31E
C0A91E80A399B5FC1E00A265A2515B656365515B515B515B5190C7FCF3FFFE5013F80807
5B083F13C00707B55A93B800FCC8FC1BF01B8008F8C9FC93CEFCB3B3A991B57E4980010F
14F8B97EA562717BF071>I<F0FFFC051FEBFFE04CB612FE04076F7E043FD9C00F13F0DC
FFFCC713FC030301E0EC1FFF4B018002077FDB1FFEC8000113E04B486F7FDBFFF0EE3FFC
4A49707E4A49707E020F497013C04A90CA6C7F4A48717F4A48717F4A48727EA24949727E
4949727E4949727F49884B8449884990CC6C7FA24948737F01FF884A854889A24849747E
A2481E804A86A2481EC04A86481EE0A448497413F0A4481EF8A34A86A3B51DFCB06C1EF8
A36E62A36C1EF0A46C6D5013E0A36C1EC06E62A26C1E80A26C6D501300A26C656E1AFF6C
656EDB0FE05C017FDC3FFC5EF0FFFE6D6C4A6D6C495B6D6D902703F01FC0495B943907C0
03E06D6D49486C6C495B6D93C76C5D6D6D011E02784990C7FC6F705B6D636D6D496E495A
6E6C041F495A6E6C70485B6E6C4D5B6E018004875B6E01C0DB078F5B020101E0DCDFFEC8
FC6E6D6CEDFFFCDB7FFC5FDB1FFE6F13E092260FFF8F4A5B0303D9EF80011F90C9FC0300
D9FFC0D9FFFC150C043FD9F00F49151E040790B6FC1601DC001FECE1FC0500EBFC0195C7
6D153EA28774167E76147C7614FC1E01761303756C13070AFCEB1FF80AFF13FF9AB5FC87
1FF0A27515E0A27515C0A2751580A2751500755C755C765B7613E00A0F1380E201FEC7FC
6F9577F481>I<BA12F0F1FFC01AF81AFF1BE0D8000F02E0C76C13F801010280020313FE
6D91C96C6C7E6E051F7F080713F0747F08007F757E757E89757F757FA2898789A28987A2
89A965A26365A265636565515B639AC9FCF37FFC515A08035B505B081F1380E07FFECAFC
963803FFF8077F13E093B8128008FCCBFC1AE01AFC93C86CB4FC070F13C007037F070013
F8747E747E747E747F747F888688747FA3747FA288A788A789A77714F0A287A38777EB01
E087A291B56C82496E72EB03C0010F02F882B96C6E6DEB078075150F756DEB1F00E23FFE
133E99391FFF80FCCF0007EBFFF80A015CE2003F13C00B0390C7FC74757BF07A>I<DB3F
FC15604AB500E014F0020F14F8023F02FF130191B7128049D9E003EBE003010790C7381F
F007D90FFCEC07F8D91FF0913801FC0F49489138007E1FD97F80151F49C9EA0FBF48EF07
FF48488249820007834848177FA24848173FA2003F181FA249170F127F1907A300FF1803
A319017FA46D1700A27F127F7F6D186097C7FC6C7F14E0806C13FC14FF6C14E06C14FEED
FFE06C15FE6CEDFFE017FE6CEEFFE06D16F86D16FE6D707E6D830103836D17F86D6C8202
1F82020782020083150F030082040F81040081170F050080183F060F7F8406017F84A273
7E85A28500601A8000F084A285A4857EA41B007EA37E626C1807A26D60190F6D607F4F5A
6D606D173F6D4D5A01FF60D9DF804CC7FCD98FE04B5AD987F04B5AD903FEED0FF8486C6C
6C4A5A9026007FF0EC7FE048903B3FFFC007FFC048010F90B6C8FC02035D48D9007F14F8
030F14C000609126003FFCC9FC497977F45C>I<001FBFFCA502FCC7001F91C712074801
C0020701FCDA007F138049C86C49150F01F81B0349874987491C7F491C3FA290C9191FA2
003E1D0FA348F507C0A500781D03A748F501E0A6CA96C7FCB3B3B3AC4D7FA2051F13FF4C
B612F00203BA12F8A56B707AEF78>I<B96C021FB712C0A5D8000F02F8CA003FECE00001
0102C0050791C7FC6D4A050113FC6E90CCEA7FF0775AA2775AA2775AB3B3B3AF6E50C8FC
A282A2801D3EA280706080A27060806E4F5A7017036E62704D5A037F180F6F6C606F6C4D
C9FC030F6070177E6F6D5E03016D4B5A6F6DED07F0DC7FF84B5A706CED3FC0DC0FFF03FF
CAFC7001E0EB07FE040101FCEB7FFC706CB612F0051F15C0050792CBFC050014F8060713
8072757BF07D>I<B800F8041FB612FCA5D8003F02F8CA00011500010702C0DD003F13F8
6D4A060F13E06D91CC6C13806D7590C7FC66775A6E63826E63821D036E63821D076E6370
180F6E63821D1F6E98C8FC826E1A3EA270187E6E1A7C821DFC6F61836F4E5AA27116036F
61831C076F6171160F6F61A271161F6F96C9FC83646F183E71167E6F187CA27116FC705F
841B01705F721403705F841B07705F841B0F705F72141F7094CAFC846370163E84705EA2
7214FC715D851A01715DF1C003715DA2F1E007715D19F01A0F715DF1F81F7192CBFCA273
5A71143E19FE1A7E71147CF1FFFC725BA3725BA3725BA2725BA3725BA37290CCFCA2725A
A3725A197876757DF07D>I<B800F00107B86C027FB612F0A5C66C02F0C800010380C800
03ECFE00010F02806F6C01FCCA003F13F06D49CA6C01F0050F13C06D49717390C7FC7549
715A6D7B5A896F71735A6D6A896F836E565A8970826E565AA270707F6E565AA2517F6E6D
54C8FCA251806E6D1E1EA2518070059F183E6E203C090F8070050F187C6E2078091F8070
DC1E0718F86E68093E8070DC3C0317016F67097C8071DB780117036F6709F880714B6C17
076F67080181714B6D160F6F9CC9FC8B714A486D5E6F1E1E8B714A487F6F668B714AC77E
6F66A271021E6E7F6F66A2083E82706C023C6E4B5AA2087C827201786E1503706508F882
72496E1507706507018306E0496F140F709ACAFC0703188006F0496F5C701C1E070718C0
06F8496F143E701C3C070F18E006FC90C96C147C701C784F18F0DEFE1E7014F8706420F8
72487013F9716320FD07F88271F2FFC0A24F827163A24F837198CBFCA24F837162A37149
715AA396CB120F7162A24E1807050062A24E1803067C610638725AA4757DF0AB>I<B800
FC0407B7FCA5D8001F4ACB6C14C0010302F0060FEBFC006D4A7213F06D7513C06E49626E
6D7248C7FC666E6D616E6D1803666E6D4E5AA26E6D4E5A6E6D611D1F6E6E4DC8FC6F7F1D
7E6F6D177C1DFC6F6D4C5A6F7F525A6F6D5F1C076F6D4C5A6F7F525A6F6E93C9FC706D5D
1C7E707F64706D4A5A707F515A707F515A706D4A5A707F515A706E91CAFC716D5B1B7E71
7F63716D5B71EBF801505A7113FC73485A715D71EBFF0F505A71149F7201FFCBFC628462
84725B6284B3B3A24E7F4E7F95B67E040FB812F8A578717EF07D>89
D<B6FCA748C7FCB3B3B3B3B3B3B3B3A9B6FCA718A76EFC2E>91 D<495D496CEC03800107
150749C8EA0F00011E151E495D495D01F815F8495D48484A5A48484A5AA248484A5AA248
C848C7FCA2001E151EA2485DA3007C157C00781578A4485DA601FC15FCD8F3FFECF3FF00
F76D01F71380B56C90B512C06E15E0A26C6D6D13F0A46C81A26C496D13E0A26C496D13C0
6C496D13806C90C76C1300D800FCEC00FC343267F253>I<B6FCA7C7127FB3B3B3B3B3B3
B3B3A9B6FCA718A77DFC2E>I<913803FFE0023F13FE49B612C0010715F0903A1FFC007F
FCD93FC0EB0FFE017EC73803FF8001F86E7FD801FE6E6C7E486C82486D6E7E6E6E7E487F
6E6E7E848385A36C496E7F6C5B6C5B6C90C8FC133C90C9FCA65F047FB5FC030FB6FC92B7
FC1407023FEBF80391B512800103EBF8004913E0011F13804948C7FCEB7FF8495A485B48
5B485B4890C8FC5A5B123F49F003C0127FA3485AA35FA35FA26C6C5DA2003F043D9038E0
07806D157C6C6C15786C933AF07FF00F006C6DD903E06D5A6C01E0903A07C03FFFFE6C6D
90261F801F5B26007FFE9026FF000F5B6DB500FC6D5B010F02F06D13C0010102C0D9007F
C7FC9026000FFECBFC4A4C79C953>97 D<EC1F800003B5FCB6FCA5C6FC131F7FA27FB3AD
EF3FF80403B57E040F14E0043F14F89339FF803FFE923B81FC0003FF80DB87E001007FDB
8F806E7E039FC8EA1FF803BC6F7E03F86F7E4B6F7E874B814B6F7F874B707EA287747EA2
871A1FA287A3741380A41CC0AD1C80A3621C00A3631A3F63A2631A7F63505A814F5B6F5F
6F4B90C7FC02FE4C5A03784B5A4A6C4B5A4A6C4B5A6F6CECFFE04A6C6C4913809126E003
F0010F90C8FC6FB4EB7FFC4A6C6CB512F04A011F14C090C8000749C9FC040013E052757C
F25C>I<923803FFE0033F13FF92B612E0020715F84A9038001FFEDA3FF8EB00FFDA7FE0
EC1F80902601FF80EC07C04990C8EA1FE04948ED3FF04948ED7FF8494815FF49484A13FC
017F5D495A5A5C5A485B7113F84890C913F0F07FE048EF3FC0F00F004993C7FC123FA312
7F5BA312FFAD127FA27FA2123FA36C7E190C6C181E806C183CA26C7F19786C7F6C18F06D
7E6D6CED01E0011FEE03C06D7E6D6CED07806D6C6CEC1F006D6D143E6D01F014FCDA3FFC
EB03F8913A1FFF803FE0020790B55A020192C7FCDA003F13F8030313C03F4C7BC94A>I<
F101F8F03FFF050FB5FCA5EF000F180184A2197FB3AD923801FFC0031F13F892B6FC0203
1580020F9038803FE0913A3FFC0003F0DA7FE0EB00F8494848143C4990C8121E4948150F
4948ED07FF49488149488149488113FF4849167FA2485B5A91CAFC5AA25A5B123FA3127F
5BA312FFAD127FA46C7EA3121FA27F7EA26C7F7E19FF6C7F6C5F6D7E6E5D013F5E6D6C4B
6C7E6D6C151E6D6C033C7F902601FF8002F8EBFFC06D6DD903F0ECFFC0DA7FF0EB0FE0DA
1FFFEB7FC0020790B51200020114FCDA003F01F0EDF000030390C7007EC8FC52757BF25C
>I<ED07FE92387FFFE00203B512FC020F14FF91263FFC0313C0913A7FE0007FE0902601
FF80EB1FF04990C7EA0FFC49486E7E4948140349488149486E138049486E13C013FF4849
ED7FE0A2484916F0183F4890C913F85A181F19FC485AA2123FA219FE007F170F5BA4BAFC
A319FC01FCCBFCA8127FA47F123FA3121F6D170C6C181EA27E6E163C7E6C6D1678A26C6D
16F0017F16016D6C16E06D6CED03C06D6C15076D6CED0F806D6CED1F006D6D147E6D01E0
495ADA3FF8EB07F0DA0FFFEB7FE06E90B5128002004AC7FC033F13F8030313803F4C7BC9
4A>I<EE1FF0923801FFFE0307EBFF80031F14C092397FF00FE0DBFFC013F04A9038001F
F84A48EB3FFC4A48137F020F15FE4A4813FF4A5A147F5D14FFEF7FFC4949EB3FF8EF1FF0
49ED0FE0EF03804B90C7FC5BB3A7B812E0A5D800070180C8FCB3B3B3A4497F81017F13FC
B87EA537757BF433>I<F103F8F11FFEDB3FF091B5FC0203B501031480021F913AE007FC
0FC0027F9139F80FE01F913DFFE01FFC3F003FE0010390270003FF7E137F49486D13F8D9
0FF86D6C5A49486E48EB3FC0013F8249486E6CEB1F8001FF70EB06004A020F91C7FC4883
4883A248496E7FA44884A86C60A46C6D4A90C8FCA26C5F6C5F6E141F017F5E6D6C4A5A01
1F5E6D6C4A5AD91FFE49485A496C4990C9FC013C9038E01FFCD97C7FB55AD9781F14E0D9
F80391CAFC9039F0003FF0000191CCFCA41203A37FA26C7EA27F7F6C13E091B612FE6DED
FFF818FF6D17C06D17F06D17FC6D836D717E011F844984D9FFC0C712014890C9000F7FD8
03FC04017F4848EE007F4848EF1FFC001F180F4848717E5B007F1803865B00FF84A76C6C
4D5AA2003F616D17076C6C4D5A000F616C6C4D5AD803FEEF7FC06C6C4D5A6C01C0030390
C7FC6D6C4B5AD91FFCED3FF86DB46C49B45A010301F8011F13C0010090B7C8FC021F15F8
02011580DA000F01F0C9FC4B6E7BCA53>I<EC1F800003B5FCB6FCA5C6FC131F7FA27FB3
ADEF1FFC4CB512C0040714F0041F14FC93393FC03FFE9339FE0007FFDB81F86D7FDB83E0
6D7FDB87C06D7F038FC8FC039F82039E157F03BC8215F8A24B153F865DA35DA45DB3B3A5
496D4B7EA2017F01F80203B512C0B7D8FC07B712E0A553737BF25C>I<EB07E0497EEB3F
FC497E90B5FCA24880A66C91C7FCA26D5A6D5AEB0FF06D5A90C9FCB3A3EC1F8048B5FC12
7FA5C67E131F7FA27FB3B3B2497FA2017F13F0B712F0A524707BEF2F>I<ED01F84B7EED
0FFF4B13804B13C0A24B13E0A66F13C0A26F13806F1300ED03FC6F5A92C8FCB3A3EE07E0
92B5FC147FA5EC003F150781A281B3B3B3B3A2EA03C0EA0FF0486C15C0487E486C5B1780
B5FCA217005D5E6C48495AA26C48495A01F05C6C48495A000F4A5A2707FC01FFC7FC0001
B55A6C14F8011F13E0010390C8FC2B9288EF33>I<EC1F800003B5FCB6FCA5C6FC131F7F
A27FB3AF4DB612F8A5DD003F91C7FC7213F87213C097C8FC19FC6119E04E5A4EC9FC183E
18FC4D5AEF03E04D5A4D5A4DCAFC177E5FEE01F04C5A4C5A4C7EEE3FF0167F4C7E03817F
03837F158792389F9FFFDBBF0F7F15FC4B6C7F4B6C7F15E04B6C7F4B6C7F92C76C7EA271
7E717EA2717F717F717FA2717F717FA2727E727E727EA2727F727F86A2727F86496D4A7F
1AFF017F01F0021F14E0B700F890B71280A551737CF258>I<EC1F8048B5FCB6FCA5C6FC
131F7FA27FB3B3B3B3B3A6497FA2017F13F8B712FCA526737BF22F>I<023FDA1FFEEE7F
F80003B591B500C00203B5FCB6010702F8021F14E0041F6E027F8093273FC01FFF9139FF
007FFC93267E000790268001F8EB1FFE04F801019026C003E0EB07FFC6DA03E06D9026E0
0F806D7F011F49484CC7FC6D4A91267FF01E6E7F4BC86D48826D011E033F49804B5F4BDC
FDE082A24B6FB448157F8C4B5FA34B94C9FCA44B5EB3B3A5496D4B6C4C7EA2017F01F84A
B500E00207EBFF80B7D8FC03B7D8F00FB712C0A582497BC88B>I<023FEC1FFC0003B549
B512C0B6010714F0041F14FC93393FC03FFE9339FE0007FFDB01F86D7FC6DA03E06D7F01
1F49486D7F6D49C8FC4B826D011E157F4B825DA24B153F865DA35DA45DB3B3A5496D4B7E
A2017F01F80203B512C0B7D8FC07B712E0A553497BC85C>I<923803FFC0033F13FC4AB6
7E020715E0021F010013F8DA3FF0EB0FFCDAFFC0EB03FF49496D7F4948C86C7ED90FFCED
3FF049486F7E49486F7E4A1507017F8349486F7E4819804A814819C04890CA13E0A24819
F049177F001F19F8A3003F19FC49173FA2007F19FEA400FF19FFAD007F19FEA46D177F00
3F19FCA3001F19F8A26C6CEFFFF0A26C19E06E5D6C19C06C6D4B1380A26C6D4B13006D6C
4B5A013F5F6D6C4B5A6D6C4B5A6D6C4B5A6D6C6C49485A01006D4990C7FCDA7FF0EB0FFE
DA1FFFEBFFF8020790B512E002011580DA003F01FCC8FC030313C0484C7BC953>I<DA1F
80EB3FF80003B50103B57EB6010F14E0043F14F89339FF803FFE923B81FC0007FF80DB87
E001017FC66CD98F806D7F011F019FC8EA3FF86D01BC6F7E6D01F8824B6F7E737F4B814B
83737F4B838587747EA2871A3FA28786A21C80A3861CC0AD1C8062A31C00A26263A2505A
A2505AA24F5B636F5D636F4B5B6F4B90C7FC626F4B5A03BC4B5A039E4B5ADB8F8049485A
DB87C0491380DB83F0010F90C8FCDB81FFEBFFFCDB807FB512F0041F14C0040749C9FC04
0013E094CBFCB3A4497FA2017F13F8B712FCA552697CC85C>I<4BB46C1478031F01F014
F892B512FC020702FF13014A9038803F80913B3FFC0007E003DAFFF0EB01F04901C0EB00
F84949EC3C074990C8121E4948160F4948150F4948ED079F017F1603494816FF484981A2
4849815A5C48187FA24890CAFCA25A5BA2127FA35B12FFAD127F7FA3123FA27F7EA36C7F
A26C6D16FF7E6E5D7E6C6D5DA26D6C5D6D6CED0F7F011F161E6D6C153C6D6C15786D6DEB
01F0010001E0EB03E0DA7FF8EB0FC0DA1FFFEBFF806E9038FFFE00020114F86E6C13E003
0790C7FC92C9FCB3A44F7EA20607EBFF80050FB712C0A552697AC858>I<023FEB01FE00
03B590380FFF80B6013F13E04C13F09338FE0FF8923901F01FFC923903C03FFEC6EC0780
011F90390F007FFF6D131EA26D5B157C0378EB3FFEA24BEB1FFCEF0FF84BEB03E094C7FC
A35DA55DB3B3A3497F81017F13FCB87EA538497CC841>I<DA0FFFEB018049B538F003C0
0107ECFC07011FECFF0F90267FF000139F49C7EA0FFFD801FC1403D803F0804848EC007F
4848153F485A003F161F170F48C9FCA217075AA217037FA37F7F6DED0180D87FFC92C7FC
13FF6C13E014FF6C14F8EDFFC06C15F86C15FF6C826C16E06C82013F15FC6D8101078101
011680EB001F020115C0DA000F14E0DB007F13F0160F040313F80060150000F0163F171F
18FC6C160F1707A36C1603A37E18F87EA26D16F017077F6DED0FE018C06D151F6DED3F80
01BEED7F00011FEC01FE26FE0FC0EB07FC26FC07FCEB7FF0486CB65A48C61580023F01FC
C7FC0060010313C0364C7BC941>I<EC03C0A71407A5140FA3141FA3143FA2147FA214FF
5BA25B5B5B5B137F48B5FC000F91B61280B9FCA4D8000301C0C8FCB3B218F0AF7FEF01E0
81A27FEF03C06E7EEF07806E7E021FEC0F006E6C130E6EB4133E6EEBC0FC6EEBFFF86E6C
5B031F13C0030190C7FC34687DE541>I<DA1F8016FC0003B5ED1FFFB60207B5FCA5C6EE
0007011F16006D177FA26D173FB3B3A5197FA419FFA36D5EA2606D7FF007BF6D93380F3F
FEA26E6C021E7F023F033C14E06E6C02F8ECFFE0DA0FFCEB03F0913A07FFC01FE06E90B5
128002001500031F01FCEDF800030101E091C8FC534B7BC85C>I<B700E00103B61280A5
C602F8C86CEBF000013F01E0031F13C0010F49030790C7FC4B5E6DEF03F8816D6062816D
60816D4D5AA26F150F027F94C8FC81023F161EA26F153E021F163C6F157C6E1678A27014
F86E5E7013016E5EA27013036E5E7013076E5EA270130F037F92C9FC705B033F141EA270
133E031F143C70137C6F1478178018F86F5C17C16F5C17E117E36F5C17F76F5C17FFA270
90CAFCA2705AA2705AA3705AA2705AA3705A705A51497DC658>I<B700C0B7D88003B612
80A5000102F0C702E0C76CEBF800D8003F01C0023F0180020F13C06D496E48C86C5B92C8
7148C7FC6D040F1601666F02075F6D715EA26F806D725DA26F7014036D64606D6D704A5A
A26FDA0F7F150F027F7192C8FCA26FDA1E3F5D023F71141E183E6FDA3C1F153E021F7114
3C187C6F9126780FFE147C6E1A7818F86E6D496C6C5CA2DCC00116016E4B6C01805BA270
48486C14036E06C05B170704F0496C14076E06E05B170F04F890C7007F130F037F05F090
C9FC5F92263FFC1E91383FF81EA2EEFE3E031F013C6E6C5AA27048020F137C6FEFFE7817
F84D020713F86F715AA24D806F60A26F496E5BA36F496E5BA294C9127F7094CAFCA2047E
82043E163E041C161C71497DC678>I<007FB600E0011FB6FCA5C66C91C7000714E0010F
01FC6E49C7FC01037013F06D495E6D701380027F94C8FC6F15FC6E6C4A5A6E6C5D6E4B5A
826E6D495A6E6D495A6E4BC9FC70133E6E7F6F6C5B033F5C70485A6F6C485A6F13836FEB
87C0EFCF806F01FFCAFC6F5B81705AA2707E707E8284844C7F5E84047C7F4C6C7E923801
F03FDB03E07F717E4B486C7F4B487EDB1F0080033E6D7F717F4B6D7F4B147F4A48814A48
6E7E727E4A48804A4882021F6F7F023F6F7F027F81D901FF834984010F4C7F017F6D4A7F
0003B56C4AEBFFC0B600FC027FECFFE0A553477EC658>I<B700E00103B61280A5C602F8
C86CEBF000011F01E0031F13C06D496F90C7FCF107FC6D715A627F6F5E6D60A26F15076D
6081027F4CC8FCA26F5D023F161E6F153E021F163C81197C6E16787014F86E5E826E4B5A
A27013036E5E7013076E5E82180F037F92C9FC705B033F141E82031F5CA270137C6F1478
EF80F86F5CA217C16F5C17E36F5C17F317F76F5C17FF7090CAFCA2705AA3705AA2705AA3
705AA2705AA25FA216075F160F94CBFCA25E161E163E163CA2D807C05CEA1FF0486C14F8
486C5C1501486C5C15035E15075E150F6C4849CCFC49133E495B6C4813FC90380001F839
1F8007F0390FF01FE06CB51280000191CDFC6C13FCEB1FE051697DC658>I<000FB912F0
19F8A302F8C7000113F091C84813E001FC4B13C048485D01E01780494B13004D5A49157F
6090C9485A5E4C5B001E5F4C5B5E60003E4B90C7FC003C4B5A167F5F4C5A5D4B5BC85C4B
5B5D4B5B94C8FC4B5A157F5E4B5A4A5B5C5E4A5B4A16784A5B93C8FC4A5A147F4A4815F0
5D495B5B5D495B494914015B92C8FC495A017FEE03E0495A5C484915075A4A150F484915
1F4849153F48177F91C8EA01FF48481507484892B512C0BAFCA37E3D477BC64A>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmbx12 14.4 20
/Fk 20 118 df[<1DFF0A0313C0527FA2527FA2527FA3527FA2527FA399B6FCA25181A3
5181A25181A35181A25181A35181A25181A398B8FCA25083A35083A250831CBF1C3F506D
81A2E01FFE82881BFC083F6D81A2E07FF882881BF008FF6D81A24F01E08388634F6F81A2
4F4983894F90C78289A24F4884894F488489A24F4884894F488489A24E4985894E49858A
A24E49858A4E90C9828A61061F878A4E48868A61067F878A4E48868A614D898A4D49878B
614D7381A24D90CB828B60051F7381A24D488895BEFCA24D89A294C0FCA34C8BA24C8BA2
0680CC7E4C7581A24C90CD828C5F041F7581A24C488A8C5F047F7581A24C488A8C4B498B
8CA24B498B8D4B498B8DA24B90CF828D4B488C8DA24B488C8D4B488C8DA24B488C4A6D88
027FD9FFF08CBA6C057FBCFCAA9126C0000F0BFCC71201>184 167
119 294 203 65 D[<C012FCF7FFFCF8FFE021FCF9FF8022F022FC22FF23C023F023FCC8
6C4ACB6C810D07810D0116C0796C810E1F810E07817A817A818C7B80A17F8D7B81A17F8D
A17F8DA17FA28DA17FA38DA2A17FABA15BA269A2A15BA2575DA3575DA15B69A15B5792C7
FC699EB65AA15A565D565D565D0E1F5D5692C8FC9DB65A5515F80D0715E00D3F158054B6
48C9FC0C7F15F895BD12C057CAFC21F021C021FF22F022FEFAFFC04ECB000315F0E5007F
14FE0E0F800E0315C07A15F07A6C807B14FE7B807B817B817B81A17F7B817B81A17F8EA1
7F7C1580A2A114C08EA114E0A27C15F0A3A114F8A28EA2A114FCAD5815F8A4A114F06AA2
A114E06AA25815C0A29FB7128069A11400575D69575D575D575D6956B75A565E0E0F5E0E
7F4BC7FC0D03B75A0D3F5EC512E0A15AA1C8FC23FC23F023C0A0C9FC22F822800FF0CAFC
0EF8CBFC>166 164 119 291 191 I[<B600F092B77E92BBFCAAC86C0380CFFCB3B3B3B3
B0FA1FF8A4FA3FF0A7227FA323E0A222FFA469A323C069A269A369A26923806969A29EB5
FC68A2686868561400686855B6FC671F0F671F7F0C03B7FC0C1F5D9BB7FC1D1FC3FCA66A
A5>141 164 119 291 162 76 D[<C012E0F7FFC020FEF8FFE021FCF9FF8022E022F822
FE7C7E23E0C86C92CA003F820C00820D1F15FE0D03810D00820E3F817A810E07817A817A
817A81A27B807B1580A27B15C0A2A113E08DA113F0A2A113F8A28DA113FCA5A113FEADA1
13FCA4A113F8A269A113F0A3A113E069A113C0A1138069A11300699EB65AA15A565D565D
565D0E1F5D565D9DB7C7FC0D035D0D1F15F89CB75A0C3F16C096BD5A58C8FC22F822C09F
C9FC21F821800EF8CAFC55CBFC0780D1FCB3B3B3A8BD12C0AA03F0C71203>159
164 119 291 184 80 D<4CB512FC4BB712F0031F16FF92B912E0020318FC020F18FF02
3F19C091BB12F0494AC76C14FC4991C8000780496E02006E7E496E6F8070031F80497280
706F80496E6F8074804972808275808A878AA275806D5C8AA26D5C6D4A828A6D5C010191
CAFC6D5BEC3FF8EC0FE091CCFCA950B6FC96B8FC187F051FB9FC0403BAFC161F4BBBFC03
0FEEFC0F033FEDFC004AB71280020703F8C7FC021F1580027F4AC8FC91B612F0010315C0
4992C9FC011F14FC495C495C90B65A485D485D93CAFC485C5A5D485C5AA25D5AA25DB6FC
A463A363A26C806398B6FC6C6E17FD1A016C6EEE03F96FDC07F1806C070F816C6EDC3FE1
15C06C03C0DB7FC115FC6C6F912601FF8092B5FC6C03F802074917806D02FEDA3FFE6D16
C06D913AFFE003FFFC010F92B600F07F01034E7F010006807F023F94C71203020704FC14
00020004E0031F1580030F92C900011500DB001F01F093CAFC7A6D78EB83>97
D<95387FFFFC051FB612FC4CB812C0040F17F8047F17FE4BBA7E030719E0031F19F8037F
8592B626F000018002030380D9000F7F4A02FCC8481480021F02F05D4A02C018C04A4A5D
91B6C9B612E0495C494A19F0494A5D495C5B5E495C5B5E90B67015E05A93CAFC487414C0
751480485C75140048080713FC755B4B050013E048F33F8099C8FCA25AA35D5AA5B6FCB0
7EA381A27EA47E81A27EA26C80F501F86CF403FC70F007FE7EF50FFC6C81A26D6EF01FF8
6D6E183F1EF06D6E187F6D6EF0FFE06D6E19C06D626D6E6C4C13806D6F040F13006E6E4C
5A6E02F8EE7FFC6E02FE4C5A6E6E6C02075B020303F0023F5B6E03FF0107B55A6E6C92B7
C7FC031F60030718F8030118E06F6C1780040F4CC8FC040116F0DC001F92C9FCDD007F13
C0676D77EB78>99 D[<F7FFC00A1FB6FC097FB7FCABF3000F1C0188A289B3B3A695383F
FF80051FB512FC4CB77E040F16F0047F16FC4BB9FC030718C0031F18F0037F9126FC001F
13F892B600C0010113FC02034AC8EA3FFF4A02F8030F90B6FC021F02E015034A4A814A91
CA7E91B54883494A83494A83494A834986494A834C835B495C90B6FC93CCFC5AA2485CA2
5AA2485CA25AA35AA25DA25AA5B6FCB07EA67EA2817EA37EA36C80A27EA26C80A27E6D6E
5F646D806D626D6E5F646D6E5F6D6E5F6D6E94B77E6D6E16036E6D4C82021F02C0031F16
FE6E6EDB7FFE92B512C06E02F8913801FFF86E02FF020F5B020003F090B55A033F91B712
80030F4D5A03035F030017F0043F168004034BC7FCDC007F14E0050149C802F8C8FC>
130 167 119 293 149 I<95387FFFE0051FB67E4CB712F0040F16FE047FEEFFC00303B9
12F0030F18FC033F18FF4BDAF001814AB6C7001F14E0020702FC0203804A02F06E804A02
C06E6C7F4A4A6F7F4A91C9000F7F91B500FC7080494A85497380494A82494A8549738049
5C767F495C90B6727F93CBFC488948874B1B805A885A4B1BC0A25A7614E0A25AA25DA25A
1FF0A388B6FCA292BDFCA51FE01FC003F8CFFCA77EA5817EA37EA36C80A27EF60FC06FF2
1FE06CF53FF07E70197F6C1EE0826D1CFF6D6E4E13C01F806D6E606D6E4E13006D6E606D
6E4E5A6D6E4E5A6D6F4D5A6E6E4C485A6E02F05E6E6E040F5B6E02FE043F5B0203DAFFC0
92B5C7FC6E03F802075B6E6CDAFFC090B55A6F92B712F0030F610303198003004EC8FC04
1F17F8040317C0DC007F4BC9FC050315E0DD000F01F8CAFC6C6D79EB7B>I[<F17FFF061F
B512F04DB612FE050F6F7E057F824CB812F0040783041F834CDAF0037F93B6C6487F4B02
FC4914804B02F05B4B4A4914C04B14804B91C74814E05D4B4917F092B54891B6FC5C5F5C
5F5CA24A4A6E14E0A24A7114C0A24D6E14807414004A715B745B080013F0F33FC098C8FC
B3A9BB12FCABC7003F02E0CBFCB3B3B3B3AC003FB912FEAA02FCC77E>92
167 120 294 82 I<54B4FC0C3F13C094261FFFF893B512F00407B600E0020780047F03
FE021F800303B800C0017F80030F05F090B6FC033FDDFC018192BA0007D9FC7F13800203
07CF01C0B5FC4A9126FC003F9138FFFC01021F02E0010703F015C04A91C815C04A496F14
0091B500F8151F494A6F1480491BC0494A6F02E01580494A6F6E7E210049756D5A494A6F
6E6D5AF70FF84975EB03E09CC8FC90B68593CAFCA24889A44889AA6C65A46C9AC9FCA270
5D6D63A26D63A26D6E4B5C6D63A26D6E4B5C6D6E4B5C6D636D6E4B91CAFC6E01FE037F5B
6E6D92B55A6E02E001075C4A02FC013F14E04A91B85A02FE96CBFC033F17FC902601FC0F
17F00103010317C0DB007F4BCCFC4948010715E0DC001F01F8CDFC010F92D0FCA3131FA4
497EA380A2808181816D13F815FF93B812F8F3FFF86DF2FFC01DF81DFF6D1CC01EF06D1C
FC1EFF6D1DC06D898B6E886E886E886E886E89143F49BF7E01078A131F498A90B548CA12
0F4802F0EF001F4802C00601814891CD123F484908078048884A1A00484987A248777F5C
B588A86C6D515BA36C6D515BA26C6D98B55A6E626C676C6E4F5C6C6E4F5C6C02F0071F91
C7FC6C6E4F5B6D01FE96B55A6D6D6C05035C6D02F0051F5C010702FE94B612C06DDAFFE0
030F5D0100DBFF800103B648C8FC023F92B912F8020F1BE0020198C9FC6E6C19FC030719
C0DB007F05FCCAFC04031780DC00030380CBFC7A9D79EC86>I[<4BB47E013FB6FCB8FCAB
EA001F13037FA27FB3B3A698387FFF80080FB512FC087FECFF804FB712F0070716FC071F
82077F707E96B97E060349C66C804E01E0010F804E90C76C80DE1FF86E80DE3FE06E804E
5A4EC980EF81FEDD83FC85DD87F8824E85EF8FE0EF9FC04E8505BF8305FFCAFC5FA24D86
A25FA25FA35FA55FB3B3B3A4BA00C0013FB912F0AA9126F0000306FCC7FC>132
166 118 293 149 I[<EC03F8EC1FFF027F13C049B512F0498049804980A249804981A2
4981A290B77EA96D5DA26D5DA26D92C7FC6D5CA26D5C6D5C6D5C6D6C13C0021F90C8FCEC
03F891CAFCB3A74BB47E011FB6FCB8FCABEA001F13037F7FB3B3B3B3A8BAFCAA9138F000
07>56 167 118 294 74 I[<4BB47E013FB6FCB8FCABEA001F13037FA27FB3B3B3B3B3B3
B3ACBA1280AA9138F00007>57 166 118 293 74 108 D<DB03FF93387FFF80013FB603
0FB512FCB8037FECFF804FB712F0070716FC071F82077F707E96B97E060349C66C804E01
E0010F804E90C76C80DE1FF86E80DE3FE06E80D8001F4C5A01034CC9806D4B5A4D48856D
4B48824E854D5A4D5A4E85053F834DCAFC177E17FE4D86A25FA25FA35FA55FB3B3B3A4BA
00C0013FB912F0AA9126F0000306FCC7FC846B76EA95>110 D<95383FFFF8050FB612E0
94B712FE040FEEFFE0043F17F84BBAFC030719C0031F19F0037F9126F8003F14FC92B600
80010380020302FCC86C6D7E4A02F0031F80021F02C0030714F04A4A6F804A49CA8091B5
48717F494A717F494A7180494A71804989494A7180A2494A7180498993CB7E90B687484A
7280A2481F80A2484A7314C0A2481FE0A3481FF0A24B85481FF8A4481FFCA6B61DFEB06C
1FFCA56C1FF86F61A36C1FF0A36C1FE06F96B6FC6C1FC0A26C1F806F606C1F00A26C6F4D
5CA26D6E4D5C6D656D6E4D5C705F6D656D6E4D5C6D6E4D5C6D02FF4CB6C7FC6D6F4B5C6E
6E4B5C021F02F0031F14F06E02FC037F5C6EDAFF800103B65A020103F8013F92C8FC6E6C
91B812FC6F61030F19E003031980DB007F05FCC9FC040F17E0040194CAFCDC000F15E0DD
003F01F8CBFC776D79EB86>I<4BB46C91380FFFF0013FB64AB67EB8021F15F896B8FC06
0317E0060F17F8063F17FE95BA7E058119E00587DAC00781058F01F8C76C8005BF01C002
1F14FE94B5C8000780D8001F04FC030181010304F06F816D04C070806D4C708095CA6C80
05FC71804D864D8377804D874D7181A27781A27880A28D8A8DA28A8DA37880A32280A48A
A222C0B02280A266A32200A36669A3696669A2545CA2699BB6FC696569714D92C7FC535C
83714D5C714D5C7162714D5C724C5C7293B65A72030392C8FC06F84B5C06FE031F14F894
26DFFF80027F5C05C701F049B612C005C301FF011F5D05C191B748C9FCDDC07F17F8061F
17E006071780060104FCCAFC726C15E0070F02FCCBFCDF007F90CCFC97CEFCB3B0BA12C0
AA9138F00003829977EA95>I<DB07FE913801FFC0017FB5030F13FCB7033F13FF96B612
C0060315F04E81061F15FE4E8195267FFE0314809538FFF0074DD9C00F14C0DF001F14E0
4D5AD8001FDB07F84914F001034B5A6D4E14F84D5A6D5E4D5AA24DC7FCA217FE7414F05F
04FF6F14E05F7414C07414804D6E1400745B9738007FF8F30FC04D92C8FCA45FA75FB3B3
B0BA12FCAA9138F000015D6B77EA6E>114 D<93267FFFE0143C031FB6147E4AB738F001
FF020FEEFC07023FEEFF0F91BBFC1303010F913880003F4901F0C71201490180EC003F49
48C9120FD9FFF8824849160148498248498386485B488591CB7E5AA2865AA286A2B57EA2
80A2806E715A02FC715A6E95C7FCECFFC015F06C14FF16F8EEFFE06C16FF18FC6CEFFFC0
19F86C18FE737E6C19E06C19F86C19FE6C856D19C06D856D856D856D850101856D6C8402
1F19801407020119C0DA003F18E01507DB003F17F01601DC000716F8EF003F060115FCF0
003F190F1903003F060014FE486C84486C8486866D84A2867F86A26D1AFCA37FA26D1AF8
7F626E19F0801CE06E5F6E19C06E4D13806E5F02FF4D13006F4C5A03E04B485A03F80307
5B03FF033F5B04F80107B55AD9FE3F90B81280D9FC0F95C7FCD9F00317FC496C17F09026
C0003F16C090C7000F4BC8FC007E020115E0003CDA000F01F8C9FC576D77EB6A>I[<EE1F
F8A9163FA6167FA416FFA35DA35DA25DA25DA25DA25D5DA292B5FC5C5C5C5C5C5C5C49B6
FC5B010F92B8FC137F0007BCFCBDFCA8C7001F02F8CAFCB3B3B1F33FF0B36EF07FE0A283
A26EF0FFC0A27116806E5F80714A13006E4D5A846F6EEB1FFC6F02F0495A6F9139FE01FF
F06F91B65A6F5F03015F6F94C7FC043F5D040F15F8040115E0DC003F1480050001FCC8FC
>84 153 123 279 105 I<922601FFC0F17FF0013FB6050FB6FCB8043FB7FCABD8001FF1
000701031A006D87A26D87B3B3B3A465A59AB6FCA3648064A2646E611DDF71161F6EF13F
9FE27F1F806E19FF6E6EDB01FE81E107FCEDFF806E6EDB0FF8EEFFF06E6EED3FF06EDAFF
80903801FFE06F02F8010F13C06F91B71280030F18006F17FC03015FDB003F16E0040F16
80040003FCC7FC050302C094C8FC846C76EA95>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 1200dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 1257 897 a Fk(Branc)-7 b(h)89 b(and)h(Bound)i(Based)e(Load)g
(Balancing)i(for)2700 1196 y(P)-7 b(arallel)91 b(Applications)1415
1773 y Fj(Shobana)57 b(Radhakrishnan,)f(Rob)5 b(ert)55
b(K.)g(Brunner)h(and)g(Laxmik)-9 b(an)k(t)53 b(V.)i(Kal)-5
b(\023)-78 b(e)2551 1972 y Fi(f)p Fj(rdhkrshn,rbrunner,k)-9
b(ale)p Fi(g)p Fj(@cs.uiuc.edu)2806 2320 y Fh(Departmen)l(t)52
b(of)f(Computer)h(Science)2468 2503 y(Univ)l(ersit)l(y)g(of)f(Illinois)
j(at)d(Urbana-Champaign)2472 2685 y(1304)f(W.)h(Spring\014eld)j(Av)l
(e.)d(Urbana,)h(IL)f(61801)1519 3365 y Fg(Abstract.)82
b Fh(Man)l(y)77 b(parallel)i(applications)g(are)f(highly)h(dynamic)f
(in)g(nature.)1519 3548 y(The)59 b(computation)h(and)g(comm)l
(unication)g(patterns)f(c)l(hange)h(either)h(slo)l(wly)e(on)1519
3731 y(abruptly)46 b(during)h(the)f(course)g(of)f(computations.)g(An)h
(adaptiv)l(e)g(load)g(balancing)1519 3913 y(strategy)56
b(is)i(needed)i(for)d(suc)l(h)h(applications.)i(W)-13
b(e)58 b(are)f(exploring)j(an)e(approac)l(h)1519 4096
y(based)e(on)h(m)l(ulti-partition)h(ob)9 b(ject-based)57
b(decomp)t(osition,)h(supp)t(orted)g(b)l(y)e(ob-)1519
4279 y(ject)48 b(migration,)i(for)e(solving)i(this)f(problem.)h(F)-13
b(or)49 b(a)f(large)h(class)g(of)f(applications)1519
4461 y(that)70 b(require)j(suc)l(h)e(load)h(balancing,)g(the)g(load)f
(v)-9 b(aries)72 b(relativ)l(ely)h(slo)l(wly)f(\(or)1519
4644 y(infrequen)l(tly\))63 b(o)l(v)l(er)f(time.)g(It)g(is)f(then)i
(feasible)g(to)e(sp)t(end)i(signi\014can)l(t)g(amoun)l(t)1519
4827 y(of)57 b(computation)h(time)h(to)l(w)l(ards)d(arriving)k(at)d(a)g
(close-to-optimal)j(mapping)f(of)1519 5009 y(ob)9 b(jects)58
b(to)g(pro)t(cessors.)g(T)-13 b(o)59 b(utilize)i(this)e(opp)t(ortunit)l
(y)-13 b(,)60 b(it)f(is)g(necessary)g(to)g(de-)1519 5192
y(v)l(elop)g(an)g(ob)9 b(ject)58 b(mapping)i(strategy)e(that)g(can)h
(pro)t(duce)h(increasingly)i(b)t(etter)1519 5375 y(solutions)37
b(con)l(tin)l(uously)-13 b(.)39 b(W)-13 b(e)37 b(presen)l(t)h(an)f
(optimal-seeking)i(branc)l(h-and-b)t(ound)1519 5557 y(based)46
b(strategy)f(that)h(satis\014es)g(this)g(requiremen)l(t.)i(They)f
(strategy)e(tak)l(es)h(as)f(in-)1519 5740 y(put)50 b(a)f(ob)9
b(ject)50 b(comm)l(unication)i(graph,)d(sp)t(ecifying)j(the)f
(computation)f(time)h(for)1519 5922 y(eac)l(h)57 b(ob)9
b(ject)57 b(and)h(the)f(n)l(um)l(b)t(er)h(and)g(size)g(of)f(messages)f
(it)h(sends)h(to)e(an)l(y)h(other)1519 6105 y(ob)9 b(ject.)42
b(The)h(strategy)e(then)j(con)l(tin)l(uously)g(pro)t(duces)f(a)g
(stream)f(of)g(successiv)l(ely)1519 6288 y(b)t(etter)g(mappings)h(of)e
(ob)9 b(jects)41 b(to)g(pro)t(cessors.)h(One)g(can)h(stop)e(the)h
(strategy)f(from)1519 6470 y(execution)69 b(at)f(an)l(y)g(p)t(oin)l(t,)
h(and)f(tak)l(e)g(its)g(curren)l(t)h(b)t(est)f(solution)h(as)e(the)i
(new)1519 6653 y(mapping.)55 b(When)h(comm)l(unication)g(costs)e(are)h
(signi\014can)l(t,)g(w)l(e)g(sho)l(w)f(that)g(this)1519
6836 y(strategy)k(p)t(erforms)h(substan)l(tially)h(b)t(etter)g(than)g
(sev)l(eral)f(random)h(and)f(in)l(telli-)1519 7018 y(gen)l(t)51
b(greedy)h(strategies.)p eop
%%Page: 2 2
2 1 bop 1046 897 a Ff(1)224 b(In)-6 b(tro)6 b(duction)1046
1281 y Fj(Dev)-5 b(elopmen)g(t)46 b(of)h(e\016cien)-5
b(t)46 b(parallel)f(applications)g(b)5 b(ecomes)47 b(di\016cult)e(when)
j(they)e(are)i(ei-)1046 1480 y(ther)c(irregular)f(or)h(dynamic)f(or)h
(b)5 b(oth.)45 b(In)f(an)h(irregular)d(application,)h(the)g
(computational)1046 1679 y(costs)66 b(of)f(its)f(sub)5
b(comp)g(onen)-5 b(ts)65 b(cannot)h(b)5 b(e)64 b(predicted)g
(accurately)-14 b(.)64 b(Other)h(applications)1046 1879
y(are)c(dynamic,)e(and)i(the)f(computational)e(costs)j(of)g(their)e
(sub)5 b(comp)g(onen)-5 b(ts)61 b(c)-5 b(hange)62 b(o)-5
b(v)g(er)1046 2078 y(time.)62 b(In)i(either)e(case,)i(p)5
b(erformance)63 b(problems)g(manifest)f(themselv)-5 b(es)63
b(in)g(the)g(form)g(of)1046 2277 y(load)79 b(im)-5 b(balances.)79
b(Although)g(suc)-5 b(h)80 b(im)-5 b(balances)79 b(are)h(t)-5
b(ypically)76 b(small)i(and)i(tolerable)1046 2476 y(while)55
b(running)j(applications)d(on)i(a)g(small)f(n)-5 b(um)g(b)5
b(er)57 b(of)g(pro)5 b(cessors,)58 b(they)f(often)f(b)5
b(ecome)1046 2676 y(ma)k(jor)53 b(p)5 b(erformance)52
b(drains)h(on)h(systems)f(with)f(h)-5 b(undreds)55 b(of)f(pro)5
b(cessors.)54 b(As)f(the)g(com-)1046 2875 y(putational)e(science)g(and)
j(engineering)d(comm)-5 b(unit)g(y)50 b(attempts)h(to)i(tac)-5
b(kle)50 b(a)j(wider)f(range)1046 3074 y(of)60 b(problems)f(using)h
(parallel)d(mac)-5 b(hines,)60 b(and)g(as)g(the)g(n)-5
b(um)g(b)5 b(er)60 b(of)g(pro)5 b(cessors)61 b(a)-5 b(v)c(ailable)1046
3273 y(for)73 b(suc)-5 b(h)75 b(sim)-5 b(ulations)71
b(increases)j(with)e(tec)-5 b(hnology)-14 b(,)72 b(this)h(problem)f(of)
h(adapting)g(pro-)1046 3473 y(gram)58 b(b)5 b(eha)-5
b(vior)58 b(to)h(unpredictabilit)-5 b(y)55 b(and)k(dynamic)f(v)-9
b(ariations)56 b(b)5 b(ecomes)58 b(m)-5 b(uc)g(h)60 b(more)1046
3672 y(imp)5 b(ortan)-5 b(t.)1295 3871 y(A)46 b(solution)g(to)g(this)h
(problem)e(that)i(w)-5 b(e)46 b(ha)-5 b(v)g(e)48 b(b)5
b(een)46 b(exploring)f(in)-5 b(v)g(olv)g(es)46 b(breaking)g(the)1046
4070 y(problem)52 b(in)-5 b(to)53 b(a)h(large)e(n)-5
b(um)g(b)5 b(er)54 b(of)f(c)-5 b(h)g(unks,)56 b(suc)-5
b(h)54 b(that)f(the)g(total)f(n)-5 b(um)g(b)5 b(er)54
b(of)f(c)-5 b(h)g(unks)55 b(is)1046 4270 y(signi\014can)-5
b(tly)59 b(larger)h(than)h(the)f(n)-5 b(um)g(b)5 b(er)61
b(of)g(a)-5 b(v)c(ailable)58 b(pro)5 b(cessors.)62 b(In)f(fact,)f(the)g
(size)g(of)1046 4469 y(a)50 b(c)-5 b(h)g(unk)51 b(can)g(b)5
b(e)50 b(decided)f(indep)5 b(enden)-5 b(tly)49 b(of)h(the)f(n)-5
b(um)g(b)5 b(er)51 b(of)f(pro)5 b(cessors,)51 b(b)-5
b(y)51 b(using)f(the)1046 4668 y(criteria)g(of)i(k)-5
b(eeping)51 b(the)h(comm)-5 b(unication)49 b(o)-5 b(v)g(erhead)53
b(within)d(a)j(pre-sp)5 b(eci\014ed)51 b(b)5 b(ound.)53
b(A)1046 4867 y(system)c(that)f(supp)5 b(orts)50 b(data)f(driv)-5
b(en)49 b(ob)9 b(jects,)49 b(\(in)f(our)i(case,)f(Charm++)g([3]\))g(is)
g(used)h(to)1046 5067 y(implemen)-5 b(t)52 b(eac)-5 b(h)55
b(c)-5 b(h)g(unk)55 b(as)h(an)f(indep)5 b(enden)-5 b(t)54
b(ob)9 b(ject.)54 b(Th)-5 b(us,)56 b(these)f(ob)9 b(jects)54
b(send)i(mes-)1046 5266 y(sages)43 b(to)g(other)f Fe(obje)-8
b(cts)p Fj(,)43 b(in)f(con)-5 b(trast)43 b(to)f(an)h(MPI)f(program)h
(\(for)f(example\),)e(whic)-5 b(h)42 b(direct)1046 5465
y(messages)58 b(to)f(sp)5 b(eci\014c)56 b(pro)5 b(cessors.)59
b(As)e(a)h(result,)f(the)g(run)-5 b(time)56 b(system)h(is)g(free)f(to)h
(mo)-5 b(v)g(e)1046 5664 y(the)63 b(ob)9 b(jects)63 b(from)g(one)g(pro)
5 b(cessor)64 b(to)f(another,)g(without)g(disturbing)f(the)h
(application.)1046 5864 y(The)g(Charm++)f(system)h(supp)5
b(orts)63 b(suc)-5 b(h)64 b(migration)c(of)j(ob)9 b(jects)63
b(with)e(automatic)g(for-)1046 6063 y(w)-5 b(arding)55
b(of)f(messages,)h(and)h(with)d(automatic)g(minimization)c(of)55
b(forw)-5 b(arding)54 b(o)-5 b(v)g(erhead.)1046 6262
y(With)63 b(these)h(prerequisites,)f(namely)f(the)i(m)-5
b(ulti-c)g(h)g(unk)63 b(ob)9 b(ject-based)65 b(decomp)5
b(osition,)1046 6461 y(and)65 b(ob)9 b(ject)63 b(migration,)f(all)h
(that)g(one)h(needs)h(is)f(a)g(load)g(balancing)f(strategy)g(that)h
(will)1046 6661 y(decide)54 b(when)i(and)g(where)f(to)g(mo)-5
b(v)g(e)55 b(ob)9 b(jects.)1295 6860 y(Ev)-5 b(en)55
b(in)f(irregular)f(and)i(dynamic)e(programs,)h(one)h(can)g(\014nd)g(a)f
(basis)h(for)g(predicting)1046 7059 y(future)68 b(ev)-5
b(en)g(ts.)70 b(Just)f(as)g(in)f(sequen)-5 b(tial)67
b(programs)i(one)g(can)g(rely)e(on)i(the)f(principal)f(of)1046
7258 y(lo)5 b(calit)-5 b(y)-14 b(,)54 b(in)j(a)h(parallel)d(program)i
(one)h(can)f(utilize)d(the)k(principal)d(of)i("temp)5
b(oral)56 b(p)5 b(ersis-)1046 7458 y(tence)55 b(of)g(computation)e(and)
j(comm)-5 b(unication)52 b(patterns".)k(In)f(irregular)f(computations,)
1046 7657 y(eac)-5 b(h)47 b(sub)5 b(comp)g(onen)-5 b(t's)47
b(computation)f(time)e(ma)-5 b(y)46 b(b)5 b(e)47 b(unpredictable)e
Fe(a)52 b(priori)p Fj(,)46 b(but)h(once)1046 7856 y(the)63
b(program)g(starts)h(executing,)d(eac)-5 b(h)64 b(comp)5
b(onen)-5 b(t)63 b(will)d(p)5 b(ersist)63 b(in)g(its)f(b)5
b(eha)-5 b(vior)63 b(o)-5 b(v)g(er)1046 8055 y(the)60
b(iterations)f(of)h(the)h(program.)f(In)h(dynamic)e(applications,)g
(the)h(b)5 b(eha)-5 b(vior)60 b(of)h(a)f(com-)1046 8255
y(p)5 b(onen)-5 b(t)53 b(c)-5 b(hanges,)53 b(but)g(ev)-5
b(en)52 b(here,)g(either)g(the)g(b)5 b(eha)-5 b(vior)51
b(c)-5 b(hanges)54 b(slo)-5 b(wly)51 b(o)-5 b(v)g(er)52
b(time)f(\(as)1046 8454 y(in)62 b(molecular)e(dynamics)h(applications)g
([4],)i(where)f(the)g(load)g(ma)-5 b(y)62 b(shift)f(slo)-5
b(wly)61 b(as)i(the)1046 8653 y(atoms)42 b(mo)-5 b(v)g(e\))42
b(or)h(abruptly)e(but)i(infrequen)-5 b(tly)-14 b(,)40
b(\(as)j(in)f(adapting)g(re\014nemen)-5 b(t)42 b(strategies\).)1046
8852 y(In)50 b(either)e(case,)i(it)e(is)h(a)h(reasonable)f(heuristic)f
(to)h(assume)h(suc)-5 b(h)51 b(a)f(p)5 b(ersistence)48
b(of)i(b)5 b(eha)-5 b(v-)1046 9052 y(ior,)57 b(o)-5 b(v)g(er)58
b(some)g(horizon)f(in)h(the)f(future.)h(This)f(is)h(not)g(unlik)-5
b(e)56 b(the)i(idea)f(of)g(using)h(cac)-5 b(hes)1046
9251 y(based)57 b(on)f(the)g(principal)e(of)h(lo)5 b(calit)-5
b(y)53 b(and)j(w)-5 b(orking)56 b(sets.)g(Although)f(the)h(program)f
(ma)-5 b(y)1046 9450 y(jump)54 b(out)f(of)h(its)f(w)-5
b(orking)54 b(set)g(from)f(time)f(to)h(time,)f(the)i(cac)-5
b(hing)53 b(tec)-5 b(hnique,)53 b(whic)-5 b(h)54 b(as-)1046
9649 y(sume)i(that)f(the)g(data)g(referenced)g(in)g(the)g(recen)-5
b(t)56 b(past)g(will)d(con)-5 b(tin)g(ue)55 b(to)g(b)5
b(e)55 b(referenced,)1046 9849 y(still)e(pa)-5 b(y)56
b(great)e(p)5 b(erformance)54 b(dividends.)p eop
%%Page: 3 3
3 2 bop 1295 897 a Fj(Based)65 b(on)g(the)g(ab)5 b(o)-5
b(v)g(e)65 b(p)5 b(erformance)63 b(prediction)g(principle,)g(w)-5
b(e)65 b(ha)-5 b(v)g(e)65 b(dev)-5 b(elop)5 b(ed)64 b(a)1046
1096 y(framew)-5 b(ork)62 b(that)g(facilitates)d(dev)-5
b(elopmen)g(t)61 b(of)h(suc)-5 b(h)64 b(strategies.)e(The)h(framew)-5
b(ork)61 b(pro-)1046 1295 y(vides)71 b(automatic)d(measuremen)-5
b(t)71 b(of)g(computation)e(times)h(and)h(automatic)e(tracing)h(of)1046
1494 y(comm)-5 b(unication)62 b(ev)-5 b(en)g(ts)66 b(of)e(a)h(parallel)
e(ob)9 b(ject)64 b(program.)h(A)g(load)f(balancing)g(strategy)1046
1694 y(can)f(tap)g(in)-5 b(to)62 b(this)g(framew)-5 b(ork,)62
b(obtain)g(the)h(necessary)g(data,)g(and)h(decide)d(to)i(migrate)1046
1893 y(some)58 b(ob)9 b(jects)57 b(to)h(new)g(pro)5 b(cessors.)59
b(The)e(framew)-5 b(ork)57 b(also)h(facilitates)c(implemen)-5
b(tation)1046 2092 y(of)68 b(suc)-5 b(h)69 b(decisions)e(b)-5
b(y)68 b(pro)-5 b(viding)67 b(mec)-5 b(hanisms)68 b(to)f(migrate)f
(individual)f(ob)9 b(jects.)68 b(The)1046 2291 y(framew)-5
b(ork)54 b(is)h(broad)h(enough)g(to)f(admit)f(a)h(wide)g(v)-9
b(ariet)k(y)53 b(of)i(strategies.)1295 2619 y(Within)i(the)h(con)-5
b(text)58 b(of)h(this)f(framew)-5 b(ork,)58 b(w)-5 b(e)59
b(are)f(engaged)h(in)f(dev)-5 b(eloping)58 b(a)h(suite)1046
2818 y(of)k(load)f(balancing)g(strategies,)g(and)i(applying)d(them)h
(in)g(a)h(v)-9 b(ariet)k(y)61 b(of)i(applications.)e(It)1046
3017 y(is)j(clear)g(that)g(di\013eren)-5 b(t)64 b(class)g(of)h
(applications)e(will)f(require)h(di\013eren)-5 b(t)64
b(load)g(balancing)1046 3216 y(strategies.)46 b(F)-14
b(or)48 b(example,)e(for)h(applications)e(running)j(on)f(m)-5
b(ulti-user)46 b(w)-5 b(orkstation)47 b(clus-)1046 3416
y(ters,)60 b(the)g(strategies)e(m)-5 b(ust)60 b(adapt)g(to)g(the)f
(extraneous)h(load)f(presen)-5 b(ted)61 b(b)-5 b(y)60
b(the)g(jobs)g(of)1046 3615 y(other)54 b(users)i([2].)f(On)h(a)e
(dedicated)g(parallel)e(mac)-5 b(hine,)54 b(some)g(applications)f(ma)-5
b(y)54 b(c)-5 b(hange)1046 3814 y(their)61 b(b)5 b(eha)-5
b(vior)61 b(so)i(rapidly)e(that)g(only)h(a)g(highly)e(lo)5
b(calized,)59 b(con)-5 b(tin)g(uously)62 b(monitoring)1046
4013 y(receiv)-5 b(er-initiated)73 b(strategy)k(will)e(su\016ce.)j(In)g
(other)f(con)-5 b(texts,)77 b(p)5 b(erio)g(dic)75 b(rebalancing)1046
4213 y(ma)-5 b(y)49 b(b)5 b(e)48 b(acceptable,)g(as)i(long)e(as)i(it)d
(is)i(done)h(often)e(enough.)i(Here,)e(a)h(balancer)g(based)h(on)1046
4412 y(a)k(quic)-5 b(k)53 b(heuristic)f(is)h(necessary)-14
b(,)55 b(b)5 b(ecause)53 b(otherwise)g(the)h(frequen)-5
b(t)53 b(nature)g(of)h(the)f(load)1046 4611 y(balancing)69
b(will)f(mak)-5 b(e)70 b(the)g(cost)g(of)g(the)g(decision)f(itself)g(a)
h(substan)-5 b(tial)70 b(drain)g(on)h(p)5 b(er-)1046
4811 y(formance.)68 b(Ho)-5 b(w)g(ev)g(er,)70 b(there)e(exists)h(a)g
(signi\014can)-5 b(t)68 b(class)h(of)g(applications,)f(where)h(only)
1046 5010 y(p)5 b(erio)g(dic,)53 b Fe(infr)-8 b(e)g(quent)57
b Fj(rebalancing)d(is)h(necessary)-14 b(.)1295 5337 y(As)50
b(an)g(example,)f(our)h(exp)5 b(erience)48 b(with)h(molecular)e
(dynamics)i(for)h(bioph)-5 b(ysical)49 b(sim-)1046 5536
y(ulations)f(sho)-5 b(ws)51 b(that)e(the)g(load)g(balance)f(sta)-5
b(ys)50 b(relativ)-5 b(ely)46 b(stable)j(o)-5 b(v)g(er)49
b(sev)-5 b(eral)49 b(hours)h(as)1046 5736 y(the)g(atoms)f(slo)-5
b(wly)49 b(migrate)f(o)-5 b(v)g(er)50 b(domain)f(b)5
b(oundaries.)50 b(In)g(suc)-5 b(h)51 b(a)f(situation,)f(sp)5
b(ending)1046 5935 y(as)49 b(m)-5 b(uc)g(h)50 b(as)f(a)g(few)f(min)-5
b(utes)48 b(on)h(deciding)e(a)i(new)g(mapping)f(is)g(not)h(that)f(exp)5
b(ensiv)-5 b(e.)48 b(The)1046 6134 y(question)63 b(is)h(whether)g(it)f
(is)h(p)5 b(ossible)63 b(to)h(pro)5 b(duce)64 b(a)h(higher)e(qualit)-5
b(y)62 b(solution,)i(b)5 b(ey)-5 b(ond)1046 6333 y(what)64
b(simple)f(heuristic)f(strategies)i(can)g(pro)5 b(duce,)64
b(b)-5 b(y)65 b(exp)5 b(ending)63 b(more)h(computation)1046
6533 y(time.)d(The)i(problem)e(of)i(optim)-5 b(um)61
b(mapping)h(is)h(NP-hard.)g(So,)h(ev)-5 b(en)62 b(with)g(min)-5
b(utes)62 b(of)1046 6732 y(time)e(on)j(a)f(parallel)e(mac)-5
b(hine)61 b(it)g(t)-5 b(ypically)59 b(will)h(not)i(b)5
b(e)62 b(p)5 b(ossible)61 b(to)h(\014nd)h(the)f(optimal)1046
6931 y(solution.)70 b(One)i(th)-5 b(us)72 b(app)5 b(ears)72
b(to)e(b)5 b(e)71 b(stuc)-5 b(k)72 b(b)5 b(et)-5 b(w)g(een)71
b(the)f(bimo)5 b(dal)69 b(c)-5 b(hoice)71 b(of)g(a)g(lo)-5
b(w-)1046 7130 y(cost)51 b(lo)-5 b(w-qualit)g(y)48 b(heuristic)h(metho)
5 b(d)49 b(on)i(one)g(hand,)h(and)f(unrealistic)d(optim)-5
b(um-\014nding)1046 7330 y(algorithms)65 b(on)h(the)g(other)h(hand.)g
(This)f(pap)5 b(er)67 b(presen)-5 b(ts)67 b(a)g(branc)-5
b(h-and-b)5 b(ound)69 b(based)1046 7529 y(strategy)47
b(that)f(\014lls)h(in)g(the)g(middle)e(ground:)j(dep)5
b(ending)47 b(on)h(the)f(a)-5 b(v)c(ailable)45 b(computation)1046
7728 y(time,)54 b(it)g(can)i(pro)5 b(duce)56 b(a)g(con)-5
b(tin)g(uum)55 b(of)h(solutions)f(from)g(the)h(simple)e(heuristic)g
(ones)i(to)1046 7927 y(pro)-5 b(v)c(ably)55 b(optimal)d(ones.)1295
8255 y(In)44 b(the)g(next)f(section,)g(w)-5 b(e)44 b(describ)5
b(e)43 b(the)h(ob)9 b(ject)43 b(mo)5 b(del)42 b(that)i(our)g(framew)-5
b(ork)43 b(and)h(the)1046 8454 y(branc)-5 b(h-and-b)5
b(ound)45 b(strategy)40 b(are)i(based)g(on.)g(The)g(algorithm)d
(itself,)h(along)h(with)g(sev)-5 b(eral)1046 8653 y(k)g(ey)79
b(optimizations,)c(are)k(describ)5 b(ed)79 b(in)f(the)g(next)h
(section.)f(Section)g(4)h(describ)5 b(es)78 b(the)1046
8852 y(p)5 b(erformance)53 b(attained)h(b)-5 b(y)55 b(the)f(new)h
(strategy)-14 b(,)54 b(and)h(compares)f(it)g(with)f(some)h(heuristic)
1046 9052 y(strategies.)62 b(The)g(branc)-5 b(h-and-b)5
b(ound)66 b(algorithm)60 b(itself)h(is)h(implemen)-5
b(ted)60 b(as)j(a)f(parallel)1046 9251 y(Charm++)k(program,)h(so)g(as)f
(the)g(utilize)e(all)g(the)i(a)-5 b(v)c(ailable)64 b(compute)h(p)5
b(o)-5 b(w)g(er)67 b(for)f(load)1046 9450 y(balancing.)43
b(This)h(parallelization,)39 b(as)45 b(w)-5 b(ell)42
b(as)j(the)e(incorp)5 b(oration)42 b(of)i(the)g(strategy)f(in)g(the)
1046 9649 y(run-time)52 b(framew)-5 b(ork,)52 b(and)i(its)e
(application)f(to)h(b)5 b(enc)-5 b(hmark)53 b(programs)g(is)g(describ)5
b(ed)52 b(in)1046 9849 y(section)i(5.)p eop
%%Page: 4 4
4 3 bop 1046 897 a Ff(2)224 b(The)75 b(Ob)12 b(ject)75
b(Mo)6 b(del)1046 1302 y Fj(E\016cien)-5 b(t)65 b(comm)-5
b(unication)62 b(and)k(w)-5 b(ork-load)65 b(balancing)g(are)g
(prerequisites)f(to)g(utilizing)1046 1501 y(the)37 b(full)e(p)5
b(erformance)35 b(of)i(parallel)d(and)k(distributed)d(systems.)i(In)g
(suc)-5 b(h)38 b(high-p)5 b(erformance)1046 1700 y(applications)51
b(it)g(is)h(critical)e(to)i(b)5 b(e)52 b(able)g(to)g(balance)g(the)h
(load,)f(comprised)g(of)g(b)5 b(oth)52 b(com-)1046 1900
y(putation)i(and)i(comm)-5 b(unication.)53 b(Th)-5 b(us,)57
b(a)e(load)g(balancer)g(tries)f(to)h(ac)-5 b(hiev)g(e)55
b(an)g(optimal)1046 2099 y(distribution)h(of)h(load)g(across)i(pro)5
b(cessors)59 b(in)e(suc)-5 b(h)59 b(a)e(w)-5 b(a)g(y)58
b(that)g(the)f(task)g(can)h(complete)1046 2298 y(in)d(the)g(least)f(p)5
b(ossible)55 b(time.)1295 2499 y(This)39 b(section)g(describ)5
b(es)38 b(ho)-5 b(w)40 b(our)g(algorithm)d(approac)-5
b(hes)40 b(the)f(load)g(balancing)f(prob-)1046 2698 y(lem,)67
b(b)-5 b(y)68 b(mo)5 b(deling)66 b(parallel)f(applications)i(as)h(a)g
(collections)e(of)i(computation)e(ob)9 b(jects)1046 2897
y(whic)-5 b(h)69 b(comm)-5 b(unicate)68 b(among)h(themselv)-5
b(es.)69 b(Comm)-5 b(unication)67 b(costs)j(b)5 b(et)-5
b(w)g(een)69 b(ob)9 b(jects)1046 3096 y(are)54 b(mo)5
b(deled)53 b(based)i(on)f(the)g(c)-5 b(haracteristics)53
b(of)h(the)f(particular)g(mac)-5 b(hine,)53 b(and)i(ob)9
b(jects)1046 3296 y(on)57 b(the)e(same)h(pro)5 b(cessor)57
b(are)f(assumed)h(to)f(exc)-5 b(hange)56 b(data)g(for)g(free.)g(F)-14
b(urthermore,)56 b(the)1046 3495 y(load)75 b(balancer)g(has)h(the)f
(freedom)g(to)g(reassign)h(these)f(ob)9 b(jects)76 b(to)f(an)-5
b(y)76 b(pro)5 b(cessors)76 b(to)1046 3694 y(optimize)52
b(program)k(p)5 b(erformance.)1295 3895 y(The)51 b(ob)9
b(jects)52 b(that)e(are)h(to)g(b)5 b(e)51 b(balanced)g(are)g(represen)
-5 b(ted)52 b(as)g(a)f(net)-5 b(w)g(ork)51 b(of)g(comm)-5
b(u-)1046 4094 y(nicating)48 b(en)-5 b(tities)49 b(in)g(the)h(form)f
(of)h(a)g(directed)f(graph.)i(Graph-based)h(mo)5 b(dels)49
b(ha)-5 b(v)g(e)50 b(b)5 b(een)1046 4293 y(used)49 b(earlier)e(for)h
(the)h(task)f(allo)5 b(cation)45 b(problem)j([1].)h(\(Also,)e(Metis)h
([5])h(pro)-5 b(vides)49 b(a)f(graph)1046 4492 y(based)75
b(partitioning)c(sc)-5 b(heme)75 b(that)e(is)h(mean)-5
b(t)73 b(for)h(partioning)f(large,)g(million-elemen)-5
b(t)1046 4692 y(unstructured)51 b(meshes.\))f(The)g(v)-5
b(ertices)49 b(in)g(the)h(graph)h(represen)-5 b(t)51
b(the)f(computation)e(cost)1046 4891 y(of)67 b(the)f(ob)9
b(jects)66 b(to)h(b)5 b(e)66 b(balanced)g(and)h(the)g(edges)g(represen)
-5 b(t)67 b(a)g(pair)f(\(n)-5 b(um)g(b)5 b(er)66 b(of)h(mes-)1046
5090 y(sages,)49 b(total)d(b)-5 b(ytes)49 b(sen)-5 b(t\))48
b(of)g(eac)-5 b(h)48 b(comm)-5 b(unication.)45 b(Since)j(it)e(is)i(a)g
(directed)f(graph,)i(eac)-5 b(h)1046 5290 y(pair)50 b(of)g(edges)h(ma)
-5 b(y)50 b(ha)-5 b(v)g(e)50 b(zero,)h(one)f(or)g(t)-5
b(w)g(o)51 b(edges)g(connecting)e(them)g(but)i(if)e(more)h(than)1046
5489 y(one,)65 b(they)g(are)g(in)f(opp)5 b(osite)65 b(directions.)e(If)
i(b)5 b(oth)65 b(the)g(sending)g(and)h(receiving)d(en)-5
b(tities)1046 5688 y(are)55 b(assigned)h(to)f(the)g(same)h(pro)5
b(cessor,)56 b(the)f(mo)5 b(del)54 b(assumes)i(that)f(no)h(time)d(is)i
(required)1046 5887 y(for)g(comm)-5 b(unication;)53 b(otherwise,)i(the)
f(sender)i(and)g(receiv)-5 b(er)54 b(pa)-5 b(y:)2227
6255 y Fd(T)2324 6313 y Fe(send)2701 6255 y Fj(=)47 b
Fd(\013)2983 6313 y Fe(send)3350 6255 y Fi(\001)38 b
Fd(N)3567 6280 y Fe(messages)4266 6255 y Fj(+)f Fd(\014)4526
6313 y Fe(send)4893 6255 y Fi(\001)g Fd(N)5109 6313 y
Fe(bytes)2072 6527 y Fd(T)2169 6579 y Fe(r)-8 b(e)g(c)g(eive)2701
6527 y Fj(=)47 b Fd(\013)2983 6579 y Fe(r)-8 b(e)g(c)g(eive)3505
6527 y Fi(\001)37 b Fd(N)3721 6552 y Fe(messages)4420
6527 y Fj(+)h Fd(\014)4681 6579 y Fe(r)-8 b(e)g(c)g(eive)5203
6527 y Fi(\001)37 b Fd(N)5419 6585 y Fe(bytes)1295 6920
y Fj(In)70 b(addition)d(to)i(migratable)e(ob)9 b(jects)69
b(and)g(comm)-5 b(unication)67 b(patterns,)i(our)g(ob)9
b(ject)1046 7119 y(mo)c(del)54 b(also)h(includes)f(the)h(follo)-5
b(wing)53 b(features:)1116 7456 y(1.)83 b Fc(Non-migratable)52
b(Ob)11 b(jects:)47 b Fj(Non-migratable)c(ob)9 b(jects)45
b(are)h(ob)9 b(jects)45 b(whic)-5 b(h)46 b(m)-5 b(ust)1328
7656 y(remain)38 b(on)i(particular)e(pro)5 b(cessors)40
b(throughout)g(their)e(lifetime.)d(The)k(load)g(balancers)1328
7855 y(still)44 b(considers)j(their)e(computation)f(and)j(comm)-5
b(unication)43 b(cost,)k(but)f(do)5 b(es)46 b(not)g(ha)-5
b(v)g(e)1328 8054 y(the)55 b(freedom)g(to)g(mo)-5 b(v)g(e)55
b(them.)1116 8255 y(2.)83 b Fc(Pro)-5 b(xy)85 b(Comm)-5
b(unication:)74 b Fj(This)g(refers)g(to)h(a)f(kind)g(of)g(comm)-5
b(unication)72 b(where)1328 8454 y(sev)-5 b(eral)65 b(ob)9
b(jects)66 b(require)e(data)i(from)e(a)i(particular)e(ob)9
b(ject.)65 b(Should)h(the)f(receiving)1328 8653 y(ob)9
b(jects)64 b(b)5 b(e)64 b(placed)f(on)i(the)e(same)h(pro)5
b(cessor,)65 b(a)f(single)f(message)h(ma)-5 b(y)63 b(supply)h(the)1328
8852 y(data)40 b(to)g(all)e(of)i(the)f(receiv)-5 b(ers.)39
b(W)-14 b(e)40 b(ha)-5 b(v)g(e)41 b(implemen)-5 b(ted)37
b(this)i(b)-5 b(y)40 b(adding)g(an)h(attribute,)1328
9052 y(the)76 b(pro)-5 b(xy-id,)76 b(for)g(eac)-5 b(h)77
b(message)f(arc.)g(While)e(calculating)g(the)i(comm)-5
b(unication)1328 9251 y(cost)49 b(resulting)e(from)h(the)g(assignmen)-5
b(t)48 b(of)g(an)h(ob)9 b(ject)48 b(to)g(a)h(pro)5 b(cessor,)49
b(w)-5 b(e)48 b(ignore)g(the)1328 9450 y(cost)56 b(if)e(some)i(message)
f(from)g(this)g(sending)h(ob)9 b(ject)55 b(to)g(another)h(ob)9
b(ject)55 b(residing)g(on)1328 9649 y(the)61 b(same)g(pro)5
b(cessor)61 b(as)h(the)f(ob)9 b(ject)60 b(b)5 b(eing)60
b(curren)-5 b(tly)60 b(assigned)i(ha)-5 b(ving)60 b(the)h(same)1328
9849 y(pro)-5 b(xy-id)55 b(has)h(already)f(b)5 b(een)55
b(accoun)-5 b(ted)55 b(for.)p eop
%%Page: 5 5
5 4 bop 1116 897 a Fj(3.)83 b Fc(Bac)-5 b(kground)57
b(load:)50 b Fj(In)g(some)f(applications,)e(a)j(signi\014can)-5
b(t)49 b(amoun)-5 b(t)49 b(of)g(w)-5 b(ork)49 b(ma)-5
b(y)1328 1096 y(not)58 b(b)5 b(e)57 b(easily)f(attributed)g(to)h(an)-5
b(y)58 b(ob)9 b(ject,)57 b(although)g(the)h(total)e(time)f(sp)5
b(en)-5 b(t)58 b(whic)-5 b(h)1328 1295 y(is)61 b(not)f(accoun)-5
b(ted)61 b(for)f(b)-5 b(y)61 b(ob)9 b(jects)60 b(can)h(b)5
b(e)60 b(determined.)f(The)h(load)g(balancers)h(can)1328
1494 y(tak)-5 b(e)55 b(this)g(time)e(in)-5 b(to)55 b(accoun)-5
b(t)55 b(while)f(distributing)f(ob)9 b(jects.)1295 1844
y(Giv)-5 b(en)71 b(this)h(kind)f(of)g(input)h(ab)5 b(out)71
b(the)h(load)f(and)h(the)f(pro)5 b(cessors,)73 b(the)f(load)f(bal-)1046
2043 y(ancer)53 b(tries)g(to)f(ac)-5 b(hiev)g(e)53 b(an)g(optimal)e
(load)i(distribution)e(within)h(a)h(limited)d(searc)-5
b(h)54 b(time.)1046 2243 y(This)61 b(ob)9 b(ject)60 b(mo)5
b(del)59 b(pro)-5 b(vides)61 b(enough)g(information)d(to)j(implemen)-5
b(t)57 b(a)k(v)-9 b(ariet)k(y)59 b(of)h(load)1046 2442
y(balancing)54 b(algorithms.)1046 3002 y Ff(3)224 b(Branc)-6
b(h)73 b(and)h(Bound)g(Algorithm)1046 3430 y Fj(This)42
b(section)f(describ)5 b(es)42 b(the)f(algorithm)f(for)i(load)f
(balancing)g(w)-5 b(e)43 b(implemen)-5 b(ted)39 b(based)k(on)1046
3629 y(the)48 b(branc)-5 b(h)50 b(and)f(b)5 b(ound)49
b(strategy)e(for)i(solving)e(searc)-5 b(h)49 b(problems.)f(Here)g(the)g
(problem)f(of)1046 3828 y(\014nding)g(a)f(go)5 b(o)g(d)46
b(load)g(distribution)f(for)h(the)g(pro)5 b(cessors)48
b(is)e(mo)5 b(deled)45 b(as)i(an)g(optimization)1046
4028 y(problem.)52 b(While)e(the)i(greedy)g(algorithm)e(leads)i(to)g(a)
h(lo)5 b(cal)50 b(optim)-5 b(um)51 b(at)h(eac)-5 b(h)53
b(step)f(and)1046 4227 y(therefore)59 b(ma)-5 b(y)60
b(lead)g(to)f(a)i(sub)5 b(optimal)58 b(o)-5 b(v)g(erall)59
b(distribution,)f(the)i(branc)-5 b(h)61 b(and)g(b)5 b(ound)1046
4426 y(algorithm)53 b(alw)-5 b(a)g(ys)55 b(leads)g(to)g(the)g(optimal)e
(distribution.)h(appreciably)-14 b(.)1295 4631 y(The)52
b(algorithm)d(uses)j(a)g(\\state")f(data)g(structure)h(to)f(store)g(a)h
(partial)e(mapping)h(deci-)1046 4831 y(sion,)k(and)h(its)f
(consequences.)h(A)f Fe(state)g Fj(con)-5 b(tains)56
b(the)f(follo)-5 b(wing)53 b(comp)5 b(onen)-5 b(ts.)1150
5225 y Fc({)83 b Fj(cost[p]:)60 b(for)e(eac)-5 b(h)59
b(pro)5 b(cessor)59 b(p,)g(cost[p])h(is)e(the)g(sum)h(of)g(the)f
(computation)f(costs)i(of)1328 5424 y(all)j(the)g(ob)9
b(jects)63 b(assigned)g(to)g(that)f(pro)5 b(cessor)64
b(and)f(the)f(comm)-5 b(unication)61 b(cost)i(due)1328
5624 y(to)55 b(the)g(in)-5 b(teraction)54 b(of)h(these)g(ob)9
b(jects)55 b(with)f(those)i(residing)e(on)i(other)f(pro)5
b(cessors.)1150 5829 y Fc({)83 b Fj(map[i])52 b(for)g(eac)-5
b(h)53 b(ob)9 b(ject)51 b(i)h(map[i])f(represen)-5 b(ts)54
b(the)e(pro)5 b(cessor)53 b(to)f(whic)-5 b(h)52 b(is)g(has)h(b)5
b(een)1328 6028 y(assigned)42 b(in)e(the)h(state)f(under)i
(consideration.)e(\(ma)-5 b(y)40 b(b)5 b(e)40 b(-1)i(for)e(unassigned)i
(ob)9 b(jects\).)1150 6233 y Fc({)83 b Fj(lo)-5 b(w)g(erBound:)56
b(This)f(is)g(the)g(maxim)-5 b(um)53 b(of)i(all)f(the)h(cost[p])g(v)-9
b(alues)1150 6438 y Fc({)83 b Fj(nextOb)9 b(ject:)55
b(This)g(is)g(the)g(next)f(ob)9 b(ject)55 b(to)g(b)5
b(e)55 b(considered)g(for)g(assignmen)-5 b(t)1150 6643
y Fc({)83 b Fj(stepsLeft:)47 b(This)h(is)f(an)g(in)-5
b(teger)47 b(that)g(indicates)f(the)h(n)-5 b(um)g(b)5
b(er)47 b(of)h(unassigned)g(ob)9 b(jects)1328 6842 y(in)55
b(this)g(state.)1150 7048 y Fc({)83 b Fj(minRemaining[p]:)55
b(This)i(indicates)e(the)i(p)5 b(oten)-5 b(tial)54 b(additional)h(cost)
i(that)g(the)f(pro-)1328 7247 y(cessor)e(p)g(w)-5 b(ould)54
b(incur)e(for)i(sure)g(in)f(an)-5 b(y)53 b(solution)g(that)f(extends)i
(the)f(curren)-5 b(t)53 b(state.)1150 7452 y Fc({)83
b Fj(totalCost:)54 b(This)h(is)g(simply)f(the)h(sum)g(of)g(all)f
(costs[p])1295 7841 y(Except)76 b(the)g(\014rst)h(t)-5
b(w)g(o)77 b(arra)-5 b(ys,)78 b(all)d(others)i(are)f(deriv)-9
b(able)75 b(from)h(these,)h(but)f(ha)-5 b(v)g(e)1046
8040 y(b)5 b(een)66 b(added)g(as)g(part)g(of)g(the)f(state)g(itself)f
(as)j(their)d(v)-9 b(alues)65 b(are)h(required)f(often)g(and)h(it)1046
8239 y(computationally)52 b(less)j(exp)5 b(ensiv)-5 b(e)54
b(to)h(main)-5 b(tain)53 b(them)i(this)f(w)-5 b(a)g(y)-14
b(.)1295 8444 y(The)55 b(pseudo)5 b(co)g(de)56 b(for)f(the)g(branc)-5
b(h)56 b(and)g(b)5 b(ound)56 b(algorithm)d(is)i(giv)-5
b(en)55 b(b)5 b(elo)-5 b(w:)1046 8839 y Fb(Initialization:)1133
9038 y(-)88 b(Initialize)g(state)h(S)e(to)g(empty)h(\(no)g(object)g(is)
g(assigned)g(yet\))1133 9237 y(-)g(Define)g(the)f(initial)i(upperBound)
g(using)f(a)f(greedy)h(algorithm)1133 9436 y(-)g(Assign,)g(in)f(S,)h
(all)g(non-migratable)h(objects)g(to)1046 9636 y(their)f(current)g
(processors)1133 9835 y(-)g(Search\(S\))p eop
%%Page: 6 6
6 5 bop 1046 897 a Fb(search\(S\))1220 1096 y(x)88 b(=)f
(nextObject\(S\))1220 1295 y(for)h(each)g(processor)h(p)e(\(between)i
(0)e(and)h(P-1\))1482 1494 y(copy)g(S)f(into)h(S1)1482
1694 y(assign)g(x)f(to)h(p)f(in)h(S1)1482 1893 y(if)f(S1)h(is)f(viable)
i(\(lowerBound\(S1\))g(<)f(current)g(upperBound\))1656
2092 y(if)g(S1)f(is)h(a)f(complete)i(mapping)1918 2291
y(replace)f(current)h(UpperBound)f(with)g(S1)1656 2491
y(else)1831 2690 y(search\(S1\))1482 2889 y(else)g(\(S1)f(is)h(not)g
(viable.)g(Prune)g(\(i.e.)g(ignore\))h(it.)1295 3249
y Fj(The)65 b(recursiv)-5 b(e)65 b(call)e(to)i(searc)-5
b(h)66 b(in)f(this)g(simple)e(recursiv)-5 b(e)65 b(form)-5
b(ulation)63 b(can)j(b)5 b(e)65 b(re-)1046 3448 y(placed)54
b(b)-5 b(y)55 b(\(a\))f(parallel)e(searc)-5 b(h)55 b(via)f(creation)f
(of)h(an)h(ob)9 b(ject)54 b(to)g(searc)-5 b(h)56 b(under)f(S1)g(or)f
(\(b\))1046 3647 y(a)j(b)5 b(est-\014rst)58 b(form)-5
b(ulation,)55 b(where)i(the)g(next)g(b)5 b(est)57 b(state)f(is)h
(selected)f(for)h(exploration)e(at)1046 3847 y(eac)-5
b(h)56 b(stage.)f(Both)g(of)g(these)g(v)-9 b(arian)k(ts)55
b(ha)-5 b(v)g(e)56 b(b)5 b(een)55 b(implemen)-5 b(ted)52
b(in)j(our)h(framew)-5 b(ork.)1046 4046 y Fc(T)-16 b(ermination)55
b(of)h(the)g(algorithm:)48 b Fj(T)-14 b(o)48 b(pro)-5
b(vide)48 b(the)g(\015exible)f(tradeo\013)g(b)5 b(et)-5
b(w)g(een)49 b(deci-)1046 4245 y(sion)59 b(time)e(and)j
(solution-qualit)-5 b(y)-14 b(,)56 b(w)-5 b(e)59 b(limit)c(the)k
(algorithm)e(to)h(a)h(caller-sp)5 b(eci\014ed)57 b(time)1046
4444 y(limit.)65 b(Although)j(this)g(do)5 b(es)69 b(not)g(let)e(the)i
(algorithm)d(pursue)k(all)d(p)5 b(ossible)68 b(states,)h(our)1046
4644 y(optimized)58 b(algorithm)h(still)f(giv)-5 b(es)61
b(the)f(solution)g(quite)g(close)g(to)g(optimal)f(as)i(compared)1046
4843 y(to)55 b(the)g(other)g(algorithms)e(w)-5 b(e)56
b(ha)-5 b(v)g(e)56 b(implemen)-5 b(ted.)1046 5337 y Fc(3.1)192
b(Optimizations)1046 5664 y Fj(The)69 b(follo)-5 b(wing)67
b(optimizations)g(ha)-5 b(v)g(e)69 b(b)5 b(een)69 b(implemen)-5
b(ted)67 b(in)i(the)f(load)h(balancer,)g(im-)1046 5864
y(pro)-5 b(ving)55 b(its)g(sp)5 b(eed)55 b(b)5 b(ey)-5
b(ond)56 b(the)f(basic)g(sc)-5 b(heme)55 b(describ)5
b(ed)55 b(ab)5 b(o)-5 b(v)g(e.)1046 6063 y Fc(Sorting)76
b(ob)11 b(jects)76 b(b)5 b(efore)75 b(assignmen)-5 b(t:)65
b Fj(The)g(ob)9 b(jects)66 b(are)f(ordered)h(in)e(decreasing)1046
6262 y(sequence)j(of)g(their)f(computation)g(costs)i(for)f(assignmen)-5
b(t.)67 b(Th)-5 b(us,)69 b(the)e(hea)-5 b(vier)66 b(ob)9
b(jects)1046 6461 y(are)55 b(assigned)h(at)f(higher)g(lev)-5
b(els)54 b(of)h(the)g(searc)-5 b(h)56 b(tree.)1046 6661
y Fc(Searc)-5 b(h)43 b(ordering:)38 b Fj(In)g(the)f(simple)g(recursiv)
-5 b(e)37 b(form)-5 b(ulation,)36 b(at)i(eac)-5 b(h)38
b(no)5 b(de,)38 b(the)g(c)-5 b(hildren)1046 6860 y(are)57
b(ordered)f(in)g(decreasing)h(order)f(of)h(their)e(lo)-5
b(w)g(erBounds.)57 b(I.e.)g(the)f(c)-5 b(hild)56 b(that)g(assigns)1046
7059 y(the)f(new)g(ob)9 b(ject)55 b(to)g(the)g(least)f(loaded)h(pro)5
b(cessor)56 b(is)f(considered)g(\014rst.)1046 7258 y
Fc(Greedy)66 b(Initial)h(Estimate:)58 b Fj(Instead)h(of)f(starting)f
(from)h(a)g(default)f(initial)e(state)i(and)1046 7458
y(then)39 b(up)5 b(dating)39 b(with)g(the)g(\014rst)h(solution)e
(obtained,)h(thereafter)f(pruning)i(states)f(based)i(on)1046
7657 y(this,)50 b(w)-5 b(e)51 b(ha)-5 b(v)g(e)51 b(used)g(a)g(quic)-5
b(kly)48 b(obtained)i(greedy)g(estimate)f(as)i(the)f(initial)d(lo)-5
b(w)g(er)50 b(b)5 b(ound)1046 7856 y(whic)-5 b(h)55 b(has)h(led)f(to)g
(pruning)g(more)g(states)g(and)h(thereb)-5 b(y)55 b(a)g(faster)g
(implemen)-5 b(tation.)1046 8055 y Fc(Symmetry:)38 b
Fj(If)j(all)e(the)h(pro)5 b(cessors)42 b(ha)-5 b(v)g(e)41
b(iden)-5 b(tical)38 b(comm)-5 b(unication)38 b(and)k(computation)1046
8255 y(capacities,)53 b(then)i(an)-5 b(y)55 b(pro)5 b(cessor)56
b(with)d(no)i(assigned)h(ob)9 b(jects)55 b(is)f(equiv)-9
b(alen)k(t)52 b(to)j(another)1046 8454 y(suc)-5 b(h)57
b(pro)5 b(cessor.)56 b(This)f(reduces)h(the)e(branc)-5
b(hing)56 b(factor)f(of)g(the)g(tree)f(at)h(the)g(top)g(lev)-5
b(els.)1046 8653 y Fc(F)-16 b(uture-Cost)94 b(Estimates:)81
b Fj(Instead)g(of)f(just)h(using)g(the)g(costs)g(so)g(far)g(of)g(the)f
(pro-)1046 8852 y(cessors)85 b(to)e(arriv)-5 b(e)82 b(at)h(the)g(lo)-5
b(w)g(erBound,)84 b(w)-5 b(e)84 b(also)f(use)h(an)f(estimate)f(of)h
(future)g(cost)1046 9052 y(\()p Fb(minRemaining[p])p
Fj(\),)53 b(whic)-5 b(h)50 b(leads)g(to)g(e\013ectiv)-5
b(e)49 b(pruning.)i(When)f(an)h(ob)9 b(ject)50 b(i)g(is)g(b)5
b(eing)1046 9251 y(assigned)47 b(to)g(pro)5 b(cessor)47
b(p,)h(its)e(computation)f(cost)i(is)f(incremen)-5 b(ted)46
b(b)-5 b(y)47 b(the)g(computation)1046 9450 y(cost)57
b(of)g(i.)f(The)i(cost)f(is)f(also)h(up)5 b(dated)57
b(b)-5 b(y)58 b(adding)f(the)f(cost)i(incurred)e(due)i(to)e(messages)
1046 9649 y(sen)-5 b(t)74 b(b)5 b(et)-5 b(w)g(een)73
b(i)g(and)h(ob)9 b(jects)73 b(that)g(ha)-5 b(v)g(e)74
b(already)e(b)5 b(een)74 b(assigned)f(to)h(an)-5 b(y)73
b(pro)5 b(cessor)1046 9849 y(other)54 b(than)g(p.)h(No)-5
b(w,)54 b(in)g(order)h(to)e(get)h(the)g(estimate)e(of)i(the)g(minim)-5
b(um)52 b(remaining)g(cost)p eop
%%Page: 7 7
7 6 bop 1046 897 a Fj(on)60 b(pro)5 b(cessor)60 b(p)g(due)g(to)f(the)g
(additional)e(kno)-5 b(wledge)59 b(of)g(the)g(assignmen)-5
b(t)60 b(of)f(i)g(to)g(p,)h(w)-5 b(e)1046 1096 y(add)68
b(the)e(minim)-5 b(um)65 b(of)i(the)f(computation)g(and)h(comm)-5
b(unication)65 b(costs)i(of)g(eac)-5 b(h)67 b(unas-)1046
1295 y(signed)c(ob)9 b(ject)62 b(j)h(that)f(comm)-5 b(unicates)62
b(with)f(i.)i(This)f(is)h(the)f(additional)f(cost)i(that)f(this)1046
1494 y(pro)5 b(cessor)68 b(will)d(incur,)i(irresp)5 b(ectiv)-5
b(e)65 b(of)i(whether)g(j)g(is)g(assigned)h(to)f(p)h(or)f(not.)h
(\(when)f(j)1046 1694 y(is)52 b(\014nally)e(assigned)i(to)g(some)g(pro)
5 b(cessor,)52 b(this)g(comp)5 b(onen)-5 b(t)51 b(is)h(subtracted)g
(from)f(minRe-)1046 1893 y(maining[p]\).)62 b(The)h(lo)-5
b(w)g(er)62 b(b)5 b(ound)64 b(of)f(a)g(state)g(is)g(then)g(computed)f
(as)i(the)e(maxim)-5 b(um)61 b(of)1046 2092 y(cost[p])56
b(+)f(minRemaining[p])e(o)-5 b(v)g(er)56 b(all)d(P)-14
b(.)1046 2291 y Fc(Greedy)64 b(Heuristic:)58 b Fj(Switc)-5
b(hing)56 b(from)g(using)h(computation)f(cost)h(to)g(comm)-5
b(unication)1046 2491 y(cost)51 b(of)h(ob)9 b(jects)51
b(when)h(the)f(n)-5 b(um)g(b)5 b(er)52 b(of)f(assigned)h(ob)9
b(jects)52 b(exceed)e(L/2)h(while)f(obtaining)1046 2690
y(the)68 b(greedy)f(estimate.)f(This)i(is)g(b)5 b(ecause,)68
b(as)h(w)-5 b(e)68 b(are)g(considering)f(the)h(ob)9 b(jects)68
b(in)f(de-)1046 2889 y(creasing)59 b(order)h(of)f(their)f(computation)f
(cost,)j(w)-5 b(e)59 b(exp)5 b(ect)58 b(the)h(comm)-5
b(unication)57 b(cost)i(to)1046 3088 y(b)5 b(ecome)61
b(a)h(more)f(predominan)-5 b(t)61 b(factor)h(when)g(w)-5
b(e)62 b(come)f(to)h(this.)f(Using)h(this)f(heuristic)1046
3288 y(has)51 b(help)5 b(ed)49 b(in)h(making)f(the)h(greedy)g(solution)
f(a)h(b)5 b(etter)49 b(one)h(to)g(start)g(with)f(and)i(thereb)-5
b(y)1046 3487 y(leads)73 b(to)g(elimination)68 b(of)73
b(a)g(greater)g(n)-5 b(um)g(b)5 b(er)73 b(of)g(states.)g(Other)g
(greedy)g(v)-9 b(arian)k(ts)72 b(are)1046 3686 y(w)-5
b(orth)56 b(exploring)d(in)i(future.)1295 3885 y(The)g(follo)-5
b(wing)54 b(ideas)h(w)-5 b(ere)55 b(also)g(explored,)f(but)i(found)f
(to)g(b)5 b(e)55 b(non-pro)5 b(ductiv)-5 b(e.)1046 4085
y Fc(Narro)g(wing)81 b(the)g(searc)-5 b(h)79 b(space:)70
b Fj(As)h(suggested)g(b)-5 b(y)70 b(W)-14 b(ah)70 b(and)h(Y)-14
b(u)70 b([6],)h(one)f(could)1046 4284 y(narro)-5 b(w)79
b(the)e(searc)-5 b(h)79 b(space)f(b)-5 b(y)78 b(aiming)e(for)i(a)g
(solution)e(guaran)-5 b(teed)79 b(to)e(b)5 b(e)78 b(within)e(a)1046
4483 y(small)65 b(p)5 b(ercen)-5 b(tage)66 b(\(sa)-5
b(y)67 b(2\045\))g(of)g(the)f(optimal.)f(This)h(is)h(accomplished)e(b)
-5 b(y)67 b(comparing)1046 4682 y(the)62 b(lo)-5 b(w)g(er)61
b(b)5 b(ound)63 b(to)e Fb(0.98)88 b(x)f(upperBound)64
b Fj(in)d(the)h(pruning)g(step.)g(In)g(the)f(con)-5 b(text)61
b(of)1046 4882 y(our)68 b(strategy)-14 b(,)67 b(whic)-5
b(h)67 b(uses)i(a)f(\014xed)f(time)f(limit,)e(suc)-5
b(h)69 b(a)e(narro)-5 b(wing)68 b(ma)-5 b(y)67 b(seem)g(to)g(b)5
b(e)1046 5081 y(ev)-5 b(en)55 b(more)f(b)5 b(ene\014cial,)54
b(as)h(it)f(allo)-5 b(ws)54 b(the)h(searc)-5 b(h)56 b(to)f(\\sample")f
(a)h(larger)f(p)5 b(ortion)54 b(of)h(the)1046 5280 y(searc)-5
b(h)53 b(space.)f(Ho)-5 b(w)g(ev)g(er,)52 b(in)f(almost)g(all)f(the)h
(runs)i(w)-5 b(e)52 b(conducted,)g(with)f(using)g(1,)h(2)g(and)1046
5479 y(4)64 b(p)5 b(ercen)-5 b(t)64 b(tolerance,)f(w)-5
b(e)64 b(found)h(no)f(impro)-5 b(v)g(emen)g(t)63 b(in)g(solution)h
(qualit)-5 b(y)61 b(within)i(\014xed)1046 5679 y(time.)1046
5878 y Fc(Re\014nmen)-5 b(t:)77 b Fj(Due)i(to)f(time)f(constrain)-5
b(ts)79 b(applied)e(to)h(the)h(branc)-5 b(h-and-b)5 b(ound)81
b(algo-)1046 6077 y(rithm,)e(it)f(will)g(not)h(necessarily)g(giv)-5
b(e)79 b(the)h(exact)f(optimal)e(solution.)i(W)-14 b(e)80
b(attempted)1046 6276 y(applying)69 b(re\014nemen)-5
b(t)70 b(\(See)g(the)g(p)5 b(erformance)69 b(section)g(for)i(a)f
(description)f(of)h(\\re\014ne-)1046 6476 y(men)-5 b(t"\).)49
b(to)g(the)g(solution)f(found)j(b)-5 b(y)49 b(branc)-5
b(h-and-b)5 b(ound)53 b(so)d(that)f(the)g(e\016ciency)f(of)h(this)1046
6675 y(could)63 b(b)5 b(e)62 b(impro)-5 b(v)g(ed)62 b(further.)h(As)g
(the)g(solutions)f(for)h(the)g(cases)g(w)-5 b(e)63 b(in)-5
b(v)g(estigated)62 b(w)-5 b(ere)1046 6874 y(already)67
b(close)f(enough)j(to)e(the)g(optimal,)e(w)-5 b(e)68
b(observ)-5 b(ed)68 b(that)f(the)h(re\014nemen)-5 b(t)67
b(did)g(not)1046 7073 y(impro)-5 b(v)g(e)54 b(the)h(e\016ciency)f(of)h
(the)g(obtained)g(solution)f(signi\014can)-5 b(tly)-14
b(.)1046 7583 y Ff(4)224 b(P)-6 b(erformance)74 b(Results)1046
7960 y Fj(In)50 b(this)f(section,)g(w)-5 b(e)49 b(compare)g(the)g
(branc)-5 b(h)51 b(and)f(b)5 b(ound)50 b(load)f(balancer)g(with)g(four)
g(other)1046 8160 y(algorithms.)54 b(These)h(algorithms)f(include:)1116
8465 y(1.)83 b Fc(Greedy:)68 b Fj(This)h(algorithm)d(uses)k(the)f
(greedy)f(heuristic)g(of)g(Section)g(3.1,)h(without)1328
8664 y(p)5 b(erforming)54 b(the)h(branc)-5 b(h)56 b(and)g(b)5
b(ound)56 b(searc)-5 b(h.)1116 8858 y(2.)83 b Fc(Random:)56
b Fj(Ob)9 b(jects)55 b(are)g(randomly)f(distributed)g(among)h(the)g
(pro)5 b(cessors.)1116 9052 y(3.)83 b Fc(Greedy-Re\014ne:)55
b Fj(The)i(greedy)g(algorithm)e(is)i(run)g(to)g(obtain)f(an)i(initial)
53 b(distribu-)1328 9251 y(tion,)i(and)g(then)g(a)h(re\014nemen)-5
b(t)54 b(pro)5 b(cedure)55 b(is)g(applied.)f(The)h(re\014nemen)-5
b(t)55 b(pro)5 b(cedure)1328 9450 y(lo)g(oks)45 b(at)h(eac)-5
b(h)47 b(pro)5 b(cessor)46 b(with)f(a)i(load)e(ab)5 b(o)-5
b(v)g(e)46 b(the)g(a)-5 b(v)g(erage)47 b(b)-5 b(y)46
b(a)g(certain)f(threshold,)1328 9649 y(and)73 b(mo)-5
b(v)g(es)72 b(ob)9 b(jects)71 b(from)g(them)g(to)g(underloaded)h(pro)5
b(cessors,)73 b(without)d(making)1328 9849 y(them)55
b(o)-5 b(v)g(erloaded,)55 b(un)-5 b(til)54 b(no)i(further)f(mo)-5
b(v)g(emen)g(t)54 b(is)h(p)5 b(ossible.)p eop
%%Page: 8 8
8 7 bop 1116 897 a Fj(4.)83 b Fc(Random-Re\014ne:)40
b Fj(The)h(re\014nemen)-5 b(t)41 b(pro)5 b(cedure)41
b(is)f(applied)g(to)h(the)f(solution)g(found)1328 1096
y(with)55 b(the)g(random)g(algorithm.)1046 1574 y Fc(4.1)192
b(Load)64 b(balancer)e(p)5 b(erformance)1046 1886 y Fj(T)-14
b(able)60 b(1)i(sho)-5 b(ws)62 b(the)f(results)g(obtained)f(when)h
(runs)h(w)-5 b(ere)61 b(made)g(of)g(the)f(sequen)-5 b(tial)60
b(im-)1046 2085 y(plemen)-5 b(tation)70 b(of)j(the)f(branc)-5
b(h)74 b(and)f(b)5 b(ound)74 b(strategy)e(using)h(a)f(recursiv)-5
b(e)72 b(metho)5 b(d)72 b(for)1046 2284 y(v)-9 b(arious)55
b(cases:)h(In)f(all)f(cases,)i(the)e(same)h(ob)9 b(ject)55
b(graph)h(is)f(used,)h(with)e(100)h(ob)9 b(jects,)55
b(and)1046 2484 y(with)e(a)h(randomly)e(generated)i(computation)e(cost)
h(and)i(comm)-5 b(unication)51 b(v)-5 b(olumes.)53 b(The)1046
2683 y(e\016ciency)64 b(refers)h(to)g(the)g(ratio)f(of)h(the)f(time)f
(that)i(a)g(sequen)-5 b(tial)64 b(execution)f(of)i(the)g(ob-)1046
2882 y(jects)j(w)-5 b(ould)69 b(tak)-5 b(e)68 b(v)-5
b(ersus)70 b(a)f(parallel)e(execution)g(of)h(the)h(same.)g(As)g(can)g
(b)5 b(e)68 b(observ)-5 b(ed,)1046 3081 y(ev)g(en)65
b(when)g(run)g(just)g(to)f(a)h(limited)c(time\(not)i(in)-5
b(v)g(estigating)62 b(the)j(en)-5 b(tire)63 b(searc)-5
b(h)66 b(tree\),)1046 3281 y(the)50 b(branc)-5 b(h)51
b(and)g(b)5 b(ound)51 b(strategy)e(giv)-5 b(es)50 b(the)g(most)f
(e\016cien)-5 b(t)50 b(solution)f(among)g(the)h(algo-)1046
3480 y(rithms)40 b(implemen)-5 b(ted,)38 b(ev)-5 b(en)41
b(though)g(it)f(often)h(pa)-5 b(ys)41 b(a)g(higher)g(comm)-5
b(unication)38 b(o)-5 b(v)g(erhead)1046 3679 y(\(see)55
b(Figure)g(1\).)1295 3878 y(It)c(can)h(b)5 b(e)51 b(inferred)g(from)f
(the)i(results)f(that)g(the)g(e\016ciency)f(of)i(the)f(solution)f(for)i
(eac)-5 b(h)1046 4078 y(algorithm)64 b(decreases)i(as)g(the)g(comm)-5
b(unication)63 b(o)-5 b(v)g(erhead)67 b(increases.)f(This)f(is)h(b)5
b(ecause)1046 4277 y(the)53 b(maxim)-5 b(um)52 b(e\016ciency)g(w)-5
b(e)54 b(can)g(ac)-5 b(hiev)g(e)53 b(ideally)e(itself)g(go)5
b(es)54 b(do)-5 b(wn)55 b(with)d(increase)h(in)1046 4476
y(the)c(comm)-5 b(unication)46 b(o)-5 b(v)g(erhead.)49
b(F)-14 b(or)50 b(all)d(the)h(cases,)i(branc)-5 b(h)50
b(and)f(b)5 b(ound)49 b(giv)-5 b(es)49 b(the)f(b)5 b(est)1046
4675 y(solution)54 b(as)i(compared)f(to)g(the)g(others.)1295
4875 y(W)-14 b(e)53 b(also)h(monitored)e(the)h(qualit)-5
b(y)51 b(of)j(solution)e(as)i(a)g(function)f(of)g(time)e(sp)5
b(en)-5 b(t)54 b(b)-5 b(y)54 b(the)1046 5074 y(load)d(balancer.)h(As)g
(exp)5 b(ected,)50 b(the)i(qualit)-5 b(y)50 b(increases)i(with)e(more)i
(searc)-5 b(h,)53 b(but)f(at)f(some)1046 5273 y(time)67
b(it)i(stabilizes)e(to)i(an)h(optim)-5 b(um)67 b(v)-9
b(alue.)69 b(It)f(can)i(b)5 b(e)69 b(v)-5 b(eri\014ed)69
b(from)f(small)g(problem)1046 5472 y(instances,)c(that)g(the)f(time)f
(b)5 b(ey)-5 b(ond)65 b(this)e(p)5 b(oin)-5 b(t,)63 b(sp)5
b(en)-5 b(t)65 b(on)f(pro)-5 b(ving)64 b(the)g(optimalit)-5
b(y)60 b(of)1046 5672 y(the)j(solution,)g(is)g(h)-5 b(uger)65
b(compared)e(with)f(the)i(time)d(sp)5 b(en)-5 b(t)64
b(in)f(obtaining)g(the)g(solution.)1046 5871 y(This)46
b(is)f(consisten)-5 b(t)46 b(with)e(observ)-9 b(ations)46
b(in)f(the)g(OR)h(comm)-5 b(unit)g(y)44 b(regarding)i(hard)g(searc)-5
b(h)1046 6070 y(problems.)1295 6269 y(W)-14 b(e)76 b(also)g(compared)g
(the)g(e\016ciencies)f(of)h(the)g(solution)f(obtained)h(b)-5
b(y)77 b(considering)1046 6469 y(the)57 b(comm)-5 b(unication)55
b(cost)i(v)-5 b(ersus)59 b(one)e(without)g(considering)f(it.)h(W)-14
b(e)57 b(found)h(that)f(for)g(a)1046 6668 y(run)70 b(with)e
(random-re\014ne)i(strategy)-14 b(,)69 b(while)f(considering)g(comm)-5
b(unication)67 b(cost)j(led)e(to)1046 6867 y(an)77 b(e\016ciency)d(of)i
(ab)5 b(out)76 b(39)g(p)5 b(ercen)-5 b(t,)76 b(not)g(considering)g(it)f
(ga)-5 b(v)g(e)76 b(one)g(with)f(e\016ciency)1046 7066
y(of)c(ab)5 b(out)71 b(33)h(p)5 b(ercen)-5 b(t.)71 b(Th)-5
b(us,)72 b(as)g(w)-5 b(e)72 b(had)g(exp)5 b(ected,)70
b(the)h(e\016ciency)e(increases)j(while)1046 7266 y(comm)-5
b(unication)78 b(cost)h(is)h(considered.)g(W)-14 b(e)80
b(ha)-5 b(v)g(e)80 b(also)g(noticed)f(that)h(the)f(re\014nemen)-5
b(t)1046 7465 y(applied)63 b(after)h(getting)f(a)i(solution,)e(do)5
b(es)65 b(not)f(require)f(m)-5 b(uc)g(h)65 b(computation)e(time,)g(but)
1046 7664 y(can)82 b(giv)-5 b(e)82 b(a)g(m)-5 b(uc)g(h)82
b(b)5 b(etter)81 b(solution)g(in)h(man)-5 b(y)82 b(cases.)h(F)-14
b(or)83 b(example,)d(in)i(most)f(cases)1046 7863 y(the)67
b(re\014ne)g(applied)f(to)h(greedy)f(tak)-5 b(es)67 b(ab)5
b(out)67 b(1sec)h(more)e(and)h(giv)-5 b(es)67 b(an)g(impro)-5
b(v)g(emen)g(t)1046 8063 y(of)62 b(ab)5 b(out)62 b(10p)5
b(ercen)-5 b(t)62 b(on)h(an)g(a)-5 b(v)g(erage.)62 b(F)-14
b(or)63 b(random)g(the)f(time)e(tak)-5 b(en)62 b(is)g(more)g(but)g(the)
1046 8262 y(impro)-5 b(v)g(emen)g(t)36 b(it)g(giv)-5
b(es)37 b(is)g(also)g(more.)g(F)-14 b(or)38 b(example)d(for)j(case)f
(3,)h(it)e(giv)-5 b(es)37 b(an)g(impro)-5 b(v)g(emen)g(t)1046
8461 y(of)55 b(ab)5 b(out)55 b(17)h(p)5 b(ercen)-5 b(t,)55
b(taking)f(ab)5 b(out)55 b(1)g(sec)g(more)g(than)g(pure)h(random.)1046
8939 y Fc(4.2)192 b(P)-5 b(arallel)62 b(Branc)-5 b(h-and-b)5
b(ound)1046 9251 y Fj(W)-14 b(e)56 b(ha)-5 b(v)g(e)57
b(implemen)-5 b(ted)53 b(a)j(parallel)e(v)-5 b(ersion)56
b(of)g(the)f(branc)-5 b(h-and-b)5 b(ound)59 b(algorithm,)54
b(as)1046 9450 y(describ)5 b(ed)58 b(in)g(the)g(section)f(ab)5
b(o)-5 b(v)g(e.)59 b(A)f(\\grain-size")g(parameter)f(is)h(used)h(in)f
(the)g(parallel)1046 9649 y(searc)-5 b(h,)52 b(whic)-5
b(h)52 b(is)f(the)g(depth)g(of)h(the)f(no)5 b(de)51 b(in)g(the)g(searc)
-5 b(h)52 b(tree)f(b)5 b(elo)-5 b(w)51 b(whic)-5 b(h)51
b(the)g(searc)-5 b(h)1046 9849 y(switc)g(hes)78 b(from)g(parallel\(spa)
-5 b(wning)76 b(ob)9 b(jects\))78 b(to)g(sequen)-5 b(tial\(plain)75
b(recursiv)-5 b(e\))78 b(mo)5 b(de.)p eop
%%Page: 9 9
9 8 bop 1600 1026 4656 7 v 1597 1209 7 183 v 1624 1154
a Fh(Case)50 b(#)p 2139 1209 V 2139 1209 V 47 w(Pro)t(cs.)p
2604 1209 V 45 w(Comm.)p 3136 1209 V 3169 1209 V 79 w(Greedy)p
3698 1209 V 48 w(Greedy-)p 4280 1209 V 47 w(Random)p
4892 1209 V 47 w(Random-)p 5555 1209 V 47 w(Branc)l(h)h(&)p
6252 1209 V 1597 1391 V 2139 1391 V 2603 1391 V 2719
1337 a(Cost)p 3136 1391 V 3169 1391 V 3699 1391 V 755
w(Re\014ne)p 4280 1391 V 4892 1391 V 815 w(Re\014ne)p
5555 1391 V 250 w(Bound)p 6252 1391 V 1600 1398 4656
7 v 1600 1431 V 1597 1614 7 183 v 1833 1559 a(1)p 2139
1614 V 596 w(9)p 2603 1614 V 456 w(0)p 3136 1614 V 3169
1614 V 185 w(99.7)p 3699 1614 V 281 w(99.7)p 4280 1614
V 323 w(69.1)p 4892 1614 V 363 w(69.1)p 5555 1614 V 407
w(99.8)p 6252 1614 V 1600 1620 4656 7 v 1597 1803 7 183
v 1833 1748 a(2)p 2139 1803 V 519 w(20)p 2603 1803 V
456 w(0)p 3136 1803 V 3169 1803 V 185 w(98.4)p 3699 1803
V 281 w(98.4)p 4280 1803 V 323 w(57.5)p 4892 1803 V 363
w(57.5)p 5555 1803 V 407 w(99.4)p 6252 1803 V 1600 1810
4656 7 v 1597 1992 7 183 v 1833 1938 a(3)p 2139 1992
V 596 w(9)p 2603 1992 V 302 w(120)p 3136 1992 V 3169
1992 V 185 w(51.4)p 3699 1992 V 281 w(55.6)p 4280 1992
V 323 w(58.5)p 4892 1992 V 363 w(68.6)p 5555 1992 V 407
w(81.0)p 6252 1992 V 1600 1999 4656 7 v 1597 2182 7 183
v 1833 2127 a(4)p 2139 2182 V 519 w(20)p 2603 2182 V
302 w(120)p 3136 2182 V 3169 2182 V 185 w(28.8)p 3699
2182 V 281 w(31.7)p 4280 2182 V 323 w(50.6)p 4892 2182
V 363 w(67.7)p 5555 2182 V 407 w(78.4)p 6252 2182 V 1600
2188 4656 7 v 1597 2371 7 183 v 1833 2316 a(5)p 2139
2371 V 596 w(9)p 2603 2371 V 302 w(250)p 3136 2371 V
3169 2371 V 185 w(34.4)p 3699 2371 V 281 w(37.0)p 4280
2371 V 323 w(48.4)p 4892 2371 V 363 w(55.9)p 5555 2371
V 407 w(64.4)p 6252 2371 V 1600 2378 4656 7 v 1597 2560
7 183 v 1833 2505 a(6)p 2139 2560 V 519 w(20)p 2603 2560
V 302 w(250)p 3136 2560 V 3169 2560 V 185 w(26.3)p 3699
2560 V 281 w(28.5)p 4280 2560 V 323 w(41.2)p 4892 2560
V 363 w(44.7)p 5555 2560 V 407 w(60.1)p 6252 2560 V 1600
2567 4656 7 v 1597 2750 7 183 v 1833 2695 a(7)p 2139
2750 V 596 w(9)p 2603 2750 V 302 w(300)p 3136 2750 V
3169 2750 V 185 w(37.1)p 3699 2750 V 281 w(40.9)p 4280
2750 V 323 w(46.0)p 4892 2750 V 363 w(50.9)p 5555 2750
V 407 w(60.3)p 6252 2750 V 1600 2756 4656 7 v 1597 2939
7 183 v 1833 2884 a(8)p 2139 2939 V 519 w(20)p 2603 2939
V 302 w(300)p 3136 2939 V 3169 2939 V 185 w(26.7)p 3699
2939 V 281 w(30.0)p 4280 2939 V 323 w(39.1)p 4892 2939
V 363 w(42.1)p 5555 2939 V 407 w(56.2)p 6252 2939 V 1600
2945 4656 7 v 1597 3128 7 183 v 1833 3073 a(9)p 2139
3128 V 596 w(9)p 2603 3128 V 302 w(400)p 3136 3128 V
3169 3128 V 185 w(44.2)p 3699 3128 V 281 w(52.2)p 4280
3128 V 323 w(41.8)p 4892 3128 V 363 w(50.5)p 5555 3128
V 407 w(54.6)p 6252 3128 V 1600 3135 4656 7 v 1597 3317
7 183 v 1794 3263 a(10)p 2139 3317 V 481 w(20)p 2603
3317 V 302 w(400)p 3136 3317 V 3169 3317 V 185 w(21.2)p
3699 3317 V 281 w(24.0)p 4280 3317 V 323 w(35.4)p 4892
3317 V 363 w(36.9)p 5555 3317 V 407 w(49.6)p 6252 3317
V 1600 3324 4656 7 v 1597 3507 7 183 v 1794 3452 a(11)p
2139 3507 V 558 w(9)p 2603 3507 V 302 w(500)p 3136 3507
V 3169 3507 V 185 w(26.9)p 3699 3507 V 281 w(28.9)p 4280
3507 V 323 w(38.4)p 4892 3507 V 363 w(46.4)p 5555 3507
V 407 w(49.5)p 6252 3507 V 1600 3513 4656 7 v 1597 3696
7 183 v 1794 3641 a(12)p 2139 3696 V 481 w(20)p 2603
3696 V 302 w(500)p 3136 3696 V 3169 3696 V 185 w(27.4)p
3699 3696 V 281 w(30.0)p 4280 3696 V 323 w(32.3)p 4892
3696 V 363 w(42.3)p 5555 3696 V 407 w(43.7)p 6252 3696
V 1600 3703 4656 7 v 1597 3885 7 183 v 1794 3830 a(13)p
2139 3885 V 558 w(9)p 2603 3885 V 302 w(600)p 3136 3885
V 3169 3885 V 185 w(29.9)p 3699 3885 V 281 w(34.7)p 4280
3885 V 323 w(35.4)p 4892 3885 V 363 w(41.7)p 5555 3885
V 407 w(44.3)p 6252 3885 V 1600 3892 4656 7 v 1597 4075
7 183 v 1794 4020 a(14)p 2139 4075 V 481 w(20)p 2603
4075 V 302 w(600)p 3136 4075 V 3169 4075 V 185 w(13.6)p
3699 4075 V 281 w(14.2)p 4280 4075 V 323 w(29.6)p 4892
4075 V 363 w(38.0)p 5555 4075 V 407 w(39.5)p 6252 4075
V 1600 4081 4656 7 v 1597 4264 7 183 v 1794 4209 a(15)p
2139 4264 V 558 w(9)p 2603 4264 V 302 w(700)p 3136 4264
V 3169 4264 V 185 w(20.9)p 3699 4264 V 281 w(22.2)p 4280
4264 V 323 w(32.9)p 4892 4264 V 363 w(38.4)p 5555 4264
V 407 w(41.1)p 6252 4264 V 1600 4270 4656 7 v 3270 4557
a Fg(T)-15 b(able)58 b(1.)52 b Fh(E\016ciency)1228 9016
y @beginspecial 0 @llx 177 @lly 661 @urx 612 @ury 3240
@rwi @setspecial
%%BeginDocument: comm_average.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /Home/p1/brunner/Papers/papers-nocvs/branchAndBound99/comm_average2.eps
%%Creator: Tailor
%%CreationDate: Fri Jun  4 16:15:09 1999
%%For: brunner
%%DocumentFonts: (atend)
%%pages: 0 0
%%BoundingBox: 0 177 661 612
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

%%BeginResource: procset (Tailor 2.0)
/TailorDict 10 dict def TailorDict begin
/TailorGroupBegin {pop} def /TailorGroupEnd {} def
/TailorBlockBegin {pop pop pop} def /TailorBlockEnd {} def
/TailorSetUniformStroke {pop} def
/setoverprint where {pop} {/setoverprint {pop} def} ifelse
end
%%EndResource

gsave
-20 -54.999969 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
TailorDict begin
%%EndSetup
gsave
0 0 792 612 rectclip
0 0 792 612 rectclip
gsave
0 setgray
1 setlinewidth
(* Title: comm_average.xls\012* Creator: Windows NT 4.0\012* Creation date: 16:37 5/31/1999\012) TailorGroupBegin
[1 0 0 1 0 0] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
0.754006 nxsetgray
gsave
newpath
systemdict
begin
1404 1134 4675 3749 setbbox
1404 1134 moveto
4675 1134 lineto
4675 3749 lineto
1404 3749 lineto
1404 1134 lineto
closepath
end
eofill
grestore
(* Group Created Automatically *) TailorGroupBegin
gsave
newpath
systemdict
begin
1404 3226 4675 3227 setbbox
1404 3226 moveto
4675 3226 lineto
4675 3227 lineto
1404 3227 lineto
closepath
end
eoclip
+0 nxsetgray
gsave
newpath
systemdict
begin
1404 3226 4675 3226 setbbox
1404 3226 moveto
4675 3226 lineto
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
newpath
systemdict
begin
1404 2703 4675 2704 setbbox
1404 2703 moveto
4675 2703 lineto
4675 2704 lineto
1404 2704 lineto
closepath
end
eoclip
+0 nxsetgray
gsave
newpath
systemdict
begin
1404 2703 4675 2703 setbbox
1404 2703 moveto
4675 2703 lineto
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
newpath
systemdict
begin
1404 2180 4675 2181 setbbox
1404 2180 moveto
4675 2180 lineto
4675 2181 lineto
1404 2181 lineto
closepath
end
eoclip
+0 nxsetgray
gsave
newpath
systemdict
begin
1404 2180 4675 2180 setbbox
1404 2180 moveto
4675 2180 lineto
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
newpath
systemdict
begin
1404 1657 4675 1658 setbbox
1404 1657 moveto
4675 1657 lineto
4675 1658 lineto
1404 1658 lineto
closepath
end
eoclip
+0 nxsetgray
gsave
newpath
systemdict
begin
1404 1657 4675 1657 setbbox
1404 1657 moveto
4675 1657 lineto
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
newpath
systemdict
begin
1404 1134 4675 1135 setbbox
1404 1134 moveto
4675 1134 lineto
4675 1135 lineto
1404 1135 lineto
closepath
end
eoclip
+0 nxsetgray
gsave
newpath
systemdict
begin
1404 1134 4675 1134 setbbox
1404 1134 moveto
4675 1134 lineto
end
stroke
grestore
grestore
TailorGroupEnd
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0.5 nxsetgray
8 setlinewidth
1 setlinecap
gsave
newpath
systemdict
begin
1045 642 4316 3257 setbbox
1045 642 moveto
4316 642 lineto
4316 3257 lineto
1045 3257 lineto
closepath
end
stroke
grestore
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
1815 3434 1949 3749 setbbox
1815 3434 moveto
1949 3434 lineto
1949 3749 lineto
1815 3749 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
1865 3484 1898 3749 setbbox
1865 3484 moveto
1898 3484 lineto
1898 3749 lineto
1865 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1506 2992 1539 3257 setbbox
1506 2992 moveto
1539 2992 lineto
1539 3257 lineto
1506 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2033 3339 2167 3749 setbbox
2033 3339 moveto
2167 3339 lineto
2167 3749 lineto
2033 3749 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
2083 3389 2116 3749 setbbox
2083 3389 moveto
2116 3389 lineto
2116 3749 lineto
2083 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1724 2897 1757 3257 setbbox
1724 2897 moveto
1757 2897 lineto
1757 3257 lineto
1724 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2251 3055 2385 3749 setbbox
2251 3055 moveto
2385 3055 lineto
2385 3749 lineto
2251 3749 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
2301 3105 2334 3749 setbbox
2301 3105 moveto
2334 3105 lineto
2334 3749 lineto
2301 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1942 2613 1975 3257 setbbox
1942 2613 moveto
1975 2613 lineto
1975 3257 lineto
1942 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2469 3381 2603 3749 setbbox
2469 3381 moveto
2603 3381 lineto
2603 3749 lineto
2469 3749 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
2519 3431 2552 3749 setbbox
2519 3431 moveto
2552 3431 lineto
2552 3749 lineto
2519 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2160 2939 2193 3257 setbbox
2160 2939 moveto
2193 2939 lineto
2193 3257 lineto
2160 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2687 2945 2821 3749 setbbox
2687 2945 moveto
2821 2945 lineto
2821 3749 lineto
2687 3749 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
2737 2995 2770 3749 setbbox
2737 2995 moveto
2770 2995 lineto
2770 3749 lineto
2737 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2378 2503 2411 3257 setbbox
2378 2503 moveto
2411 2503 lineto
2411 3257 lineto
2378 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2905 3321 3039 3749 setbbox
2905 3321 moveto
3039 3321 lineto
3039 3749 lineto
2905 3749 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
2955 3371 2988 3749 setbbox
2955 3371 moveto
2988 3371 lineto
2988 3749 lineto
2955 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2596 2879 2629 3257 setbbox
2596 2879 moveto
2629 2879 lineto
2629 3257 lineto
2596 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3124 2697 3258 3749 setbbox
3124 2697 moveto
3258 2697 lineto
3258 3749 lineto
3124 3749 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
3174 2747 3207 3749 setbbox
3174 2747 moveto
3207 2747 lineto
3207 3749 lineto
3174 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2815 2255 2848 3257 setbbox
2815 2255 moveto
2848 2255 lineto
2848 3257 lineto
2815 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3342 3195 3476 3749 setbbox
3342 3195 moveto
3476 3195 lineto
3476 3749 lineto
3342 3749 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
3392 3245 3425 3749 setbbox
3392 3245 moveto
3425 3245 lineto
3425 3749 lineto
3392 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3033 2753 3066 3257 setbbox
3033 2753 moveto
3066 2753 lineto
3066 3257 lineto
3033 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3560 2502 3694 3749 setbbox
3560 2502 moveto
3694 2502 lineto
3694 3749 lineto
3560 3749 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
3610 2552 3643 3749 setbbox
3610 2552 moveto
3643 2552 lineto
3643 3749 lineto
3610 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3251 2060 3284 3257 setbbox
3251 2060 moveto
3284 2060 lineto
3284 3257 lineto
3251 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3778 3074 3912 3749 setbbox
3778 3074 moveto
3912 3074 lineto
3912 3749 lineto
3778 3749 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
3828 3124 3861 3749 setbbox
3828 3124 moveto
3861 3124 lineto
3861 3749 lineto
3828 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3469 2632 3502 3257 setbbox
3469 2632 moveto
3502 2632 lineto
3502 3257 lineto
3469 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3996 2238 4130 3749 setbbox
3996 2238 moveto
4130 2238 lineto
4130 3749 lineto
3996 3749 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
4046 2288 4079 3749 setbbox
4046 2288 moveto
4079 2288 lineto
4079 3749 lineto
4046 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3687 1796 3720 3257 setbbox
3687 1796 moveto
3720 1796 lineto
3720 3257 lineto
3687 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
4214 2978 4348 3749 setbbox
4214 2978 moveto
4348 2978 lineto
4348 3749 lineto
4214 3749 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
4264 3028 4297 3749 setbbox
4264 3028 moveto
4297 3028 lineto
4297 3749 lineto
4264 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3905 2536 3938 3257 setbbox
3905 2536 moveto
3938 2536 lineto
3938 3257 lineto
3905 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
4432 2864 4566 3749 setbbox
4432 2864 moveto
4566 2864 lineto
4566 3749 lineto
4432 3749 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
4482 2914 4515 3749 setbbox
4482 2914 moveto
4515 2914 lineto
4515 3749 lineto
4482 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4123 2422 4156 3257 setbbox
4123 2422 moveto
4156 2422 lineto
4156 3257 lineto
4123 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
1849 3422 1982 3749 setbbox
1849 3422 moveto
1982 3422 lineto
1982 3749 lineto
1849 3749 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
1899 3472 1931 3749 setbbox
1899 3472 moveto
1931 3472 lineto
1931 3749 lineto
1899 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1540 2980 1572 3257 setbbox
1540 2980 moveto
1572 2980 lineto
1572 3257 lineto
1540 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2067 3560 2200 3749 setbbox
2067 3560 moveto
2200 3560 lineto
2200 3749 lineto
2067 3749 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
2117 3610 2149 3749 setbbox
2117 3610 moveto
2149 3610 lineto
2149 3749 lineto
2117 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1758 3118 1790 3257 setbbox
1758 3118 moveto
1790 3118 lineto
1790 3257 lineto
1758 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2285 3012 2418 3749 setbbox
2285 3012 moveto
2418 3012 lineto
2418 3749 lineto
2285 3749 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
2335 3062 2367 3749 setbbox
2335 3062 moveto
2367 3062 lineto
2367 3749 lineto
2335 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1976 2570 2008 3257 setbbox
1976 2570 moveto
2008 2570 lineto
2008 3257 lineto
1976 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2503 3371 2636 3749 setbbox
2503 3371 moveto
2636 3371 lineto
2636 3749 lineto
2503 3749 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
2553 3421 2585 3749 setbbox
2553 3421 moveto
2585 3421 lineto
2585 3749 lineto
2553 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2194 2929 2226 3257 setbbox
2194 2929 moveto
2226 2929 lineto
2226 3257 lineto
2194 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2721 2893 2854 3749 setbbox
2721 2893 moveto
2854 2893 lineto
2854 3749 lineto
2721 3749 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
2771 2943 2803 3749 setbbox
2771 2943 moveto
2803 2943 lineto
2803 3749 lineto
2771 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2412 2451 2444 3257 setbbox
2412 2451 moveto
2444 2451 lineto
2444 3257 lineto
2412 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2939 3314 3073 3749 setbbox
2939 3314 moveto
3073 3314 lineto
3073 3749 lineto
2939 3749 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
2989 3364 3022 3749 setbbox
2989 3364 moveto
3022 3364 lineto
3022 3749 lineto
2989 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2630 2872 2663 3257 setbbox
2630 2872 moveto
2663 2872 lineto
2663 3257 lineto
2630 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3158 2646 3291 3749 setbbox
3158 2646 moveto
3291 2646 lineto
3291 3749 lineto
3158 3749 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
3208 2696 3240 3749 setbbox
3208 2696 moveto
3240 2696 lineto
3240 3749 lineto
3208 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2849 2204 2881 3257 setbbox
2849 2204 moveto
2881 2204 lineto
2881 3257 lineto
2849 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3376 3187 3509 3749 setbbox
3376 3187 moveto
3509 3187 lineto
3509 3749 lineto
3376 3749 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
3426 3237 3458 3749 setbbox
3426 3237 moveto
3458 3237 lineto
3458 3749 lineto
3426 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3067 2745 3099 3257 setbbox
3067 2745 moveto
3099 2745 lineto
3099 3257 lineto
3067 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3594 2436 3727 3749 setbbox
3594 2436 moveto
3727 2436 lineto
3727 3749 lineto
3594 3749 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
3644 2486 3676 3749 setbbox
3644 2486 moveto
3676 2486 lineto
3676 3749 lineto
3644 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3285 1994 3317 3257 setbbox
3285 1994 moveto
3317 1994 lineto
3317 3257 lineto
3285 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3812 3060 3945 3749 setbbox
3812 3060 moveto
3945 3060 lineto
3945 3749 lineto
3812 3749 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
3862 3110 3894 3749 setbbox
3862 3110 moveto
3894 3110 lineto
3894 3749 lineto
3862 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3503 2618 3535 3257 setbbox
3503 2618 moveto
3535 2618 lineto
3535 3257 lineto
3503 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
4030 2198 4163 3749 setbbox
4030 2198 moveto
4163 2198 lineto
4163 3749 lineto
4030 3749 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
4080 2248 4112 3749 setbbox
4080 2248 moveto
4112 2248 lineto
4112 3749 lineto
4080 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3721 1756 3753 3257 setbbox
3721 1756 moveto
3753 1756 lineto
3753 3257 lineto
3721 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
4248 2961 4381 3749 setbbox
4248 2961 moveto
4381 2961 lineto
4381 3749 lineto
4248 3749 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
4298 3011 4330 3749 setbbox
4298 3011 moveto
4330 3011 lineto
4330 3749 lineto
4298 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3939 2519 3971 3257 setbbox
3939 2519 moveto
3971 2519 lineto
3971 3257 lineto
3939 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
4466 2864 4599 3749 setbbox
4466 2864 moveto
4599 2864 lineto
4599 3749 lineto
4466 3749 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
4516 2914 4548 3749 setbbox
4516 2914 moveto
4548 2914 lineto
4548 3749 lineto
4516 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4157 2422 4189 3257 setbbox
4157 2422 moveto
4189 2422 lineto
4189 3257 lineto
4157 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
1882 3343 2016 3749 setbbox
1882 3343 moveto
2016 3343 lineto
2016 3749 lineto
1882 3749 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
1932 3393 1965 3749 setbbox
1932 3393 moveto
1965 3393 lineto
1965 3749 lineto
1932 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1573 2901 1606 3257 setbbox
1573 2901 moveto
1606 2901 lineto
1606 3257 lineto
1573 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2100 3526 2234 3749 setbbox
2100 3526 moveto
2234 3526 lineto
2234 3749 lineto
2100 3749 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
2150 3576 2183 3749 setbbox
2150 3576 moveto
2183 3576 lineto
2183 3749 lineto
2150 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1791 3084 1824 3257 setbbox
1791 3084 moveto
1824 3084 lineto
1824 3257 lineto
1791 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2318 2854 2452 3749 setbbox
2318 2854 moveto
2452 2854 lineto
2452 3749 lineto
2318 3749 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
2368 2904 2401 3749 setbbox
2368 2904 moveto
2401 2904 lineto
2401 3749 lineto
2368 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2009 2412 2042 3257 setbbox
2009 2412 moveto
2042 2412 lineto
2042 3257 lineto
2009 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2536 3288 2670 3749 setbbox
2536 3288 moveto
2670 3288 lineto
2670 3749 lineto
2536 3749 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
2586 3338 2619 3749 setbbox
2586 3338 moveto
2619 3338 lineto
2619 3749 lineto
2586 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2227 2846 2260 3257 setbbox
2227 2846 moveto
2260 2846 lineto
2260 3257 lineto
2227 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2754 2707 2888 3749 setbbox
2754 2707 moveto
2888 2707 lineto
2888 3749 lineto
2754 3749 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
2804 2757 2837 3749 setbbox
2804 2757 moveto
2837 2757 lineto
2837 3749 lineto
2804 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2445 2265 2478 3257 setbbox
2445 2265 moveto
2478 2265 lineto
2478 3257 lineto
2445 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2973 3216 3106 3749 setbbox
2973 3216 moveto
3106 3216 lineto
3106 3749 lineto
2973 3749 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
3023 3266 3055 3749 setbbox
3023 3266 moveto
3055 3266 lineto
3055 3749 lineto
3023 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2664 2774 2696 3257 setbbox
2664 2774 moveto
2696 2774 lineto
2696 3257 lineto
2664 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3191 2414 3325 3749 setbbox
3191 2414 moveto
3325 2414 lineto
3325 3749 lineto
3191 3749 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
3241 2464 3274 3749 setbbox
3241 2464 moveto
3274 2464 lineto
3274 3749 lineto
3241 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2882 1972 2915 3257 setbbox
2882 1972 moveto
2915 1972 lineto
2915 3257 lineto
2882 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3409 3074 3543 3749 setbbox
3409 3074 moveto
3543 3074 lineto
3543 3749 lineto
3409 3749 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
3459 3124 3492 3749 setbbox
3459 3124 moveto
3492 3124 lineto
3492 3749 lineto
3459 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3100 2632 3133 3257 setbbox
3100 2632 moveto
3133 2632 lineto
3133 3257 lineto
3100 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3627 2120 3761 3749 setbbox
3627 2120 moveto
3761 2120 lineto
3761 3749 lineto
3627 3749 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
3677 2170 3710 3749 setbbox
3677 2170 moveto
3710 2170 lineto
3710 3749 lineto
3677 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3318 1678 3351 3257 setbbox
3318 1678 moveto
3351 1678 lineto
3351 3257 lineto
3318 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3845 2931 3979 3749 setbbox
3845 2931 moveto
3979 2931 lineto
3979 3749 lineto
3845 3749 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
3895 2981 3928 3749 setbbox
3895 2981 moveto
3928 2981 lineto
3928 3749 lineto
3895 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3536 2489 3569 3257 setbbox
3536 2489 moveto
3569 2489 lineto
3569 3257 lineto
3536 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
4063 1827 4197 3749 setbbox
4063 1827 moveto
4197 1827 lineto
4197 3749 lineto
4063 3749 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
4113 1877 4146 3749 setbbox
4113 1877 moveto
4146 1877 lineto
4146 3749 lineto
4113 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3754 1385 3787 3257 setbbox
3754 1385 moveto
3787 1385 lineto
3787 3257 lineto
3754 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
4281 2788 4415 3749 setbbox
4281 2788 moveto
4415 2788 lineto
4415 3749 lineto
4281 3749 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
4331 2838 4364 3749 setbbox
4331 2838 moveto
4364 2838 lineto
4364 3749 lineto
4331 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3972 2346 4005 3257 setbbox
3972 2346 moveto
4005 2346 lineto
4005 3257 lineto
3972 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
4499 1640 4633 3749 setbbox
4499 1640 moveto
4633 1640 lineto
4633 3749 lineto
4499 3749 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
4549 1690 4582 3749 setbbox
4549 1690 moveto
4582 1690 lineto
4582 3749 lineto
4549 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4190 1198 4223 3257 setbbox
4190 1198 moveto
4223 1198 lineto
4223 3257 lineto
4190 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
1916 3341 2049 3749 setbbox
1916 3341 moveto
2049 3341 lineto
2049 3749 lineto
1916 3749 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
1966 3391 1998 3749 setbbox
1966 3391 moveto
1998 3391 lineto
1998 3749 lineto
1966 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1607 2899 1639 3257 setbbox
1607 2899 moveto
1639 2899 lineto
1639 3257 lineto
1607 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2134 3564 2267 3749 setbbox
2134 3564 moveto
2267 3564 lineto
2267 3749 lineto
2134 3749 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
2184 3614 2216 3749 setbbox
2184 3614 moveto
2216 3614 lineto
2216 3749 lineto
2184 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1825 3122 1857 3257 setbbox
1825 3122 moveto
1857 3122 lineto
1857 3257 lineto
1825 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2352 2850 2485 3749 setbbox
2352 2850 moveto
2485 2850 lineto
2485 3749 lineto
2352 3749 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
2402 2900 2434 3749 setbbox
2402 2900 moveto
2434 2900 lineto
2434 3749 lineto
2402 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2043 2408 2075 3257 setbbox
2043 2408 moveto
2075 2408 lineto
2075 3257 lineto
2043 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2570 3287 2703 3749 setbbox
2570 3287 moveto
2703 3287 lineto
2703 3749 lineto
2570 3749 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
2620 3337 2652 3749 setbbox
2620 3337 moveto
2652 3337 lineto
2652 3749 lineto
2620 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2261 2845 2293 3257 setbbox
2261 2845 moveto
2293 2845 lineto
2293 3257 lineto
2261 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2788 2702 2921 3749 setbbox
2788 2702 moveto
2921 2702 lineto
2921 3749 lineto
2788 3749 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
2838 2752 2870 3749 setbbox
2838 2752 moveto
2870 2752 lineto
2870 3749 lineto
2838 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2479 2260 2511 3257 setbbox
2479 2260 moveto
2511 2260 lineto
2511 3257 lineto
2479 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3006 3215 3140 3749 setbbox
3006 3215 moveto
3140 3215 lineto
3140 3749 lineto
3006 3749 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
3056 3265 3089 3749 setbbox
3056 3265 moveto
3089 3265 lineto
3089 3749 lineto
3056 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2697 2773 2730 3257 setbbox
2697 2773 moveto
2730 2773 lineto
2730 3257 lineto
2697 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3225 2400 3358 3749 setbbox
3225 2400 moveto
3358 2400 lineto
3358 3749 lineto
3225 3749 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
3275 2450 3307 3749 setbbox
3275 2450 moveto
3307 2450 lineto
3307 3749 lineto
3275 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2916 1958 2948 3257 setbbox
2916 1958 moveto
2948 1958 lineto
2948 3257 lineto
2916 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3443 3073 3576 3749 setbbox
3443 3073 moveto
3576 3073 lineto
3576 3749 lineto
3443 3749 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
3493 3123 3525 3749 setbbox
3493 3123 moveto
3525 3123 lineto
3525 3749 lineto
3493 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3134 2631 3166 3257 setbbox
3134 2631 moveto
3166 2631 lineto
3166 3257 lineto
3134 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3661 2099 3794 3749 setbbox
3661 2099 moveto
3794 2099 lineto
3794 3749 lineto
3661 3749 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
3711 2149 3743 3749 setbbox
3711 2149 moveto
3743 2149 lineto
3743 3749 lineto
3711 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3352 1657 3384 3257 setbbox
3352 1657 moveto
3384 1657 lineto
3384 3257 lineto
3352 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3879 2933 4012 3749 setbbox
3879 2933 moveto
4012 2933 lineto
4012 3749 lineto
3879 3749 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
3929 2983 3961 3749 setbbox
3929 2983 moveto
3961 2983 lineto
3961 3749 lineto
3929 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3570 2491 3602 3257 setbbox
3570 2491 moveto
3602 2491 lineto
3602 3257 lineto
3570 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
4097 1802 4230 3749 setbbox
4097 1802 moveto
4230 1802 lineto
4230 3749 lineto
4097 3749 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
4147 1852 4179 3749 setbbox
4147 1852 moveto
4179 1852 lineto
4179 3749 lineto
4147 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3788 1360 3820 3257 setbbox
3788 1360 moveto
3820 1360 lineto
3820 3257 lineto
3788 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
4315 2774 4448 3749 setbbox
4315 2774 moveto
4448 2774 lineto
4448 3749 lineto
4315 3749 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
4365 2824 4397 3749 setbbox
4365 2824 moveto
4397 2824 lineto
4397 3749 lineto
4365 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4006 2332 4038 3257 setbbox
4006 2332 moveto
4038 2332 lineto
4038 3257 lineto
4006 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
4533 1640 4666 3749 setbbox
4533 1640 moveto
4666 1640 lineto
4666 3749 lineto
4533 3749 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
4583 1690 4615 3749 setbbox
4583 1690 moveto
4615 1690 lineto
4615 3749 lineto
4583 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4224 1198 4256 3257 setbbox
4224 1198 moveto
4256 1198 lineto
4256 3257 lineto
4224 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
1949 3339 2083 3749 setbbox
1949 3339 moveto
2083 3339 lineto
2083 3749 lineto
1949 3749 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
1999 3389 2032 3749 setbbox
1999 3389 moveto
2032 3389 lineto
2032 3749 lineto
1999 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1640 2897 1673 3257 setbbox
1640 2897 moveto
1673 2897 lineto
1673 3257 lineto
1640 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2167 3519 2301 3749 setbbox
2167 3519 moveto
2301 3519 lineto
2301 3749 lineto
2167 3749 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
2217 3569 2250 3749 setbbox
2217 3569 moveto
2250 3569 lineto
2250 3749 lineto
2217 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1858 3077 1891 3257 setbbox
1858 3077 moveto
1891 3077 lineto
1891 3257 lineto
1858 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2385 2856 2519 3749 setbbox
2385 2856 moveto
2519 2856 lineto
2519 3749 lineto
2385 3749 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
2435 2906 2468 3749 setbbox
2435 2906 moveto
2468 2906 lineto
2468 3749 lineto
2435 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2076 2414 2109 3257 setbbox
2076 2414 moveto
2109 2414 lineto
2109 3257 lineto
2076 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2603 3281 2737 3749 setbbox
2603 3281 moveto
2737 3281 lineto
2737 3749 lineto
2603 3749 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
2653 3331 2686 3749 setbbox
2653 3331 moveto
2686 3331 lineto
2686 3749 lineto
2653 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2294 2839 2327 3257 setbbox
2294 2839 moveto
2327 2839 lineto
2327 3257 lineto
2294 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
2821 2702 2955 3749 setbbox
2821 2702 moveto
2955 2702 lineto
2955 3749 lineto
2821 3749 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
2871 2752 2904 3749 setbbox
2871 2752 moveto
2904 2752 lineto
2904 3749 lineto
2871 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2512 2260 2545 3257 setbbox
2512 2260 moveto
2545 2260 lineto
2545 3257 lineto
2512 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3040 3204 3174 3749 setbbox
3040 3204 moveto
3174 3204 lineto
3174 3749 lineto
3040 3749 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
3090 3254 3123 3749 setbbox
3090 3254 moveto
3123 3254 lineto
3123 3749 lineto
3090 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2731 2762 2764 3257 setbbox
2731 2762 moveto
2764 2762 lineto
2764 3257 lineto
2731 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3258 2438 3392 3749 setbbox
3258 2438 moveto
3392 2438 lineto
3392 3749 lineto
3258 3749 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
3308 2488 3341 3749 setbbox
3308 2488 moveto
3341 2488 lineto
3341 3749 lineto
3308 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2949 1996 2982 3257 setbbox
2949 1996 moveto
2982 1996 lineto
2982 3257 lineto
2949 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3476 3061 3610 3749 setbbox
3476 3061 moveto
3610 3061 lineto
3610 3749 lineto
3476 3749 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
3526 3111 3559 3749 setbbox
3526 3111 moveto
3559 3111 lineto
3559 3749 lineto
3526 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3167 2619 3200 3257 setbbox
3167 2619 moveto
3200 2619 lineto
3200 3257 lineto
3167 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3694 2189 3828 3749 setbbox
3694 2189 moveto
3828 2189 lineto
3828 3749 lineto
3694 3749 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
3744 2239 3777 3749 setbbox
3744 2239 moveto
3777 2239 lineto
3777 3749 lineto
3744 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3385 1747 3418 3257 setbbox
3385 1747 moveto
3418 1747 lineto
3418 3257 lineto
3385 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
3912 2904 4046 3749 setbbox
3912 2904 moveto
4046 2904 lineto
4046 3749 lineto
3912 3749 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
3962 2954 3995 3749 setbbox
3962 2954 moveto
3995 2954 lineto
3995 3749 lineto
3962 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3603 2462 3636 3257 setbbox
3603 2462 moveto
3636 2462 lineto
3636 3257 lineto
3603 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
4130 1803 4264 3749 setbbox
4130 1803 moveto
4264 1803 lineto
4264 3749 lineto
4130 3749 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
4180 1853 4213 3749 setbbox
4180 1853 moveto
4213 1853 lineto
4213 3749 lineto
4180 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3821 1361 3854 3257 setbbox
3821 1361 moveto
3854 1361 lineto
3854 3257 lineto
3821 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
4348 2744 4482 3749 setbbox
4348 2744 moveto
4482 2744 lineto
4482 3749 lineto
4348 3749 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
4398 2794 4431 3749 setbbox
4398 2794 moveto
4431 2794 lineto
4431 3749 lineto
4398 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4039 2302 4072 3257 setbbox
4039 2302 moveto
4072 2302 lineto
4072 3257 lineto
4039 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
newpath
systemdict
begin
4566 1534 4691 3749 setbbox
4566 1534 moveto
4691 1534 lineto
4691 3749 lineto
4566 3749 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
4616 1584 4649 3749 setbbox
4616 1584 moveto
4649 1584 lineto
4649 3749 lineto
4616 3749 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4257 1092 4290 3257 setbbox
4257 1092 moveto
4290 1092 lineto
4290 3257 lineto
4257 3257 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
+0 nxsetgray
1 setlinewidth
gsave
newpath
systemdict
begin
1404 1134 1404 3749 setbbox
1404 1134 moveto
1404 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
1363 3749 1404 3749 setbbox
1363 3749 moveto
1404 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
1363 3226 1404 3226 setbbox
1363 3226 moveto
1404 3226 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
1363 2703 1404 2703 setbbox
1363 2703 moveto
1404 2703 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
1363 2180 1404 2180 setbbox
1363 2180 moveto
1404 2180 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
1363 1657 1404 1657 setbbox
1363 1657 moveto
1404 1657 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
1363 1134 1404 1134 setbbox
1363 1134 moveto
1404 1134 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
1404 3749 4675 3749 setbbox
1404 3749 moveto
4675 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
1404 3749 1404 3790 setbbox
1404 3790 moveto
1404 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
1622 3749 1622 3790 setbbox
1622 3790 moveto
1622 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
1840 3749 1840 3790 setbbox
1840 3790 moveto
1840 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
2058 3749 2058 3790 setbbox
2058 3790 moveto
2058 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
2276 3749 2276 3790 setbbox
2276 3790 moveto
2276 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
2494 3749 2494 3790 setbbox
2494 3790 moveto
2494 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
2712 3749 2712 3790 setbbox
2712 3790 moveto
2712 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
2930 3749 2930 3790 setbbox
2930 3790 moveto
2930 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
3149 3749 3149 3790 setbbox
3149 3790 moveto
3149 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
3367 3749 3367 3790 setbbox
3367 3790 moveto
3367 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
3585 3749 3585 3790 setbbox
3585 3790 moveto
3585 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
3803 3749 3803 3790 setbbox
3803 3790 moveto
3803 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
4021 3749 4021 3790 setbbox
4021 3790 moveto
4021 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
4239 3749 4239 3790 setbbox
4239 3790 moveto
4239 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
4457 3749 4457 3790 setbbox
4457 3790 moveto
4457 3749 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
4675 3749 4675 3790 setbbox
4675 3790 moveto
4675 3749 lineto
end
stroke
grestore
/Helvetica-Bold findfont +1 scalefont [160 0 0 -160 0 0] makefont
23
exch
defineuserobject
23 execuserobject setfont
+653 +713 moveto
(Average communication cost per processor) show
/Helvetica findfont +1 scalefont [133 0 0 -133 0 0] makefont
24
exch
defineuserobject
24 execuserobject setfont
+1229 +3792 moveto
(0) show
+785 +3269 moveto
(5000000) show
+711 +2746 moveto
(10000000) show
+711 +2223 moveto
(15000000) show
+711 +1700 moveto
(20000000) show
+711 +1177 moveto
(25000000) show
+1476 +3984 moveto
(1) show
+1694 +3984 moveto
(2) show
+1912 +3984 moveto
(3) show
+2130 +3984 moveto
(4) show
+2348 +3984 moveto
(5) show
+2566 +3984 moveto
(6) show
+2784 +3984 moveto
(7) show
+3003 +3984 moveto
(8) show
+3221 +3984 moveto
(9) show
+3402 +3984 moveto
(10) show
+3620 +3984 moveto
(11) show
+3838 +3984 moveto
(12) show
+4056 +3984 moveto
(13) show
+4274 +3984 moveto
(14) show
+4492 +3984 moveto
(15) show
/Helvetica-Bold findfont +1 scalefont [133 0 0 -133 0 0] makefont
25
exch
defineuserobject
25 execuserobject setfont
+2699 +4209 moveto
(case index) show
/Helvetica-Bold findfont +1 scalefont [0 -133 -133 0 0 0] makefont
40
exch
defineuserobject
40 execuserobject setfont
+620 +3072 moveto
(co) show
+620 +2917 moveto
(st) show
+620 +2799 moveto
(\() show
+620 +2755 moveto
(m) show
+620 +2637 moveto
(ic) show
+620 +2526 moveto
(r) show
+620 +2474 moveto
(o) show
+620 +2393 moveto
(se) show
+620 +2245 moveto
(co) show
+620 +2090 moveto
(n) show
+620 +2009 moveto
(d) show
+620 +1928 moveto
(s\)) show
+1 nxsetgray
gsave
newpath
systemdict
begin
4742 3270 6016 4183 setbbox
4742 3270 moveto
6016 3270 lineto
6016 4183 lineto
4742 4183 lineto
end
fill
grestore
+0 nxsetgray
gsave
newpath
systemdict
begin
4741 3269 6017 4184 setbbox
4741 3269 moveto
6017 3269 lineto
6017 4184 lineto
4741 4184 lineto
closepath
end
stroke
grestore
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
4780 3326 4861 3407 setbbox
4780 3326 moveto
4861 3326 lineto
4861 3407 lineto
4780 3407 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
8 setlinewidth
gsave
newpath
systemdict
begin
4421 2834 4502 2915 setbbox
4421 2834 moveto
4502 2834 lineto
4502 2915 lineto
4421 2915 lineto
closepath
end
stroke
grestore
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
24 execuserobject setfont
+4893 +3411 moveto
(Greedy) show
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
4780 3509 4861 3590 setbbox
4780 3509 moveto
4861 3509 lineto
4861 3590 lineto
4780 3590 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4421 3017 4502 3098 setbbox
4421 3017 moveto
4502 3017 lineto
4502 3098 lineto
4421 3098 lineto
closepath
end
stroke
grestore
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
+4893 +3594 moveto
(Greedy-Refine) show
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
4780 3692 4861 3773 setbbox
4780 3692 moveto
4861 3692 lineto
4861 3773 lineto
4780 3773 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4421 3200 4502 3281 setbbox
4421 3200 moveto
4502 3200 lineto
4502 3281 lineto
4421 3281 lineto
closepath
end
stroke
grestore
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
+4893 +3777 moveto
(Random ) show
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
4780 3875 4861 3956 setbbox
4780 3875 moveto
4861 3875 lineto
4861 3956 lineto
4780 3956 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4421 3383 4502 3464 setbbox
4421 3383 moveto
4502 3383 lineto
4502 3464 lineto
4421 3464 lineto
closepath
end
stroke
grestore
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
+4893 +3960 moveto
(Random-refine) show
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
4780 4058 4861 4139 setbbox
4780 4058 moveto
4861 4058 lineto
4861 4139 lineto
4780 4139 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -62.685356 683.640015] matrix invertmatrix concat
[0.12 0 0 -0.12 -19.605339 624.599976] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4421 3566 4502 3647 setbbox
4421 3566 moveto
4502 3566 lineto
4502 3647 lineto
4421 3647 lineto
closepath
end
stroke
grestore
[0.12 0 0 -0.12 -19.605339 624.599976] matrix invertmatrix concat
[0.12 0 0 -0.12 -62.685356 683.640015] concat
+4893 +4143 moveto
(Branch and bound) show
TailorGroupEnd
grestore
gsave
[1 0 0 -1 0 612] concat
grestore
grestore
%%Trailer
end
showpage
%%DocumentFonts: Helvetica-Bold
%%+ Helvetica

%%EndDocument
 @endspecial 2177 9531 a Fg(Fig.)29 b(1.)52 b Fh(Av)l(erage)f(Comm)l
(unication)i(Cost)d(P)l(er)h(Pro)t(cessor)p eop
%%Page: 10 10
10 9 bop 1228 4268 a @beginspecial 0 @llx 179 @lly 661
@urx 612 @ury 3240 @rwi @setspecial
%%BeginDocument: efficiency.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /private/auto875000135/brunner/Papers/papers-nocvs/branchAndBound99/efficiency.eps
%%Creator: Tailor
%%CreationDate: Fri Jun  4 16:25:11 1999
%%For: brunner
%%DocumentFonts: (atend)
%%pages: 0 0
%%BoundingBox: 0 179 661 612
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

%%BeginResource: procset (Tailor 2.0)
/TailorDict 10 dict def TailorDict begin
/TailorGroupBegin {pop} def /TailorGroupEnd {} def
/TailorBlockBegin {pop pop pop} def /TailorBlockEnd {} def
/TailorSetUniformStroke {pop} def
/setoverprint where {pop} {/setoverprint {pop} def} ifelse
end
%%EndResource

gsave
-20 -1.094696 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
TailorDict begin
%%EndSetup
gsave
0 0 792 612 rectclip
0 0 792 612 rectclip
gsave
0 setgray
1 setlinewidth
(* Title: efficiency.xls\012* Creator: Windows NT 4.0\012* Creation date: 16:35 5/31/1999\012) TailorGroupBegin
[1 0 0 1 0 0] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
0.754006 nxsetgray
gsave
newpath
systemdict
begin
+816 +983 +5118 +3951 setbbox
+816 +983 moveto
+5118 +983 lineto
+5118 +3951 lineto
+816 +3951 lineto
+816 +983 lineto
closepath
end
eofill
grestore
(* Group Created Automatically *) TailorGroupBegin
gsave
newpath
systemdict
begin
816 3456 5118 3457 setbbox
816 3456 moveto
5118 3456 lineto
5118 3457 lineto
816 3457 lineto
closepath
end
eoclip
+0 nxsetgray
gsave
newpath
systemdict
begin
816 3456 5118 3456 setbbox
816 3456 moveto
5118 3456 lineto
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
newpath
systemdict
begin
816 2962 5118 2963 setbbox
816 2962 moveto
5118 2962 lineto
5118 2963 lineto
816 2963 lineto
closepath
end
eoclip
+0 nxsetgray
gsave
newpath
systemdict
begin
816 2962 5118 2962 setbbox
816 2962 moveto
5118 2962 lineto
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
newpath
systemdict
begin
816 2467 5118 2468 setbbox
816 2467 moveto
5118 2467 lineto
5118 2468 lineto
816 2468 lineto
closepath
end
eoclip
+0 nxsetgray
gsave
newpath
systemdict
begin
816 2467 5118 2467 setbbox
816 2467 moveto
5118 2467 lineto
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
newpath
systemdict
begin
816 1972 5118 1973 setbbox
816 1972 moveto
5118 1972 lineto
5118 1973 lineto
816 1973 lineto
closepath
end
eoclip
+0 nxsetgray
gsave
newpath
systemdict
begin
816 1972 5118 1972 setbbox
816 1972 moveto
5118 1972 lineto
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
newpath
systemdict
begin
816 1478 5118 1479 setbbox
816 1478 moveto
5118 1478 lineto
5118 1479 lineto
816 1479 lineto
closepath
end
eoclip
+0 nxsetgray
gsave
newpath
systemdict
begin
816 1478 5118 1478 setbbox
816 1478 moveto
5118 1478 lineto
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
newpath
systemdict
begin
816 983 5118 984 setbbox
816 983 moveto
5118 983 lineto
5118 984 lineto
816 984 lineto
closepath
end
eoclip
+0 nxsetgray
gsave
newpath
systemdict
begin
816 983 5118 983 setbbox
816 983 moveto
5118 983 lineto
end
stroke
grestore
grestore
TailorGroupEnd
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0.5 nxsetgray
8 setlinewidth
1 setlinecap
gsave
newpath
systemdict
begin
457 491 4759 3459 setbbox
457 491 moveto
4759 491 lineto
4759 3459 lineto
457 3459 lineto
closepath
end
stroke
grestore
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
816 1435 943 3951 setbbox
816 1435 moveto
943 1435 lineto
943 3951 lineto
816 3951 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
849 1485 892 3951 setbbox
849 1485 moveto
892 1485 lineto
892 3951 lineto
849 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
490 993 533 3459 setbbox
490 993 moveto
533 993 lineto
533 3459 lineto
490 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1086 1468 1230 3951 setbbox
1086 1468 moveto
1230 1468 lineto
1230 3951 lineto
1086 3951 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
1136 1518 1179 3951 setbbox
1136 1518 moveto
1179 1518 lineto
1179 3951 lineto
1136 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
777 1026 820 3459 setbbox
777 1026 moveto
820 1026 lineto
820 3459 lineto
777 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1373 2630 1517 3951 setbbox
1373 2630 moveto
1517 2630 lineto
1517 3951 lineto
1373 3951 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
1423 2680 1466 3951 setbbox
1423 2680 moveto
1466 2680 lineto
1466 3951 lineto
1423 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1064 2188 1107 3459 setbbox
1064 2188 moveto
1107 2188 lineto
1107 3459 lineto
1064 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1659 3190 1803 3951 setbbox
1659 3190 moveto
1803 3190 lineto
1803 3951 lineto
1659 3951 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
1709 3240 1752 3951 setbbox
1709 3240 moveto
1752 3240 lineto
1752 3951 lineto
1709 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1350 2748 1393 3459 setbbox
1350 2748 moveto
1393 2748 lineto
1393 3459 lineto
1350 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1946 3051 2090 3951 setbbox
1946 3051 moveto
2090 3051 lineto
2090 3951 lineto
1946 3951 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
1996 3101 2039 3951 setbbox
1996 3101 moveto
2039 3101 lineto
2039 3951 lineto
1996 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1637 2609 1680 3459 setbbox
1637 2609 moveto
1680 2609 lineto
1680 3459 lineto
1637 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2233 3251 2377 3951 setbbox
2233 3251 moveto
2377 3251 lineto
2377 3951 lineto
2233 3951 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
2283 3301 2326 3951 setbbox
2283 3301 moveto
2326 3301 lineto
2326 3951 lineto
2283 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1924 2809 1967 3459 setbbox
1924 2809 moveto
1967 2809 lineto
1967 3459 lineto
1924 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2520 2984 2664 3951 setbbox
2520 2984 moveto
2664 2984 lineto
2664 3951 lineto
2520 3951 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
2570 3034 2613 3951 setbbox
2570 3034 moveto
2613 3034 lineto
2613 3951 lineto
2570 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2211 2542 2254 3459 setbbox
2211 2542 moveto
2254 2542 lineto
2254 3459 lineto
2211 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2807 3240 2951 3951 setbbox
2807 3240 moveto
2951 3240 lineto
2951 3951 lineto
2807 3951 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
2857 3290 2900 3951 setbbox
2857 3290 moveto
2900 3290 lineto
2900 3951 lineto
2857 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2498 2798 2541 3459 setbbox
2498 2798 moveto
2541 2798 lineto
2541 3459 lineto
2498 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3093 2809 3237 3951 setbbox
3093 2809 moveto
3237 2809 lineto
3237 3951 lineto
3093 3951 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
3143 2859 3186 3951 setbbox
3143 2859 moveto
3186 2859 lineto
3186 3951 lineto
3143 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2784 2367 2827 3459 setbbox
2784 2367 moveto
2827 2367 lineto
2827 3459 lineto
2784 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3380 3376 3524 3951 setbbox
3380 3376 moveto
3524 3376 lineto
3524 3951 lineto
3380 3951 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
3430 3426 3473 3951 setbbox
3430 3426 moveto
3473 3426 lineto
3473 3951 lineto
3430 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3071 2934 3114 3459 setbbox
3071 2934 moveto
3114 2934 lineto
3114 3459 lineto
3071 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3667 3235 3811 3951 setbbox
3667 3235 moveto
3811 3235 lineto
3811 3951 lineto
3667 3951 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
3717 3285 3760 3951 setbbox
3717 3285 moveto
3760 3285 lineto
3760 3951 lineto
3717 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3358 2793 3401 3459 setbbox
3358 2793 moveto
3401 2793 lineto
3401 3459 lineto
3358 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3954 3224 4098 3951 setbbox
3954 3224 moveto
4098 3224 lineto
4098 3951 lineto
3954 3951 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
4004 3274 4047 3951 setbbox
4004 3274 moveto
4047 3274 lineto
4047 3951 lineto
4004 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3645 2782 3688 3459 setbbox
3645 2782 moveto
3688 2782 lineto
3688 3459 lineto
3645 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4241 3162 4385 3951 setbbox
4241 3162 moveto
4385 3162 lineto
4385 3951 lineto
4241 3951 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
4291 3212 4334 3951 setbbox
4291 3212 moveto
4334 3212 lineto
4334 3951 lineto
4291 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3932 2720 3975 3459 setbbox
3932 2720 moveto
3975 2720 lineto
3975 3459 lineto
3932 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4527 3565 4671 3951 setbbox
4527 3565 moveto
4671 3565 lineto
4671 3951 lineto
4527 3951 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
4577 3615 4620 3951 setbbox
4577 3615 moveto
4620 3615 lineto
4620 3951 lineto
4577 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4218 3123 4261 3459 setbbox
4218 3123 moveto
4261 3123 lineto
4261 3459 lineto
4218 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4814 3385 4958 3951 setbbox
4814 3385 moveto
4958 3385 lineto
4958 3951 lineto
4814 3951 lineto
closepath
end
eoclip
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
4864 3435 4907 3951 setbbox
4864 3435 moveto
4907 3435 lineto
4907 3951 lineto
4864 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4505 2943 4548 3459 setbbox
4505 2943 moveto
4548 2943 lineto
4548 3459 lineto
4505 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
842.999023 1435 986.999023 3951 setbbox
843 1435 moveto
986.999023 1435 lineto
986.999023 3951 lineto
842.999023 3951 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
893 1485 936 3951 setbbox
893 1485 moveto
936 1485 lineto
936 3951 lineto
893 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
534 993 577 3459 setbbox
534 993 moveto
577 993 lineto
577 3459 lineto
534 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1130 1468 1274 3951 setbbox
1130 1468 moveto
1274 1468 lineto
1274 3951 lineto
1130 3951 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
1180 1518 1223 3951 setbbox
1180 1518 moveto
1223 1518 lineto
1223 3951 lineto
1180 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
821 1026 864 3459 setbbox
821 1026 moveto
864 1026 lineto
864 3459 lineto
821 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1417 2526 1561 3951 setbbox
1417 2526 moveto
1561 2526 lineto
1561 3951 lineto
1417 3951 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
1467 2576 1510 3951 setbbox
1467 2576 moveto
1510 2576 lineto
1510 3951 lineto
1467 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1108 2084 1151 3459 setbbox
1108 2084 moveto
1151 2084 lineto
1151 3459 lineto
1108 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1703 3117 1847 3951 setbbox
1703 3117 moveto
1847 3117 lineto
1847 3951 lineto
1703 3951 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
1753 3167 1796 3951 setbbox
1753 3167 moveto
1796 3167 lineto
1796 3951 lineto
1753 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1394 2675 1437 3459 setbbox
1394 2675 moveto
1437 2675 lineto
1437 3459 lineto
1394 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1990 2986 2134 3951 setbbox
1990 2986 moveto
2134 2986 lineto
2134 3951 lineto
1990 3951 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
2040 3036 2083 3951 setbbox
2040 3036 moveto
2083 3036 lineto
2083 3951 lineto
2040 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1681 2544 1724 3459 setbbox
1681 2544 moveto
1724 2544 lineto
1724 3459 lineto
1681 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2277 3195 2421 3951 setbbox
2277 3195 moveto
2421 3195 lineto
2421 3951 lineto
2277 3951 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
2327 3245 2370 3951 setbbox
2327 3245 moveto
2370 3245 lineto
2370 3951 lineto
2327 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1968 2753 2011 3459 setbbox
1968 2753 moveto
2011 2753 lineto
2011 3459 lineto
1968 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2564 2890 2708 3951 setbbox
2564 2890 moveto
2708 2890 lineto
2708 3951 lineto
2564 3951 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
2614 2940 2657 3951 setbbox
2614 2940 moveto
2657 2940 lineto
2657 3951 lineto
2614 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2255 2448 2298 3459 setbbox
2255 2448 moveto
2298 2448 lineto
2298 3459 lineto
2255 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2851 3160 2995 3951 setbbox
2851 3160 moveto
2995 3160 lineto
2995 3951 lineto
2851 3951 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
2901 3210 2944 3951 setbbox
2901 3210 moveto
2944 3210 lineto
2944 3951 lineto
2901 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2542 2718 2585 3459 setbbox
2542 2718 moveto
2585 2718 lineto
2585 3459 lineto
2542 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3137 2610 3281 3951 setbbox
3137 2610 moveto
3281 2610 lineto
3281 3951 lineto
3137 3951 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
3187 2660 3230 3951 setbbox
3187 2660 moveto
3230 2660 lineto
3230 3951 lineto
3187 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2828 2168 2871 3459 setbbox
2828 2168 moveto
2871 2168 lineto
2871 3459 lineto
2828 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3424 3307 3568 3951 setbbox
3424 3307 moveto
3568 3307 lineto
3568 3951 lineto
3424 3951 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
3474 3357 3517 3951 setbbox
3474 3357 moveto
3517 3357 lineto
3517 3951 lineto
3474 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3115 2865 3158 3459 setbbox
3115 2865 moveto
3158 2865 lineto
3158 3459 lineto
3115 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3711 3187 3855 3951 setbbox
3711 3187 moveto
3855 3187 lineto
3855 3951 lineto
3711 3951 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
3761 3237 3804 3951 setbbox
3761 3237 moveto
3804 3237 lineto
3804 3951 lineto
3761 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3402 2745 3445 3459 setbbox
3402 2745 moveto
3445 2745 lineto
3445 3459 lineto
3402 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3998 3159 4142 3951 setbbox
3998 3159 moveto
4142 3159 lineto
4142 3951 lineto
3998 3951 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
4048 3209 4091 3951 setbbox
4048 3209 moveto
4091 3209 lineto
4091 3951 lineto
4048 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3689 2717 3732 3459 setbbox
3689 2717 moveto
3732 2717 lineto
3732 3459 lineto
3689 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4285 3042 4429 3951 setbbox
4285 3042 moveto
4429 3042 lineto
4429 3951 lineto
4285 3951 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
4335 3092 4378 3951 setbbox
4335 3092 moveto
4378 3092 lineto
4378 3951 lineto
4335 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3976 2600 4019 3459 setbbox
3976 2600 moveto
4019 2600 lineto
4019 3459 lineto
3976 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4571 3549 4715 3951 setbbox
4571 3549 moveto
4715 3549 lineto
4715 3951 lineto
4571 3951 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
4621 3599 4664 3951 setbbox
4621 3599 moveto
4664 3599 lineto
4664 3951 lineto
4621 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4262 3107 4305 3459 setbbox
4262 3107 moveto
4305 3107 lineto
4305 3459 lineto
4262 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4858 3353 5002 3951 setbbox
4858 3353 moveto
5002 3353 lineto
5002 3951 lineto
4858 3951 lineto
closepath
end
eoclip
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
4908 3403 4951 3951 setbbox
4908 3403 moveto
4951 3403 lineto
4951 3951 lineto
4908 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4549 2911 4592 3459 setbbox
4549 2911 moveto
4592 2911 lineto
4592 3459 lineto
4549 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
887 2191 1032 3951 setbbox
887 2191 moveto
1032 2191 lineto
1032 3951 lineto
887 3951 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
937 2241 981 3951 setbbox
937 2241 moveto
981 2241 lineto
981 3951 lineto
937 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
578 1749 622 3459 setbbox
578 1749 moveto
622 1749 lineto
622 3459 lineto
578 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1174 2480 1319 3951 setbbox
1174 2480 moveto
1319 2480 lineto
1319 3951 lineto
1174 3951 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
1224 2530 1268 3951 setbbox
1224 2530 moveto
1268 2530 lineto
1268 3951 lineto
1224 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
865 2038 909 3459 setbbox
865 2038 moveto
909 2038 lineto
909 3459 lineto
865 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1461 2453 1605 3951 setbbox
1461 2453 moveto
1605 2453 lineto
1605 3951 lineto
1461 3951 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
1511 2503 1554 3951 setbbox
1511 2503 moveto
1554 2503 lineto
1554 3951 lineto
1511 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1152 2011 1195 3459 setbbox
1152 2011 moveto
1195 2011 lineto
1195 3459 lineto
1152 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1747 2650 1892 3951 setbbox
1747 2650 moveto
1892 2650 lineto
1892 3951 lineto
1747 3951 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
1797 2700 1841 3951 setbbox
1797 2700 moveto
1841 2700 lineto
1841 3951 lineto
1797 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1438 2208 1482 3459 setbbox
1438 2208 moveto
1482 2208 lineto
1482 3459 lineto
1438 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2034 2704 2179 3951 setbbox
2034 2704 moveto
2179 2704 lineto
2179 3951 lineto
2034 3951 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
2084 2754 2128 3951 setbbox
2084 2754 moveto
2128 2754 lineto
2128 3951 lineto
2084 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1725 2262 1769 3459 setbbox
1725 2262 moveto
1769 2262 lineto
1769 3459 lineto
1725 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2321 2882 2466 3951 setbbox
2321 2882 moveto
2466 2882 lineto
2466 3951 lineto
2321 3951 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
2371 2932 2415 3951 setbbox
2371 2932 moveto
2415 2932 lineto
2415 3951 lineto
2371 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2012 2440 2056 3459 setbbox
2012 2440 moveto
2056 2440 lineto
2056 3459 lineto
2012 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2608 2764 2753 3951 setbbox
2608 2764 moveto
2753 2764 lineto
2753 3951 lineto
2608 3951 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
2658 2814 2702 3951 setbbox
2658 2814 moveto
2702 2814 lineto
2702 3951 lineto
2658 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2299 2322 2343 3459 setbbox
2299 2322 moveto
2343 2322 lineto
2343 3459 lineto
2299 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2895 2935 3039 3951 setbbox
2895 2935 moveto
3039 2935 lineto
3039 3951 lineto
2895 3951 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
2945 2985 2988 3951 setbbox
2945 2985 moveto
2988 2985 lineto
2988 3951 lineto
2945 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2586 2493 2629 3459 setbbox
2586 2493 moveto
2629 2493 lineto
2629 3459 lineto
2586 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3181 2866 3326 3951 setbbox
3181 2866 moveto
3326 2866 lineto
3326 3951 lineto
3181 3951 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
3231 2916 3275 3951 setbbox
3231 2916 moveto
3275 2916 lineto
3275 3951 lineto
3231 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2872 2424 2916 3459 setbbox
2872 2424 moveto
2916 2424 lineto
2916 3459 lineto
2872 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3468 3026 3613 3951 setbbox
3468 3026 moveto
3613 3026 lineto
3613 3951 lineto
3468 3951 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
3518 3076 3562 3951 setbbox
3518 3076 moveto
3562 3076 lineto
3562 3951 lineto
3518 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3159 2584 3203 3459 setbbox
3159 2584 moveto
3203 2584 lineto
3203 3459 lineto
3159 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3755 2952 3900 3951 setbbox
3755 2952 moveto
3900 2952 lineto
3900 3951 lineto
3755 3951 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
3805 3002 3849 3951 setbbox
3805 3002 moveto
3849 3002 lineto
3849 3951 lineto
3805 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3446 2510 3490 3459 setbbox
3446 2510 moveto
3490 2510 lineto
3490 3459 lineto
3446 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4042 3102 4187 3951 setbbox
4042 3102 moveto
4187 3102 lineto
4187 3951 lineto
4042 3951 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
4092 3152 4136 3951 setbbox
4092 3152 moveto
4136 3152 lineto
4136 3951 lineto
4092 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3733 2660 3777 3459 setbbox
3733 2660 moveto
3777 2660 lineto
3777 3459 lineto
3733 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4329 3025 4473 3951 setbbox
4329 3025 moveto
4473 3025 lineto
4473 3951 lineto
4329 3951 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
4379 3075 4422 3951 setbbox
4379 3075 moveto
4422 3075 lineto
4422 3951 lineto
4379 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4020 2583 4063 3459 setbbox
4020 2583 moveto
4063 2583 lineto
4063 3459 lineto
4020 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4615 3168 4760 3951 setbbox
4615 3168 moveto
4760 3168 lineto
4760 3951 lineto
4615 3951 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
4665 3218 4709 3951 setbbox
4665 3218 moveto
4709 3218 lineto
4709 3951 lineto
4665 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4306 2726 4350 3459 setbbox
4306 2726 moveto
4350 2726 lineto
4350 3459 lineto
4306 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4902 3087 5047 3951 setbbox
4902 3087 moveto
5047 3087 lineto
5047 3951 lineto
4902 3951 lineto
closepath
end
eoclip
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
4952 3137 4996 3951 setbbox
4952 3137 moveto
4996 3137 lineto
4996 3951 lineto
4952 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4593 2645 4637 3459 setbbox
4593 2645 moveto
4637 2645 lineto
4637 3459 lineto
4593 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
932 2191 1076 3951 setbbox
932 2191 moveto
1076 2191 lineto
1076 3951 lineto
932 3951 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
982 2241 1025 3951 setbbox
982 2241 moveto
1025 2241 lineto
1025 3951 lineto
982 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
623 1749 665.999023 3459 setbbox
623 1749 moveto
665.999023 1749 lineto
665.999023 3459 lineto
623 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1219 2480 1363 3951 setbbox
1219 2480 moveto
1363 2480 lineto
1363 3951 lineto
1219 3951 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
1269 2530 1312 3951 setbbox
1269 2530 moveto
1312 2530 lineto
1312 3951 lineto
1269 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
910 2038 953 3459 setbbox
910 2038 moveto
953 2038 lineto
953 3459 lineto
910 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1505 2204 1649 3951 setbbox
1505 2204 moveto
1649 2204 lineto
1649 3951 lineto
1505 3951 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
1555 2254 1598 3951 setbbox
1555 2254 moveto
1598 2254 lineto
1598 3951 lineto
1555 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1196 1762 1239 3459 setbbox
1196 1762 moveto
1239 1762 lineto
1239 3459 lineto
1196 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1792 2228 1936 3951 setbbox
1792 2228 moveto
1936 2228 lineto
1936 3951 lineto
1792 3951 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
1842 2278 1885 3951 setbbox
1842 2278 moveto
1885 2278 lineto
1885 3951 lineto
1842 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1483 1786 1526 3459 setbbox
1483 1786 moveto
1526 1786 lineto
1526 3459 lineto
1483 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2079 2521 2223 3951 setbbox
2079 2521 moveto
2223 2521 lineto
2223 3951 lineto
2079 3951 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
2129 2571 2172 3951 setbbox
2129 2571 moveto
2172 2571 lineto
2172 3951 lineto
2129 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1770 2079 1813 3459 setbbox
1770 2079 moveto
1813 2079 lineto
1813 3459 lineto
1770 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2366 2795 2510 3951 setbbox
2366 2795 moveto
2510 2795 lineto
2510 3951 lineto
2366 3951 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
2416 2845 2459 3951 setbbox
2416 2845 moveto
2459 2845 lineto
2459 3951 lineto
2416 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2057 2353 2100 3459 setbbox
2057 2353 moveto
2100 2353 lineto
2100 3459 lineto
2057 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2653 2643 2797 3951 setbbox
2653 2643 moveto
2797 2643 lineto
2797 3951 lineto
2653 3951 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
2703 2693 2746 3951 setbbox
2703 2693 moveto
2746 2693 lineto
2746 3951 lineto
2703 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2344 2201 2387 3459 setbbox
2344 2201 moveto
2387 2201 lineto
2387 3459 lineto
2344 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2939 2860 3083 3951 setbbox
2939 2860 moveto
3083 2860 lineto
3083 3951 lineto
2939 3951 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
2989 2910 3032 3951 setbbox
2989 2910 moveto
3032 2910 lineto
3032 3951 lineto
2989 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2630 2418 2673 3459 setbbox
2630 2418 moveto
2673 2418 lineto
2673 3459 lineto
2630 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3226 2652 3370 3951 setbbox
3226 2652 moveto
3370 2652 lineto
3370 3951 lineto
3226 3951 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
3276 2702 3319 3951 setbbox
3276 2702 moveto
3319 2702 lineto
3319 3951 lineto
3276 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2917 2210 2960 3459 setbbox
2917 2210 moveto
2960 2210 lineto
2960 3459 lineto
2917 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3513 2988 3657 3951 setbbox
3513 2988 moveto
3657 2988 lineto
3657 3951 lineto
3513 3951 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
3563 3038 3606 3951 setbbox
3563 3038 moveto
3606 3038 lineto
3606 3951 lineto
3563 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3204 2546 3247 3459 setbbox
3204 2546 moveto
3247 2546 lineto
3247 3459 lineto
3204 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3800 2753 3944 3951 setbbox
3800 2753 moveto
3944 2753 lineto
3944 3951 lineto
3800 3951 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
3850 2803 3893 3951 setbbox
3850 2803 moveto
3893 2803 lineto
3893 3951 lineto
3850 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3491 2311 3534 3459 setbbox
3491 2311 moveto
3534 2311 lineto
3534 3459 lineto
3491 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4087 2855 4231 3951 setbbox
4087 2855 moveto
4231 2855 lineto
4231 3951 lineto
4087 3951 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
4137 2905 4180 3951 setbbox
4137 2905 moveto
4180 2905 lineto
4180 3951 lineto
4137 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3778 2413 3821 3459 setbbox
3778 2413 moveto
3821 2413 lineto
3821 3459 lineto
3778 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4373 2870 4517 3951 setbbox
4373 2870 moveto
4517 2870 lineto
4517 3951 lineto
4373 3951 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
4423 2920 4466 3951 setbbox
4423 2920 moveto
4466 2920 lineto
4466 3951 lineto
4423 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4064 2428 4107 3459 setbbox
4064 2428 moveto
4107 2428 lineto
4107 3459 lineto
4064 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4660 2961 4804 3951 setbbox
4660 2961 moveto
4804 2961 lineto
4804 3951 lineto
4660 3951 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
4710 3011 4753 3951 setbbox
4710 3011 moveto
4753 3011 lineto
4753 3951 lineto
4710 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4351 2519 4394 3459 setbbox
4351 2519 moveto
4394 2519 lineto
4394 3459 lineto
4351 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4947 2952 5091 3951 setbbox
4947 2952 moveto
5091 2952 lineto
5091 3951 lineto
4947 3951 lineto
closepath
end
eoclip
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
4997 3002 5040 3951 setbbox
4997 3002 moveto
5040 3002 lineto
5040 3951 lineto
4997 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4638 2510 4681 3459 setbbox
4638 2510 moveto
4681 2510 lineto
4681 3459 lineto
4638 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
976 1433 1120 3951 setbbox
976 1433 moveto
1120 1433 lineto
1120 3951 lineto
976 3951 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
1026 1483 1069 3951 setbbox
1026 1483 moveto
1069 1483 lineto
1069 3951 lineto
1026 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
667 991 710 3459 setbbox
667 991 moveto
710 991 lineto
710 3459 lineto
667 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1263 1442 1407 3951 setbbox
1263 1442 moveto
1407 1442 lineto
1407 3951 lineto
1263 3951 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
1313 1492 1356 3951 setbbox
1313 1492 moveto
1356 1492 lineto
1356 3951 lineto
1313 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
954 1000 997 3459 setbbox
954 1000 moveto
997 1000 lineto
997 3459 lineto
954 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1549 1898 1693 3951 setbbox
1549 1898 moveto
1693 1898 lineto
1693 3951 lineto
1549 3951 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
1599 1948 1642 3951 setbbox
1599 1948 moveto
1642 1948 lineto
1642 3951 lineto
1599 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1240 1456 1283 3459 setbbox
1240 1456 moveto
1283 1456 lineto
1283 3459 lineto
1240 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
1836 1961 1980 3951 setbbox
1836 1961 moveto
1980 1961 lineto
1980 3951 lineto
1836 3951 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
1886 2011 1929 3951 setbbox
1886 2011 moveto
1929 2011 lineto
1929 3951 lineto
1886 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1527 1519 1570 3459 setbbox
1527 1519 moveto
1570 1519 lineto
1570 3459 lineto
1527 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2123 2307 2267 3951 setbbox
2123 2307 moveto
2267 2307 lineto
2267 3951 lineto
2123 3951 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
2173 2357 2216 3951 setbbox
2173 2357 moveto
2216 2357 lineto
2216 3951 lineto
2173 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
1814 1865 1857 3459 setbbox
1814 1865 moveto
1857 1865 lineto
1857 3459 lineto
1814 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2410 2415 2554 3951 setbbox
2410 2415 moveto
2554 2415 lineto
2554 3951 lineto
2410 3951 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
2460 2465 2503 3951 setbbox
2460 2465 moveto
2503 2465 lineto
2503 3951 lineto
2460 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2101 1973 2144 3459 setbbox
2101 1973 moveto
2144 1973 lineto
2144 3459 lineto
2101 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2697 2410 2841 3951 setbbox
2697 2410 moveto
2841 2410 lineto
2841 3951 lineto
2697 3951 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
2747 2460 2790 3951 setbbox
2747 2460 moveto
2790 2460 lineto
2790 3951 lineto
2747 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2388 1968 2431 3459 setbbox
2388 1968 moveto
2431 1968 lineto
2431 3459 lineto
2388 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
2983 2510 3127 3951 setbbox
2983 2510 moveto
3127 2510 lineto
3127 3951 lineto
2983 3951 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
3033 2560 3076 3951 setbbox
3033 2560 moveto
3076 2560 lineto
3076 3951 lineto
3033 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2674 2068 2717 3459 setbbox
2674 2068 moveto
2717 2068 lineto
2717 3459 lineto
2674 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3270 2551 3414 3951 setbbox
3270 2551 moveto
3414 2551 lineto
3414 3951 lineto
3270 3951 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
3320 2601 3363 3951 setbbox
3320 2601 moveto
3363 2601 lineto
3363 3951 lineto
3320 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
2961 2109 3004 3459 setbbox
2961 2109 moveto
3004 2109 lineto
3004 3459 lineto
2961 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3557 2675 3701 3951 setbbox
3557 2675 moveto
3701 2675 lineto
3701 3951 lineto
3557 3951 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
3607 2725 3650 3951 setbbox
3607 2725 moveto
3650 2725 lineto
3650 3951 lineto
3607 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3248 2233 3291 3459 setbbox
3248 2233 moveto
3291 2233 lineto
3291 3459 lineto
3248 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
3844 2677 3988 3951 setbbox
3844 2677 moveto
3988 2677 lineto
3988 3951 lineto
3844 3951 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
3894 2727 3937 3951 setbbox
3894 2727 moveto
3937 2727 lineto
3937 3951 lineto
3894 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3535 2235 3578 3459 setbbox
3535 2235 moveto
3578 2235 lineto
3578 3459 lineto
3535 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4131 2820 4275 3951 setbbox
4131 2820 moveto
4275 2820 lineto
4275 3951 lineto
4131 3951 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
4181 2870 4224 3951 setbbox
4181 2870 moveto
4224 2870 lineto
4224 3951 lineto
4181 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
3822 2378 3865 3459 setbbox
3822 2378 moveto
3865 2378 lineto
3865 3459 lineto
3822 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4417 2806 4561 3951 setbbox
4417 2806 moveto
4561 2806 lineto
4561 3951 lineto
4417 3951 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
4467 2856 4510 3951 setbbox
4467 2856 moveto
4510 2856 lineto
4510 3951 lineto
4467 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4108 2364 4151 3459 setbbox
4108 2364 moveto
4151 2364 lineto
4151 3459 lineto
4108 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4704 2924 4848 3951 setbbox
4704 2924 moveto
4848 2924 lineto
4848 3951 lineto
4704 3951 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
4754 2974 4797 3951 setbbox
4754 2974 moveto
4797 2974 lineto
4797 3951 lineto
4754 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4395 2482 4438 3459 setbbox
4395 2482 moveto
4438 2482 lineto
4438 3459 lineto
4395 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
(* Group Created Automatically *) TailorGroupBegin
gsave
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
newpath
systemdict
begin
4991 2885 5134 3951 setbbox
4991 2885 moveto
5134 2885 lineto
5134 3951 lineto
4991 3951 lineto
closepath
end
eoclip
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
5041 2935 5084 3951 setbbox
5041 2935 moveto
5084 2935 lineto
5084 3951 lineto
5041 3951 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4682 2443 4725 3459 setbbox
4682 2443 moveto
4725 2443 lineto
4725 3459 lineto
4682 3459 lineto
closepath
end
stroke
grestore
grestore
TailorGroupEnd
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
+0 nxsetgray
1 setlinewidth
gsave
newpath
systemdict
begin
816 983 816 3951 setbbox
816 983 moveto
816 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
791 3951 816 3951 setbbox
791 3951 moveto
816 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
791 3456 816 3456 setbbox
791 3456 moveto
816 3456 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
791 2962 816 2962 setbbox
791 2962 moveto
816 2962 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
791 2467 816 2467 setbbox
791 2467 moveto
816 2467 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
791 1972 816 1972 setbbox
791 1972 moveto
816 1972 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
791 1478 816 1478 setbbox
791 1478 moveto
816 1478 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
791 983 816 983 setbbox
791 983 moveto
816 983 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
816 3951 5118 3951 setbbox
816 3951 moveto
5118 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
816 3951 816 3976 setbbox
816 3976 moveto
816 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
1103 3951 1103 3976 setbbox
1103 3976 moveto
1103 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
1390 3951 1390 3976 setbbox
1390 3976 moveto
1390 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
1676 3951 1676 3976 setbbox
1676 3976 moveto
1676 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
1963 3951 1963 3976 setbbox
1963 3976 moveto
1963 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
2250 3951 2250 3976 setbbox
2250 3976 moveto
2250 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
2537 3951 2537 3976 setbbox
2537 3976 moveto
2537 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
2824 3951 2824 3976 setbbox
2824 3976 moveto
2824 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
3110 3951 3110 3976 setbbox
3110 3976 moveto
3110 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
3397 3951 3397 3976 setbbox
3397 3976 moveto
3397 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
3684 3951 3684 3976 setbbox
3684 3976 moveto
3684 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
3971 3951 3971 3976 setbbox
3971 3976 moveto
3971 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
4258 3951 4258 3976 setbbox
4258 3976 moveto
4258 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
4544 3951 4544 3976 setbbox
4544 3976 moveto
4544 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
4831 3951 4831 3976 setbbox
4831 3976 moveto
4831 3951 lineto
end
stroke
grestore
gsave
newpath
systemdict
begin
5118 3951 5118 3976 setbbox
5118 3976 moveto
5118 3951 lineto
end
stroke
grestore
/Helvetica-Bold findfont +1 scalefont [100 0 0 -100 0 0] makefont
47
exch
defineuserobject
47 execuserobject setfont
+2970 +720 moveto
(Efficiency) show
/Helvetica findfont +1 scalefont [83 0 0 -83 0 0] makefont
48
exch
defineuserobject
48 execuserobject setfont
+708 +3977 moveto
(0) show
+662 +3482 moveto
(20) show
+662 +2988 moveto
(40) show
+662 +2493 moveto
(60) show
+662 +1998 moveto
(80) show
+616 +1504 moveto
(100) show
+616 +1009 moveto
(120) show
+936 +4096 moveto
(1) show
+1223 +4096 moveto
(2) show
+1510 +4096 moveto
(3) show
+1797 +4096 moveto
(4) show
+2084 +4096 moveto
(5) show
+2370 +4096 moveto
(6) show
+2657 +4096 moveto
(7) show
+2944 +4096 moveto
(8) show
+3231 +4096 moveto
(9) show
+3495 +4096 moveto
(10) show
+3781 +4096 moveto
(11) show
+4068 +4096 moveto
(12) show
+4355 +4096 moveto
(13) show
+4642 +4096 moveto
(14) show
+4929 +4096 moveto
(15) show
/Helvetica-Bold findfont +1 scalefont [83 0 0 -83 0 0] makefont
49
exch
defineuserobject
49 execuserobject setfont
+2748 +4239 moveto
(Case index) show
/Helvetica-Bold findfont +1 scalefont [0 -83 -83 0 0 0] makefont
63
exch
defineuserobject
63 execuserobject setfont
+555 +2727 moveto
(E) show
+555 +2672 moveto
(f) show
+555 +2644 moveto
(f) show
+555 +2616 moveto
(i) show
+555 +2593 moveto
(c) show
+555 +2547 moveto
(i) show
+555 +2524 moveto
(e) show
+555 +2478 moveto
(n) show
+555 +2427 moveto
(c) show
+555 +2381 moveto
(y) show
+555 +2335 moveto
(\() show
+555 +2307 moveto
(%) show
+555 +2233 moveto
(\)) show
+1 nxsetgray
gsave
newpath
systemdict
begin
5186 2160 5991 2773 setbbox
5186 2160 moveto
5991 2160 lineto
5991 2773 lineto
5186 2773 lineto
end
fill
grestore
+0 nxsetgray
gsave
newpath
systemdict
begin
5185 2159 5992 2774 setbbox
5185 2159 moveto
5992 2159 lineto
5992 2774 lineto
5185 2774 lineto
closepath
end
stroke
grestore
+0.640996 nxsetgray
gsave
newpath
systemdict
begin
5213 2197 5263 2247 setbbox
5213 2197 moveto
5263 2197 lineto
5263 2247 lineto
5213 2247 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
8 setlinewidth
gsave
newpath
systemdict
begin
4854 1705 4904 1755 setbbox
4854 1705 moveto
4904 1705 lineto
4904 1755 lineto
4854 1755 lineto
closepath
end
stroke
grestore
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
48 execuserobject setfont
+5283 +2251 moveto
(Greedy) show
+0.335994 nxsetgray
gsave
newpath
systemdict
begin
5213 2320 5263 2370 setbbox
5213 2320 moveto
5263 2320 lineto
5263 2370 lineto
5213 2370 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4854 1828 4904 1878 setbbox
4854 1828 moveto
4904 1828 lineto
4904 1878 lineto
4854 1878 lineto
closepath
end
stroke
grestore
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
+5283 +2374 moveto
(Greedy-Refine) show
+0.977004 nxsetgray
gsave
newpath
systemdict
begin
5213 2443 5263 2493 setbbox
5213 2443 moveto
5263 2443 lineto
5263 2493 lineto
5213 2493 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4854 1951 4904 2001 setbbox
4854 1951 moveto
4904 1951 lineto
4904 2001 lineto
4854 2001 lineto
closepath
end
stroke
grestore
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
+5283 +2497 moveto
(Random) show
+0.940992 nxsetgray
gsave
newpath
systemdict
begin
5213 2566 5263 2616 setbbox
5213 2566 moveto
5263 2566 lineto
5263 2616 lineto
5213 2616 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4854 2074 4904 2124 setbbox
4854 2074 moveto
4904 2074 lineto
4904 2124 lineto
4854 2124 lineto
closepath
end
stroke
grestore
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
+5283 +2620 moveto
(Random-refine) show
+0.155995 nxsetgray
gsave
newpath
systemdict
begin
5213 2689 5263 2739 setbbox
5213 2689 moveto
5263 2689 lineto
5263 2739 lineto
5213 2739 lineto
closepath
end
eofill
grestore
[0.12 0 0 -0.12 -59.28936 689.676025] matrix invertmatrix concat
[0.12 0 0 -0.12 -16.209343 630.635986] concat
+0 nxsetgray
gsave
newpath
systemdict
begin
4854 2197 4904 2247 setbbox
4854 2197 moveto
4904 2197 lineto
4904 2247 lineto
4854 2247 lineto
closepath
end
stroke
grestore
[0.12 0 0 -0.12 -16.209343 630.635986] matrix invertmatrix concat
[0.12 0 0 -0.12 -59.28936 689.676025] concat
+5283 +2743 moveto
(Branch and bound) show
TailorGroupEnd
grestore
gsave
[1 0 0 -1 0 612] concat
grestore
grestore
%%Trailer
end
showpage
%%DocumentFonts: Helvetica-Bold
%%+ Helvetica

%%EndDocument
 @endspecial 3347 4783 a Fg(Fig.)29 b(2.)52 b Fh(E\016ciency)1046
5402 y Fj(This)61 b(grainsize)g(con)-5 b(trol)60 b(is)i(useful)f(to)g
(amortize)e(the)i(cost)h(of)f(parallel)e(ob)9 b(ject)61
b(creation.)1046 5601 y(A)76 b(parallel)e(searc)-5 b(h)77
b(allo)-5 b(ws)76 b(us)h(to)f(searc)-5 b(h)77 b(a)f(P-fold)g(larger)g
(searc)-5 b(h)77 b(space)g(within)d(the)1046 5800 y(same)c(time)f
(limit)d(using)71 b(P)g(pro)5 b(cessors,)71 b(whic)-5
b(h)70 b(are)h(a)-5 b(v)c(ailable)68 b(an)-5 b(yw)g(a)g(y)-14
b(.)71 b(Quan)-5 b(titativ)g(e)1046 5999 y(measuremen)g(ts)79
b(of)g(e\013ectiv)-5 b(eness)78 b(of)h(parallel)e(searc)-5
b(h)80 b(are)g(di\016cult)d(due)j(to)f(the)g(non-)1046
6199 y(complete)62 b(searc)-5 b(h)65 b(used)g(in)f(a)g(time-limited)59
b(pro)5 b(cedure.)64 b(W)-14 b(e)64 b(plan)g(to)g(study)g(this)g(issue)
1046 6398 y(further)55 b(in)g(the)g(con)-5 b(text)54
b(of)h(large)g(applications.)1046 7011 y Fc(4.3)192 b(Application)65
b(in)f(P)-5 b(arallel)61 b(Program)1046 7458 y Fj(All)43
b(the)i(ab)5 b(o)-5 b(v)g(e)45 b(results)g(w)-5 b(ere)45
b(for)f(runs)j(made)d(of)h(the)g(di\013eren)-5 b(t)44
b(algorithms)f(implemen)-5 b(ted)1046 7657 y(using)65
b(sim)-5 b(ulated)63 b(data.)i(W)-14 b(e)64 b(ha)-5 b(v)g(e)66
b(also)e(in)-5 b(tegrated)64 b(the)g(branc)-5 b(h)66
b(and)f(b)5 b(ound)66 b(strategy)1046 7856 y(with)47
b(a)h(parallel)d(b)5 b(enc)-5 b(hmark)47 b(program)h(and)g(the)g(load)f
(balancing)g(framew)-5 b(ork)46 b(describ)5 b(ed)1046
8055 y(in)64 b(the)g(in)-5 b(tro)5 b(duction.)62 b(The)j(program)f
(used)h(is)f(similar)d(to)j(a)h(ring)e(program.)h(A)g(certain)1046
8255 y(n)-5 b(um)g(b)5 b(er)63 b(of)g(concurren)-5 b(t)63
b(ob)9 b(jects)63 b(are)f(created)g(\(this)g(n)-5 b(um)g(b)5
b(er)63 b(can)g(b)5 b(e)63 b(sp)5 b(eci\014ed)62 b(at)g(the)1046
8454 y(command)d(line\).)f(These)i(p)5 b(erform)59 b(computation)g(and)
h(comm)-5 b(unicate)58 b(with)h(eac)-5 b(h)60 b(other)1046
8653 y(in)71 b(a)g(pre-determined)f(fashion.)i(The)f(computation)f
(time)f(is)i(generated)g(randomly)f(at)1046 8852 y(run)53
b(time.)e(The)h(comm)-5 b(unication)50 b(pattern)j(is)f(as)h(follo)-5
b(ws.)52 b(The)g(i'th)g(ob)9 b(ject)52 b(sends)i(a)e(pre-)1046
9052 y(de\014ned)44 b(sized)f(message)h(to)f(the)h(\(i+1\)th)d(ob)9
b(ject\(mo)c(d)42 b(the)i(n)-5 b(um)g(b)5 b(er)44 b(of)f(ob)9
b(jects\))43 b(and)h(also)1046 9251 y(to)56 b(ev)-5 b(ery)55
b(third)h(elemen)-5 b(t)54 b(from)i(then)g(on.)g(Using)g(automatic)e
(load)i(and)h(comm)-5 b(unication)1046 9450 y(measuremen)g(t)66
b(pro)-5 b(vided)66 b(b)-5 b(y)67 b(the)f(framew)-5 b(ork,)66
b(the)g(branc)-5 b(h-and-b)5 b(ound)69 b(strategy)d(suc-)1046
9649 y(cessfully)e(redistributed)g(ob)9 b(jects)65 b(to)g(pro)5
b(cessors)67 b(with)d(impro)-5 b(v)g(ed)65 b(p)5 b(erformance.)64
b(More)1046 9849 y(extensiv)-5 b(e)54 b(quan)-5 b(titativ)g(e)53
b(studies)i(are)g(b)5 b(eing)55 b(conducted.)p eop
%%Page: 11 11
11 10 bop 1046 897 a Ff(References)1046 1279 y Fh(1.)83
b(P)-13 b(.)73 b(M.)g(A.)g(Slo)t(ot)h(A.)f(Sc)l(honev)l(eld,)j(J.)d(F.)
h(de)g(Ronde.)135 b(Preserving)74 b(lo)t(calit)l(y)i(for)d(optimal)1249
1461 y(parallelism)53 b(in)f(task)f(allo)t(cation.)69
b(In)52 b Fa(HPCN)p Fh(,)f(pages)g(565{574,)e(1997.)1046
1644 y(2.)83 b(Rob)t(ert)49 b(K.)h(Brunner)g(and)g(Laxmik)-9
b(an)l(t)50 b(V.)f(Kal)l(\023)-73 b(e.)66 b(Adapting)50
b(to)f(load)h(on)f(w)l(orkstation)g(clus-)1249 1826 y(ters.)41
b(In)c Fa(The)j(Seventh)g(Symp)-8 b(osium)43 b(on)e(the)g(F)-12
b(r)k(ontiers)40 b(of)h(Massively)f(Par)-8 b(al)8 b(lel)41
b(Computation)p Fh(,)1249 2009 y(pages)51 b(106{112.)e(IEEE)h(Computer)
i(So)t(ciet)l(y)g(Press,)e(F)-13 b(ebruary)53 b(1999.)1046
2192 y(3.)83 b(L.)45 b(V.)g(Kal)l(\023)-73 b(e)47 b(and)f(Sanjeev)h
(Krishnan.)60 b(Charm++:)46 b(P)l(arallel)h(Programming)e(with)h
(Message-)1249 2374 y(Driv)l(en)51 b(Ob)9 b(jects.)65
b(In)50 b(Gregory)f(V.)h(Wilson)g(and)g(P)l(aul)f(Lu,)h(editors,)g
Fa(Par)-8 b(al)8 b(lel)54 b(Pr)-8 b(o)g(gr)g(amming)1249
2557 y(using)54 b(C++)p Fh(,)c(pages)h(175{213.)f(MIT)h(Press,)f(1996.)
1046 2740 y(4.)83 b(Laxmik)-9 b(an)l(t)46 b(Kal)l(\023)-73
b(e,)46 b(Rob)t(ert)g(Sk)l(eel,)h(Milind)h(Bhandark)-9
b(ar,)46 b(Rob)t(ert)g(Brunner,)g(A)l(ttila)g(Gurso)l(y)-13
b(,)1249 2922 y(Neal)37 b(Kra)l(w)l(etz,)f(James)h(Phillips,)h(Aritomo)
f(Shinozaki,)i(Krishnan)f(V)-13 b(aradara)9 b(jan,)36
b(and)h(Klaus)1249 3105 y(Sc)l(h)l(ulten.)118 b(NAMD2:)68
b(Greater)g(scalabilit)l(y)h(for)f(parallel)i(molecular)g(dynamics.)118
b Fa(Journal)1249 3288 y(Computational)57 b(Physics)p
Fh(,)51 b(1998.)67 b(In)52 b(press.)1046 3470 y(5.)83
b(George)41 b(Karypis)h(and)g(Vipin)i(Kumar.)53 b(P)l(arallel)42
b(m)l(ultilev)l(el)j(k-w)l(a)l(y)c(partitioning)i(sc)l(heme)f(for)1249
3653 y(irregular)60 b(graphs.)92 b(In)59 b Fa(Pr)-8 b(o)g(c)g(e)g(e)g
(dings)62 b(of)h(Sup)-8 b(er)g(c)g(omputing)64 b('96)p
Fh(,)59 b(Pittsburg,)g(P)-13 b(A,)58 b(No)l(v)l(em)l(b)t(er)1249
3836 y(1996.)1046 4018 y(6.)83 b(B.)38 b(W.)g(W)-13 b(ah)39
b(and)g(C.)f(F.)h(Y)-13 b(u.)48 b(Sto)t(c)l(hastic)39
b(mo)t(deling)i(of)d(branc)l(h-and-b)t(ound)k(algorithms)d(with)1249
4201 y(b)t(est-\014rst)51 b(searc)l(h.)68 b Fa(IEEE)55
b(T)-12 b(r)k(ansactions)55 b(on)h(Softwar)-8 b(e)55
b(Engine)-8 b(ering)p Fh(,)50 b(11:922{934,)f(1985.)1046
4384 y(7.)83 b(Chengzhong)69 b(Xu)g(and)g(F)-13 b(rancis)69
b(C.)f(M.)g(Lau.)119 b Fa(L)-8 b(o)g(ad)73 b(Balancing)e(In)g(Par)-8
b(al)8 b(lel)72 b(Computers)1249 4566 y(The)-8 b(ory)55
b(and)h(Pr)-8 b(actic)g(e)p Fh(.)67 b(Klu)l(w)l(er)52
b(Academic)h(Publishers,)g(1997.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
